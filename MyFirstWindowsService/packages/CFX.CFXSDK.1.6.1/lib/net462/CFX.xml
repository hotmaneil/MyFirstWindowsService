<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CFX</name>
    </assembly>
    <members>
        <member name="T:CFX.AreYouThereRequest">
            <summary>
            Allows any CFX endpoint to determine if another particular CFX endpoint is present on a CFX network.
            The response sends basic information about the endpoint, including its CFX Handle, and network
            hostname / address.
            <code language="none">
            {
              "CFXHandle": "SMTPlus.Model_21232.SN23123"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.AreYouThereRequest.CFXHandle">
            <summary>
            The handle of the endpoint to which the request is directed
            </summary>
        </member>
        <member name="T:CFX.AreYouThereResponse">
            <summary>
            Allows any CFX endpoint to determine if another particular CFX endpoint is present on a CFX network.
            The response sends basic information about the endpoint, including its CFX Handle, and network
            hostname / address.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "CFXHandle": "SMTPlus.Model_21232.SN23123",
              "RequestNetworkUri": "amqp://host33/",
              "RequestTargetAddress": "/queue/SN23123"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.AreYouThereResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.AreYouThereResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.AreYouThereResponse.CFXHandle">
            <summary>
            The handle of the endpoint that is responding
            </summary>
        </member>
        <member name="P:CFX.AreYouThereResponse.RequestNetworkUri">
            <summary>
            The network address / Uri to be used for requests to this endpoint
            </summary>
        </member>
        <member name="P:CFX.AreYouThereResponse.RequestTargetAddress">
            <summary>
            The AMQP 1.0 target address to be used for requests to this endpoint
            </summary>
        </member>
        <member name="T:CFX.CFXEnvelope">
            <summary>
            The <see cref="T:CFX.CFXEnvelope"/> class is the outer envelope or container in which all CFX messages are enclosed for transmission.
            Common properties, such as a globally unique identifier (ID) and the timestamp for the message (TimeStamp),
            are defined by this container class and are included with all CFX message transmissions.
            <code language="none">
            {
               "MessageName": "CFX.EndpointConnected",
               "Version": "1.3",
               "TimeStamp": "2018-03-26T16:52:25.3769532-04:00",
               "UniqueID": "f3b2c8ec-50b7-4c63-9cb3-2ed57c01880f",
               "Source": null,
               "Target": null,
               "RequestID": null,
               "MessageBody": {
                 "CFXHandle": "SMTPlus.Model_21232.SN23123",
                 "RequestNetworkUri": "amqp://host33/",
                 "RequestTargetAddress": "/queue/SN23123"
                }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.MessageName">
            <summary>
            The fully qualified name of the CFX message contained within the envelope.  For example, "CFX.Production.WorkStarted"
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.Version">
            <summary>
            The version of the CFX message contained within the payload of this envelope.  This is the version number
            (revision) of the published standard.
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.TimeStamp">
            <summary>
            The date and time when the event associated with this CFX message took place, NOT the time when the message was
            transmitted. The format must include the time zone, whether expressed in local time or UTC.
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.UniqueID">
            <summary>
            A globally unique ID used to identify this particualar message instance.  This ID is used to ensure messages are not
            processed more than once.  It is also used in cases where the receiver needs to identify the specific message that is 
            being replied to.
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.Source">
            <summary>
            The CFX Handle of the creator/publisher of this message.
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.Target">
            <summary>
            For request/response type messages, this is the CFX Handle of the endpoint to which the request is being made.
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.RequestID">
            <summary>
            For request/response type messages, this is a globally unique id which identifies a specific request/response pairing.  
            Each request/response pairing will have a unique and matching RequestId.
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.MessageBody">
            <summary>
            The message payload (The CFX message enclosed in this envelope).
            </summary>
        </member>
        <member name="T:CFX.CFXMessage">
            <summary>
            Abstract base class for all CFX Messages.  Contains no data members.  Provides for the
            serialization and deserialization of messages to and from JSON format.
            </summary>
        </member>
        <member name="M:CFX.CFXMessage.ToJson(System.Boolean)">
            <summary>
            Converts this message to a JSON formatting string
            </summary>
            <param name="formatted">Whether or not to format the JSON for easy human interpretation.  Adds whitespace and carriage returns.</param>
            <returns>A JSON formatted string</returns>
        </member>
        <member name="M:CFX.CFXMessage.FromTypeName(System.String)">
            <summary>
            Creates a new instance of a CFX message of the type specified in string format
            </summary>
            <param name="messageType">A fully qualified message type name in string format</param>
            <returns>The newly created instance of a CFX message</returns>
        </member>
        <member name="M:CFX.CFXMessage.FromJson``1(System.String)">
            <summary>
            Creates a new instance of a CFX message of the type specified, using the JSON data provided
            </summary>
            <typeparam name="T">The Type of message to create</typeparam>
            <param name="jsonData">A JSON representation of the message to create</param>
            <returns>The newly created instnace of a CFX message</returns>
        </member>
        <member name="M:CFX.CFXMessage.ToBytes">
            <summary>
            Converts this message to a binary representation in UTF8 format
            </summary>
            <returns>An array of butes that represent the message in UTF8 format</returns>
        </member>
        <member name="M:CFX.CFXMessage.FromBytes``1(System.Byte[])">
            <summary>
            Creates a new instance of a CFX message given a Type and an array of bytes assumed to be in UTF8 encoding
            </summary>
            <typeparam name="T">The Type of the message</typeparam>
            <param name="data">An array of bytes representing the message in UTF8 format</param>
            <returns></returns>
        </member>
        <member name="T:CFX.EndpointConnected">
            <summary>
            Sent when an Endpoint joins a CFX network after it has been established. 
            Provides the same information as the response to the AreYouThereRequest 
            message. Need not be used for short-term machine to machine connection, 
            where for example only a simple request / response message is being exchanged.
            <code language="none">
            {
              "CFXHandle": "SMTPlus.Model_21232.SN23123",
              "RequestNetworkUri": "amqp://host33/",
              "RequestTargetAddress": "/queue/SN23123"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.EndpointConnected.CFXHandle">
            <summary>
            The handle of the endpoint that is responding
            </summary>
        </member>
        <member name="P:CFX.EndpointConnected.RequestNetworkUri">
            <summary>
            The network address / Uri to be used for requests to this endpoint
            </summary>
        </member>
        <member name="P:CFX.EndpointConnected.RequestTargetAddress">
            <summary>
            The AMQP 1.0 target address to be used for requests to this endpoint
            </summary>
        </member>
        <member name="T:CFX.EndpointShuttingDown">
            <summary>
            Sent when an endpoint is about to shut down and disconnect from a CFX network
            <code language="none">
            {
              "CFXHandle": "SMTPlus.Model_21232.SN23123"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.EndpointShuttingDown.CFXHandle">
            <summary>
            The handle of the endpoint that is shutting down
            </summary>
        </member>
        <member name="T:CFX.GetEndpointInformationRequest">
            <summary>
            Requests detailed information about a single endpoint, as specified by its CFX Handle.
            The response includes information regarding the endpoint’s capabilities
            (CFX topic and message support), as well as a generic model of its
            physical layout (zones, lanes, etc).
            <code language="none">
            {
              "CFXHandle": "SMTPlus.Model_21232.SN23123"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.GetEndpointInformationRequest.CFXHandle">
            <summary>
            The handle of the endpoint about which the sender wishes to obtain information.
            </summary>
        </member>
        <member name="T:CFX.GetEndpointInformationResponse">
            <summary>
            Allows any CFX endpoint to request the capabilities of a specified single endpoint. The response
            includes information about the endpoint, including its CFX Handle, and network hostname / address.
            The endpoint information structure is a dynamic structure, and can vary based on the type of endpoint.
            <para></para>
            Generic example:
            <para></para>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "EndpointInformation": {
                "CFXHandle": "SMTPlus.Model_21232.SN23123",
                "CFXVersion": "1.0",
                "RequestNetworkUri": "amqp://host55:5688/",
                "RequestTargetAddress": "/queue/SN23123",
                "UniqueIdentifier": "UID1111111111111111",
                "FriendlyName": "SMD Printer 23123",
                "Vendor": "SMT Plus",
                "ModelNumber": "Model_11111",
                "SerialNumber": "SNSN23123",
                "SoftwareVersion": "18.5.4",
                "FirmwareVersion": "1.6.13",
                "OperatingSystem": "UbuntuLinux",
                "OperatingSystemPlatform" : "Platform64bit",
                "OperatingSystemVersion" : "18.04.4",
                "SupportedPCBDimensions": {
                  "MinimumLength": 10.0,
                  "MaximumLength": 1000.0,
                  "MinimumWidth": 10.0,
                  "MaximumWidth": 1000.0,
                  "MinimumHeight": 0.0,
                  "MaximumHeight": 50.0,
                  "MinimumWeight": 0.0,
                  "MaximumWeight": 1000.0,
                  "MinimumThickness": 0.5,
                  "MaximumThickness": 10.0
                },
                "Stages": [
                  {
                    "Stage": {
                      "StageSequence": 1,
                      "StageName": "INBOUND BUFFER",
                      "StageType": "Buffer"
                    }
                  },
                  {
                    "Stage": {
                      "StageSequence": 2,
                      "StageName": "WORK STAGE 1",
                      "StageType": "Work"
                    }
                  },
                  {
                    "Stage": {
                      "StageSequence": 3,
                      "StageName": "OUTBOUND BUFFER",
                      "StageType": "Buffer"
                    }
                  }
                ],
                "NumberOfLanes": 1,
                "HermesInformation": {
                  "Enabled": true,
                  "Version": "1.0"
                },
                "OperatingRequirements": {
                  "MinimumHumidity": 0.0,
                  "MaximumHumidity": 0.8,
                  "MinimumTemperature": -1.0,
                  "MaximumTemperature": 40.0
                },
                "SupportedTopics": [
                  {
                    "TopicName": "CFX.Production",
                    "TopicSupportType": "PublisherConsumer",
                    "SupportedMessages": []
                  },
                  {
                    "TopicName": "CFX.Production.Application",
                    "TopicSupportType": "Publisher",
                    "SupportedMessages": []
                  },
                  {
                    "TopicName": "CFX.ResourcePerformance",
                    "TopicSupportType": "Publisher",
                    "SupportedMessages": []
                  }
                ],
                "SleepStates": [
                    {
                        "SleepName": "Awake",            
                        "PowerSaving": 0.0,
                        "WakeupTime": "00:00:00"
                    },
                    {
                        "SleepName": "Shallow",            
                        "PowerSaving": 10.0,
                        "WakeupTime": "00:00:30"
                    },
                    {
                        "SleepName": "Sleep",            
                        "PowerSaving": 60.0,
                        "WakeupTime": "00:02:00"
                    },
                    {
                        "SleepName": "Hibernate",            
                        "PowerSaving": 95.0,
                        "WakeupTime": "00:10:00"
                    }
                ]
              }
            }
            </code>
            <para></para>
            <para>Example of SMT Placement Machine type endpoint:</para>
            <para></para>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "EndpointInformation": {
                "$type": "CFX.Structures.SMTPlacement.SMTPlacementEndpoint, CFX",
                "NominalPlacementCPH": 10000.0,
                "NominalUnitsPerHour": 120.0,
                "SupportedPCBDimensions": {
                  "MinimumLength": 10.0,
                  "MaximumLength": 1000.0,
                  "MinimumWidth": 10.0,
                  "MaximumWidth": 1000.0,
                  "MinimumHeight": 0.0,
                  "MaximumHeight": 50.0,
                  "MinimumWeight": 0.0,
                  "MaximumWeight": 1000.0,
                  "MinimumThickness": 0.5,
                  "MaximumThickness": 10.0
                },
                "Lanes": [
                  {
                    "LaneNumber": null,
                    "LaneName": "LANE1",
                    "SupportedPCBDimensions": null
                  },
                  {
                    "LaneNumber": null,
                    "LaneName": "LANE2",
                    "SupportedPCBDimensions": null
                  }
                ],
                "Heads": [
                  {
                    "SMTHeadType": "Pulsar",
                    "NumberOfNozzleLocations": 6,
                    "PlacementAccuracy": 0.001,
                    "Head": {
                      "HeadId": "HD212343",
                      "HeadSequence": 1,
                      "HeadName": "HEAD1"
                    }
                  },
                  {
                    "SMTHeadType": "Pulsar",
                    "NumberOfNozzleLocations": 6,
                    "PlacementAccuracy": 0.001,
                    "Head": {
                      "HeadId": "HD212344",
                      "HeadSequence": 2,
                      "HeadName": "HEAD2"
                    }
                  }
                ],
                "PlacementConstraints": {
                  "MinumumComponentBodySizeX": 0.0,
                  "MaximumComponentBodySizeX": 0.0,
                  "MinumumComponentBodySizeY": 0.0,
                  "MaximumComponentBodySizeY": 0.0,
                  "MinumumComponentHeight": 0.0,
                  "MaximumComponentHeight": 0.0,
                  "MinimumLeadWidth": 0.0,
                  "MinimumBGAPitch": 0.0,
                  "MinimumSOICPitch": 0.0,
                  "MinimumMountingPressure": 0.0,
                  "MaximumMountingPressure": 0.0
                },
                "CFXHandle": "SMTPlus.Model_21232.SN23123",
                "CFXVersion": "1.0",
                "RequestNetworkUri": "amqp://host33:5688/",
                "RequestTargetAddress": "/queue/SN23123",
                "UniqueIdentifier": "UID564545645645656564",
                "FriendlyName": "SMD Placer 23123",
                "Vendor": "SMT Plus",
                "ModelNumber": "Model_21232",
                "SerialNumber": "SN23123",
                "SoftwareVersion": "14.1.3",
                "FirmwareVersion": "1.5.22",
                "OperatingSystem": "Windows10",
                "OperatingSystemPlatform" : "Platform64bit",
                "OperatingSystemVersion" : "1809",
                "Stages": [
                  {
                    "$type": "CFX.Structures.SMTPlacement.SMTStageInformation, CFX",
                    "NumberOfFeederStations": 0,
                    "Stage": {
                      "StageSequence": 1,
                      "StageName": "BUFFERSTAGE1",
                      "StageType": "Buffer"
                    }
                  },
                  {
                    "$type": "CFX.Structures.SMTPlacement.SMTStageInformation, CFX",
                    "NumberOfFeederStations": 100,
                    "Stage": {
                      "StageSequence": 2,
                      "StageName": "WORKSTAGE1",
                      "StageType": "Work"
                    }
                  },
                  {
                    "$type": "CFX.Structures.SMTPlacement.SMTStageInformation, CFX",
                    "NumberOfFeederStations": 100,
                    "Stage": {
                      "StageSequence": 3,
                      "StageName": "WORKSTAGE2",
                      "StageType": "Work"
                    }
                  }
                ],
                "NumberOfLanes": 1,
                "HermesInformation": {
                  "Enabled": true,
                  "Version": "1.0"
                },
                "OperatingRequirements": {
                  "MinimumHumidity": 0.0,
                  "MaximumHumidity": 0.8,
                  "MinimumTemperature": -1.0,
                  "MaximumTemperature": 40.0
                },
                "SupportedTopics": [
                  {
                    "TopicName": "CFX.Production",
                    "TopicSupportType": "PublisherConsumer",
                    "SupportedMessages": []
                  },
                  {
                    "TopicName": "CFX.Production.Assembly",
                    "TopicSupportType": "Publisher",
                    "SupportedMessages": []
                  },
                  {
                    "TopicName": "CFX.ResourcePerformance",
                    "TopicSupportType": "Publisher",
                    "SupportedMessages": []
                  }
                ]
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.GetEndpointInformationResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.GetEndpointInformationResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.GetEndpointInformationResponse.EndpointInformation">
            <summary>
            Dynamic structure that describes the details of this endpoint.
            </summary>
        </member>
        <member name="T:CFX.Heartbeat">
            <summary>
            All endpoints are obligated to publish a Heartbeast message on all
            Publish type no less than once every 5 minutes.  The <see cref="T:CFX.Transport.AmqpCFXEndpoint"/>
            class automatically performs this function for you when using the CFX SDK.
            You can adjust the frequency of the Heartbeat using the <see cref="P:CFX.Transport.AmqpCFXEndpoint.HeartbeatFrequency"/>
            to any value between 1 second and 5 minutes.  By default, the CFX SDK sends a Heartbeat once every 1 minute.
            <code language="none">
            {
                "CFXHandle": "SMTPlus.Model_21232.SN23123",
                "HeartbeatFrequency": "00:01:00"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Heartbeat.CFXHandle">
            <summary>
            The handle of the endpoint that is publishing the Heartbeat.
            </summary>
        </member>
        <member name="P:CFX.Heartbeat.HeartbeatFrequency">
            <summary>
            The amount of time to expect between Heartbeast messasges for this endpoint
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.DataTransfer.FileTransferRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Sent by an endpoint to another endpoint to initiate a file transfer.  File transfers may proceed either from the initiator/requester
            to the recipient (PUSH Mode), OR from recipient to initiator/requester (PULL Mode).  File transfers may also be "In-Band", 
            meaning that the file data payload is included in the CFX message directly and transferred via the AMQP protocol.  OR, they may
            be "Out-of-Band", meaning that a secure link to the data file is passed via the CFX message over AMQP protocol, and a secondary
            protocol (such as HTTPS or SFTP) is then used to transfer the file data payload, independent of the AMQP message stream.  When in PUSH
            mode, the FileTransferRequest will either contain the In-Band file data payload, or an Out-Of-Band secure link.  When in PULL mode, 
            the <see cref="T:CFX.InformationSystem.DataTransfer.FileTransferResponse"/> will contain the In-Band file data payload, or an Out-Of-Band secure link.
            <para></para>
            In-Band file transfers should only be used for small data files.  Many AMQP message broker platforms
            limit the maximum total message size of an AMQP message.  Microsoft's Azure message bus, for example, limits messages
            to 256KB for a standard subscription, and 1MB for a premium subscription.  RabbitMQ recommends limiting messages to 128MB or less.
            Use OutOfBand transfer for larger file sizes.
            <para></para>
            <para>Out-of-Band PULL Example:</para>
            <para></para>
            <code language="none">
            {
              "FileTitle": "IPC_2581_DPMX_DesignData_Example1.xml",
              "FileLocation": "\\DesignDataRoot\\Folder1",
              "TransferDirection": "Pull",
              "TransferMode": "OutOfBand",
              "File": null
            }
            </code>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "FileTitle": "IPC_2581_DPMX_DesignData_Example1.xml",
              "FileLocation": "\\DesignDataRoot\\Folder1",
              "TransferMode": "OutOfBand",
              "File": {
                "FileType": "DPMX",
                "MimeType": null,
                "FileData": null,
                "FileURL": "https://jsmith:Pa$$w0rd@designserver1.mydomain.com"
              }
            }
            </code>
            <para></para>
            <para>Out-of-Band PUSH Example:</para>
            <para></para>
            <code language="none">
            {
              "FileTitle": "IPC_2581_DPMX_DesignData_Example1.xml",
              "FileLocation": "\\DesignDataRoot\\Folder1",
              "TransferDirection": "Push",
              "TransferMode": "OutOfBand",
              "File": {
                "FileType": "DPMX",
                "MimeType": null,
                "FileData": null,
                "FileURL": "https://jsmith:Pa$$w0rd@designserver1.mydomain.com"
              }
            }
            </code>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "FileTitle": "IPC_2581_DPMX_DesignData_Example1.xml",
              "FileLocation": "\\DesignDataRoot\\Folder1",
              "TransferMode": "OutOfBand",
              "File": null
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.DataTransfer.FileTransferRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferRequest.FileTitle">
            <summary>
            The title of the file, EXCLUDING any path information, but INCLUDING file extension when appropriate.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferRequest.FileLocation">
            <summary>
            An optional property that may be used to indicate the location to the file on the source system.  This need not be a physical path.
            It could be as virtual path, as in the case of a web or FTP server, or file share.  Alternatively, it need not represent a traditional
            path at all.  For example, it could be a lookup key to locate the file within a NoSQL database environment.  The format of this property
            is dependent on the nature of the source system.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferRequest.TransferDirection">
            <summary>
            Specifies the direction of transfer.  File transfer may proceed from requestor to responder (Push), or from
            responder to requester (Pull).
            In Push mode, the file token is contained within the request itself.
            In Pull mode, the file token is contained within the response message.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferRequest.TransferMode">
            <summary>
            Specifies the mode of transfer.  File data may be transferred within the CFX messages themselves (In-Band),
            or transferred via a separate secure protocol (Out-of-Band), such as HTTPS, SFTP, etc.
            Direct, in-band file transfer is not recommended for larger data files.  Many AMQP message broker platforms
            limit the maximum total message size of an AMQP message.  Microsoft's Azure message bus, for example, limits messages
            to 256KB for a standard subscription, and 1MB for a premium subscription.  RabbitMQ recommends limiting messages to 128MB or less.
            Use OutOfBand transfer for larger file sizes.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferRequest.File">
            <summary>
            For file transfers initiated at the source (FileTransferDirection.Push), contains information about the file to be transferred.
            For file transfers initiated by the destination (FileTransferDirection.Pull), this property should be NULL.
            For FileTransferMode.InBand, this structure will contain the file payload (data) itself.
            For FileTransferMode.OutOfBand, this structure will contain a secure link/URL that can be used by the destination
            to obtain the file payload data.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.DataTransfer.FileTransferResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Sent by an endpoint in response to a <see cref="T:CFX.InformationSystem.DataTransfer.FileTransferRequest"/>.  File transfers may proceed either from the initiator/requester
            to the recipient (PUSH Mode), OR from recipient to initiator/requester (PULL Mode).  File transfers may also be "In-Band", 
            meaning that the file data payload is included in the CFX message directly and transferred via the AMQP protocol.  OR, they may
            be "Out-of-Band", meaning that a secure link to the data file is passed via the CFX message over AMQP protocol, and a secondary
            protocol (such as HTTPS or SFTP) is then used to transfer the file data payload, independent of the AMQP message stream.  When in PUSH
            mode, the <see cref="T:CFX.InformationSystem.DataTransfer.FileTransferRequest"/> will either contain the In-Band file data payload, or an Out-Of-Band secure link.  When in PULL mode, 
            the <see cref="T:CFX.InformationSystem.DataTransfer.FileTransferResponse"/> will contain the In-Band file data payload, or an Out-Of-Band secure link.
            <para></para>
            In-Band file transfers should only be used for small data files.  Many AMQP message broker platforms
            limit the maximum total message size of an AMQP message.  Microsoft's Azure message bus, for example, limits messages
            to 256KB for a standard subscription, and 1MB for a premium subscription.  RabbitMQ recommends limiting messages to 128MB or less.
            Use OutOfBand transfer for larger file sizes.
            <para></para>
            <para>Out-of-Band PULL Example:</para>
            <para></para>
            <code language="none">
            {
              "FileTitle": "IPC_2581_DPMX_DesignData_Example1.xml",
              "FileLocation": "\\DesignDataRoot\\Folder1",
              "TransferDirection": "Pull",
              "TransferMode": "OutOfBand",
              "File": null
            }
            </code>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "FileTitle": "IPC_2581_DPMX_DesignData_Example1.xml",
              "FileLocation": "\\DesignDataRoot\\Folder1",
              "TransferMode": "OutOfBand",
              "File": {
                "FileType": "DPMX",
                "MimeType": null,
                "FileData": null,
                "FileURL": "https://jsmith:Pa$$w0rd@designserver1.mydomain.com"
              }
            }
            </code>
            <para></para>
            <para>Out-of-Band PUSH Example:</para>
            <para></para>
            <code language="none">
            {
              "FileTitle": "IPC_2581_DPMX_DesignData_Example1.xml",
              "FileLocation": "\\DesignDataRoot\\Folder1",
              "TransferDirection": "Push",
              "TransferMode": "OutOfBand",
              "File": {
                "FileType": "DPMX",
                "MimeType": null,
                "FileData": null,
                "FileURL": "https://jsmith:Pa$$w0rd@designserver1.mydomain.com"
              }
            }
            </code>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "FileTitle": "IPC_2581_DPMX_DesignData_Example1.xml",
              "FileLocation": "\\DesignDataRoot\\Folder1",
              "TransferMode": "OutOfBand",
              "File": null
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.DataTransfer.FileTransferResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferResponse.Result">
            <summary>
            Result of the request
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferResponse.FileTitle">
            <summary>
            The title of the file, EXCLUDING any path information, but INCLUDING file extension when appropriate.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferResponse.FileLocation">
            <summary>
            An optional property that may be used to indicate the location to the file on the source system.  This need not be a physical path.
            It could be as virtual path, as in the case of a web or FTP server, or file share.  Alternatively, it need not represent a traditional
            path at all.  For example, it could be a lookup key to locate the file within a NoSQL database environment.  The format of this property
            is dependent on the nature of the source system.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferResponse.TransferMode">
            <summary>
            Specifies the mode of transfer.  File data may be transferred within the CFX messages themselves (In-Band),
            or transferred via a separate secure protocol (Out-of-Band), such as HTTPS, SFTP, etc.
            Direct, in-band file transfer is not recommended for larger data files.  Many AMQP message broker platforms
            limit the maximum total message size of an AMQP message.  Microsoft's Azure message bus, for example, limits messages
            to 256KB for a standard subscription, and 1MB for a premium subscription.  RabbitMQ recommends limiting messages to 128MB or less.
            Use OutOfBand transfer for larger file sizes.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.DataTransfer.FileTransferResponse.File">
            <summary>
            For file transfers initiated at the destination (FileTransferDirection.Pull), contains information about the file to be transferred.
            For file transfers initiated by the source (FileTransferDirection.Push), this property should be NULL.
            For FileTransferMode.InBand, this structure will contain the file payload (data) itself.
            For FileTransferMode.OutOfBand, this structure will contain a secure link/URL that can be used by the destination
            to obtain the file payload data.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.DataTransfer.NamespaceDoc">
            <summary>
            CFX Topic implemented by enterprise information systems (such as an MES or ERP system) and other types of endpoints capable of performing secure data transfer.
            For example, endpoints capable of exchanging IPC-2581 (DPMX) design data implement the messages of this topic.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.NamespaceDoc">
            <summary>
            CFX Topic implemented by enterprise information systems (such as an MES or ERP system).
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.ProductionScheduling.WorkOrdersScheduled">
            <summary>
            Sent when a Work Order (or Work Order sub-batch) has been scheduled to be executed
            at a particular work area at a particular time.
            <code language="none">
            {
              "ScheduledWorkOrders": [
                {
                  "WorkOrderIdentifier": {
                    "WorkOrderId": "WO1122334455",
                    "Batch": null
                  },
                  "Scheduler": {
                    "OperatorIdentifier": "BADGE4486",
                    "ActorType": "Human",
                    "LastName": "Doe",
                    "FirstName": "John",
                    "LoginName": "john.doe@domain1.com"
                  },
                  "WorkArea": "SMT Line 1",
                  "StartTime": "2018-08-02T11:00:00",
                  "EndTime": "2018-08-02T15:00:00",
                  "ReservedResources": [
                    "L1PRINTER1",
                    "L1PLACER1",
                    "L1PLACER2",
                    "L1OVEN1"
                  ],
                  "ReservedTools": [
                    {
                      "UniqueIdentifier": "UID23890430",
                      "Name": "TorqueWrench_123"
                    }
                  ],
                  "ReservedOperators": [
                    {
                      "OperatorIdentifier": "BADGE489435",
                      "ActorType": "Human",
                      "LastName": "Smith",
                      "FirstName": "Joseph",
                      "LoginName": "joseph.smith@abcdrepairs.com"
                    }
                  ],
                  "ReservedMaterials": [
                    {
                      "UniqueIdentifier": "UID23849854385",
                      "InternalPartNumber": "PN4452",
                      "Quantity": 0.0
                    },
                    {
                      "UniqueIdentifier": "UID23849854386",
                      "InternalPartNumber": "PN4452",
                      "Quantity": 0.0
                    },
                    {
                      "UniqueIdentifier": "UID23849854446",
                      "InternalPartNumber": "PN3358",
                      "Quantity": 0.0
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.ProductionScheduling.WorkOrdersScheduled.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.ProductionScheduling.WorkOrdersScheduled.ScheduledWorkOrders">
            <summary>
            A list of Work Orders that have been scheduled.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.ProductionScheduling.WorkOrdersUnscheduled">
            <summary>
            Sent when a previously scheduled Work Order (or Work Order sub-batch) has been unscheduled
            at a particular work area at a particular time.
            <code language="none">
            {
              "ScheduledWorkOrderIdentifiers": [
                {
                  "WorkOrderIdentifier": {
                    "WorkOrderId": "WO1122334455",
                    "Batch": null
                  },
                  "WorkArea": "SMT Line 1"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.ProductionScheduling.WorkOrdersUnscheduled.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.ProductionScheduling.WorkOrdersUnscheduled.ScheduledWorkOrderIdentifiers">
            <summary>
            A list of Work Orders that have been scheduled.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.UnitValidation.NamespaceDoc">
            <summary>
            CFX Topic implemented by enterprise information systems (such as an MES or ERP system) capable of validating the production history and status of a production unit, and its readiness for processing.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.UnitValidation.ValidateUnitsRequest">
            <summary>
            Sent from a process endpoint in order to validate the identifier of the next production unit.  
            Process endpoints, where configured, should send this request before allowing the next unit
            to enter the process. Configuration must be provided to identify the endpoint that implements 
            CFX.InformationSystem.UnitValidation Identification and is responsible to provide the response.
            <code language="none">
            {
              "Validations": [
                "UnitRouteValidation",
                "UnitStatusValidation"
              ],
              "PrimaryIdentifier": "CARRIER2342",
              "Units": [
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 2,
                  "PositionName": "CIRCUIT2",
                  "X": 70.45,
                  "Y": 80.66,
                  "Rotation": 90.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.UnitValidation.ValidateUnitsRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.UnitValidation.ValidateUnitsRequest.Validations">
            <summary>
            List of validations to be performed”. Options are: UnitRouteValidation", "UnitStatusValidation"
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.UnitValidation.ValidateUnitsRequest.PrimaryIdentifier">
            <summary>
            Identification used for the carrier (or the unit itself if no carrier)
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.UnitValidation.ValidateUnitsRequest.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.UnitValidation.ValidateUnitsRequest.Units">
            <summary>
            List of structures that identify each specific instance of production unit that arrived (could be within a carrier or panel). 
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.UnitValidation.ValidateUnitsRequest.Lane">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Lane identifier.  Null if no specific lane
            </summary>
            <remarks>
            This field allows distinguishing between requests when different kinds of units enter the machine and all need to be validated.
            For instance, a depaneling cell where both panels and carriers would need to be validated.
            - The panel has a data matrix for id and a set of modules whose statuses need to be validated.
            - The carrier (pallet, fixture, tray, etc) has a data matrix for id and a set of nests whose statuses need to be validated.
            </remarks>
        </member>
        <member name="T:CFX.InformationSystem.UnitValidation.ValidateUnitsResponse">
            <summary>
            Sent from a process endpoint in order to validate the identifier of the next production unit.  
            Process endpoints, where configured, should send this request before allowing the next unit
            to enter the process. Configuration must be provided to identify the endpoint that implements 
            CFX.InformationSystem.UnitValidation Identification and is responsible to provide the response.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "PrimaryResult": {
                "UniqueIdentifier": "CARRIER5566",
                "PositionNumber": 0,
                "Result": "Passed",
                "FailureCode": 0,
                "Message": "OK"
              },
              "ValidationResults": [
                {
                  "UniqueIdentifier": "CARRIER5566",
                  "PositionNumber": 1,
                  "Result": "Passed",
                  "FailureCode": 0,
                  "Message": "OK"
                },
                {
                  "UniqueIdentifier": "CARRIER5566",
                  "PositionNumber": 2,
                  "Result": "Passed",
                  "FailureCode": 0,
                  "Message": "OK"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.UnitValidation.ValidateUnitsResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.UnitValidation.ValidateUnitsResponse.Result">
            <summary>
            Result of the request
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.UnitValidation.ValidateUnitsResponse.PrimaryResult">
            <summary>
            Overall result of the validation request
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.UnitValidation.ValidateUnitsResponse.ValidationResults">
            <summary>
            Individual results of the validation request (for multiple units in a carrier or PCB Panel)
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.WorkOrderManagement.NamespaceDoc">
            <summary>
            CFX Topic implemented by enterprise information systems (such as an MES or ERP system)
            involved in the creation and management of production Work Orders and Work Order sub-batches.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.WorkOrderManagement.WorkOrderQuantityUpdated">
            <summary>
            Sent when the status of a Work Order (or Work Order sub-batch) has been updated.
            <code language="none">
            {
              "WorkOrderIdentifier": {
                "WorkOrderId": "WO1122334455",
                "Batch": null
              },
              "NewQuantity": 250.0,
              "PreviousQuantity": 220.0
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrderQuantityUpdated.WorkOrderIdentifier">
            <summary>
            The Identifier of the relevant Work Order or Work Order sub-batch
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrderQuantityUpdated.NewQuantity">
            <summary>
            The new quantity of the Work Order (or Work Order sub-batch) 
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrderQuantityUpdated.PreviousQuantity">
            <summary>
            The previous quantity of the Work Order (or Work Order sub-batch), if known.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.WorkOrderManagement.WorkOrdersCreated">
            <summary>
            Sent when a new production Work Order is created by an information system (such as ERP or MES).
            <code language="none">
            {
              "NewOrders": [
                {
                  "WorkOrderIdentifier": {
                    "WorkOrderId": "WO1122334455",
                    "Batch": null
                  },
                  "Description": "Production Order for PCB Assembly",
                  "Status": "AwaitingApproval",
                  "Router": "PCB Assembly Process",
                  "RouterRevision": "A",
                  "LotNumber": "LOT4865",
                  "Customer": null,
                  "Department": null,
                  "CreatedDate": "2018-08-01T13:46:15.5391201-04:00",
                  "StartDate": "2018-09-09T00:00:00",
                  "DateRequired": "2018-09-15T17:00:00",
                  "PartNumber": "1122-3344",
                  "PartRevision": "B",
                  "Quantity": 220.0,
                  "UnitOfMeasure": null,
                  "DependsOn": null
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.WorkOrderManagement.WorkOrdersCreated.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrdersCreated.NewOrders">
            <summary>
            The new Work Order.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.WorkOrderManagement.WorkOrdersDeleted">
            <summary>
            Sent when a Work Order (or sub-batch of a Work Order) has been deleted within an information system (such as ERP or MES).
            <code language="none">
            {
              "WorkOrderIdentifiers": [
                {
                  "WorkOrderId": "WO1122334455",
                  "Batch": null
                },
                {
                  "WorkOrderId": "WO9988776666",
                  "Batch": "Batch1"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.WorkOrderManagement.WorkOrdersDeleted.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrdersDeleted.WorkOrderIdentifiers">
            <summary>
            The identifier of the Work Order that has been deleted.
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.WorkOrderManagement.WorkOrderStatusUpdated">
            <summary>
            Sent when the status of a Work Order (or Work Order sub-batch) has been updated.
            <code language="none">
            {
              "WorkOrderIdentifier": {
                "WorkOrderId": "WO1122334455",
                "Batch": null
              },
              "NewStatus": "Scheduled",
              "PreviousStatus": "ApprovedAndPending"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrderStatusUpdated.WorkOrderIdentifier">
            <summary>
            The Identifier of the relevant Work Order or Work Order sub-batch
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrderStatusUpdated.NewStatus">
            <summary>
            The new current status of the Work Order (or Work Order sub-batch)
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrderStatusUpdated.PreviousStatus">
            <summary>
            The previous status of the Work Order (or Work Order sub-batch)
            </summary>
        </member>
        <member name="T:CFX.InformationSystem.WorkOrderManagement.WorkOrdersUpdated">
            <summary>
            A Work Order (or Work Order sub-batch) has been modified / updated within an information systsem (such as ERP or MES).
            <code language="none">
            {
              "UpdatedOrders": [
                {
                  "WorkOrderIdentifier": {
                    "WorkOrderId": "WO1122334455",
                    "Batch": null
                  },
                  "Description": "Production Order for PCB Assembly",
                  "Status": "AwaitingApproval",
                  "Router": "PCB Assembly Process",
                  "RouterRevision": "A",
                  "LotNumber": "LOT4896",
                  "Customer": null,
                  "Department": null,
                  "CreatedDate": "2018-08-01T13:46:15.8331267-04:00",
                  "StartDate": "2018-09-09T00:00:00",
                  "DateRequired": "2018-09-15T17:00:00",
                  "PartNumber": "1122-5555",
                  "PartRevision": "C",
                  "Quantity": 220.0,
                  "UnitOfMeasure": null,
                  "DependsOn": null
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.InformationSystem.WorkOrderManagement.WorkOrdersUpdated.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.InformationSystem.WorkOrderManagement.WorkOrdersUpdated.UpdatedOrders">
            <summary>
            The new details of the updated Work Order (or Work Order sub-batch)
            </summary>
        </member>
        <member name="T:CFX.Maintenance.GetResourceInformationRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Requests detailed resource information about a single endpoint, as specified by its CFX Handle.
            The response includes information regarding the endpoint’s resource and sub-resources
            that may undergo maintenance operations
            <code language="none">
            {
              "CFXHandle": "SMT.SIPLACE_SX4.10000000"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceInformationRequest.CFXHandle">
            <summary>
            The handle of the endpoint about which the sender wishes to obtain information.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.GetResourceInformationResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Allows any CFX endpoint to request the resource and sub-resources of a specified single endpoint. 
            The endpoint information structure is a dynamic structure, and can vary based on the type of endpoint.
            <para></para>
            Example for SMT Endpoint:
            <para></para>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "ResourceInformation": {
                "$type": "CFX.Structures.Maintenance.MaintenanceResource, CFX",
                "UniqueIdentifier": "10000000",
                "Name": "SMT SIPLACE SX 4",
                "ResourceType": "SMT",
                "Vendor": "ASM",
                "ModelNumber": "SIPLACE SX4",
                "SerialNumber": "UID1111111111111111",
                "SoftwareVersion": "713",
                "FirmwareVersion": null,
                "Resources": [
                  {
                    "ResourceIdentifier": "10000000-00 000-G1-GC__",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "SST34_1",
                    "ResourceType": "SST34",
                    "ResourcePosition": "1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000-00 000-G2-GC__",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "SST34_2",
                    "ResourceType": "SST34",
                    "ResourcePosition": "2.2",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000-00 000-G3-GC__",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "SST34_3",
                    "ResourceType": "SST34",
                    "ResourcePosition": "2.3",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000-00 000-G4-GC__",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "SST34_4",
                    "ResourceType": "SST34",
                    "ResourcePosition": "1.4",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Conveyor_0_E_1",
                    "IdentiferUniqueness": "LocallyPersistent",
                    "ResourceName": "Dual",
                    "ResourceType": "Conveyor",
                    "ResourcePosition": null,
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Gantry_X_1_R_1",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "Gantry_1",
                    "ResourceType": null,
                    "ResourcePosition": "1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Gantry_X_2_R_1",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "Gantry_2",
                    "ResourceType": null,
                    "ResourcePosition": "2.2",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Gantry_X_2_L_1",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "Gantry_3",
                    "ResourceType": null,
                    "ResourcePosition": "2.3",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Gantry_X_1_L_1",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "Gantry_4",
                    "ResourceType": null,
                    "ResourcePosition": "1.4",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_NozzleChanger_1_L_1",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "NozzleCarrier_14_4.1",
                    "ResourceType": "NozzleCarrier_14",
                    "ResourcePosition": "1.4.1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_NozzleChanger_2_L_1",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "NozzleCarrier_10_3.1",
                    "ResourceType": "NozzleCarrier_10_3",
                    "ResourcePosition": "2.3.1.3",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "00000000-00 000-H1-_____",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "C&amp;P20_1",
                    "ResourceType": "C&amp;P20",
                    "ResourcePosition": "1.1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null,
                    "Cameras": [
                      {
                        "ResourceIdentifier": "10000000-00 000-H1-HC__",
                        "IdentiferUniqueness": "GloballyPersistent",
                        "ResourceName": "SST23_1.1",
                        "ResourceType": "SST23",
                        "ResourcePosition": "1.1.1",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      }
                    ],
                    "RotationAxes": [
                      {
                        "ResourceIdentifier": "10000000-00 000-H1-DP1_",
                        "IdentiferUniqueness": "LocallyPersistent",
                        "ResourceName": "C&amp;P20_1_DpAxis1",
                        "ResourceType": null,
                        "ResourcePosition": "1.1.1.1",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      },
                      {
                        "ResourceIdentifier": "10000000-00 000-H1-DP10",
                        "IdentiferUniqueness": "LocallyPersistent",
                        "ResourceName": "C&amp;P20_1_DpAxis10",
                        "ResourceType": null,
                        "ResourcePosition": "1.1.1.10",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      }
                    ]
                  },
                  {
                    "ResourceIdentifier": "00000000-00 000-H3-_____",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "C&amp;P20_3",
                    "ResourceType": "C&amp;P20",
                    "ResourcePosition": "2.3.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null,
                    "Cameras": [
                      {
                        "ResourceIdentifier": "10000000-00 000-H3-HC__",
                        "IdentiferUniqueness": "GloballyPersistent",
                        "ResourceName": "SST23_3.1",
                        "ResourceType": "SST23",
                        "ResourcePosition": "2.3.1",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      }
                    ],
                    "RotationAxes": [
                      {
                        "ResourceIdentifier": "10000000-00 000-H3-DP1_",
                        "IdentiferUniqueness": "LocallyPersistent",
                        "ResourceName": "C&amp;P20_3_DpAxis1",
                        "ResourceType": null,
                        "ResourcePosition": "2.3.1.1",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      },
                      {
                        "ResourceIdentifier": "10000000-00 000-H3-DP10",
                        "IdentiferUniqueness": "LocallyPersistent",
                        "ResourceName": "C&amp;P20_3_DpAxis10",
                        "ResourceType": null,
                        "ResourcePosition": "2.3.1.10",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      }
                    ]
                  },
                  {
                    "ResourceIdentifier": "10000000_TapeCutter_1_L_1",
                    "IdentiferUniqueness": "UnserializedLocation",
                    "ResourceName": "TapeCutter_1.4",
                    "ResourceType": "",
                    "ResourcePosition": "1.0.4",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_TapeCutter_1_R_1",
                    "IdentiferUniqueness": "UnserializedLocation",
                    "ResourceName": "TapeCutter_1.1",
                    "ResourceType": "",
                    "ResourcePosition": "1.0.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  }
                ]
              }
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="M:CFX.Maintenance.GetResourceInformationResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceInformationResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceInformationResponse.ResourceInformation">
            <summary>
            Dynamic structure that describes the details of this resource.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.GetResourceMaintenanceAndServiceRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Requests detailed resource maintenance information about a single endpoint, as specified by its CFX Handle.
            The response includes information regarding the endpoint’s maintenance, counters, errors, verification
            that are relevant for the decisions around the execution of the maintenance operations  
            <code language="none">
            {
              "CFXHandle": "SMT.SIPLACE_SX4.10000000"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceAndServiceRequest.CFXHandle">
            <summary>
            The handle of the endpoint about which the sender wishes to obtain information.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.GetResourceMaintenanceAndServiceResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Allows any CFX endpoint to request the resource and sub-resources maintenance and services of a specified single endpoint. 
            The endpoint information structure is a dynamic structure, and can vary based on the type of endpoint.
            <para></para>
            Example for SMT Endpoint:
            <para></para>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "Machine": {
                "UniqueIdentifier": "10000000",
                "Name": "SIPLACE SX4",
                "ResourceType": null,
                "Vendor": null,
                "ModelNumber": null,
                "SerialNumber": null,
                "SoftwareVersion": null,
                "FirmwareVersion": null
              },
              "MachineServiceAndMaintenanceData": [
                {
                  "UniqueIdentifier": "00000000-00 000-H2-_____",
                  "Name": "C&amp;P20_2",
                  "CalibrationDetails": [
                    {
                      "CalibrationCode": "SegmentOffset",
                      "CalibrationType": "SegmentOffset",
                      "Comments": "",
                      "Status": "Ok",
                      "CalibrationTime": "2020-11-26T18:27:14.8761185+01:00"
                    },
                    {
                      "CalibrationCode": "HeadMapping_0_R",
                      "CalibrationType": "HeadMapping",
                      "Comments": "Calibration failed. Check log",
                      "Status": "Failed",
                      "CalibrationTime": "2020-11-26T18:27:14.8771196+01:00"
                    }
                  ],
                  "ErrorDetails": null,
                  "MaintenanceDetails": [
                    {
                      "Name": "HeadCompleteMileage",
                      "CounterType": "Odometer",
                      "CustomCounterType": null,
                      "MeasurementLocation": "1.1.1",
                      "CurrentCounterValue": 0.0,
                      "CurrentRatio": 97.9,
                      "CurrentRatioValid": true,
                      "CurrentTimeStamp": "2020-11-26T18:27:14.8771196+01:00",
                      "LastMaintenanceCounterValue": 102.0,
                      "LastMaintenanceTimeStamp": "2020-10-26T18:27:14.8771196+01:00",
                      "LastMaintenanceValid": false
                    }
                  ],
                  "SensorDetails": [
                    {
                      "ResourceIdentifier": null,
                      "IdentiferUniqueness": "Unkwnown",
                      "ResourceName": "Temperature sensor",
                      "ResourceType": "Sensor",
                      "ResourcePosition": "2_R",
                      "MaintenanceStatus": null,
                      "AdditionalSubResources": null,
                      "Type": "Temperature",
                      "CustomSensorType": null,
                      "Value": 19.2,
                      "LowLimit": 15.0,
                      "HighLimit": 30.0,
                      "UnitOfMeasure": "DegreeCelsius",
                      "CustomUnitOfMeasure": null,
                      "SampleTime": "2020-11-26T18:27:14.8781183+01:00"
                    }
                  ],
                  "VerificationDetails": null
                },
                {
                  "UniqueIdentifier": "10000000-00 000-G1-GC__",
                  "Name": "SST34_1",
                  "CalibrationDetails": [
                    {
                      "CalibrationCode": "C123456",
                      "CalibrationType": "BoardCamera",
                      "Comments": "Done ok",
                      "Status": "Ok",
                      "CalibrationTime": "2020-11-26T18:27:14.8781183+01:00"
                    }
                  ],
                  "ErrorDetails": null,
                  "MaintenanceDetails": null,
                  "SensorDetails": null,
                  "VerificationDetails": [
                    {
                      "Name": "FCCSCalibration",
                      "Status": "Ok",
                      "Value": 0.0,
                      "UnitOfMeasure": null,
                      "VerificationLocation": "1.2",
                      "Type": "Special",
                      "IsValid": true,
                      "LastExecution": "2020-11-26T18:27:14.8791189+01:00",
                      "Comment": null
                    },
                    {
                      "Name": "FCCSCleaningRequired",
                      "Status": "Failed",
                      "Value": 0.0,
                      "UnitOfMeasure": null,
                      "VerificationLocation": "2.3",
                      "Type": "General",
                      "IsValid": true,
                      "LastExecution": "2020-11-26T18:27:14.8791189+01:00",
                      "Comment": null
                    }
                  ]
                },
                {
                  "UniqueIdentifier": "08ASMS500240",
                  "Name": "8mm-X Tape_2.40",
                  "CalibrationDetails": null,
                  "ErrorDetails": null,
                  "MaintenanceDetails": [
                    {
                      "Name": "FeederCycleCount",
                      "CounterType": "ActivityCount",
                      "CustomCounterType": null,
                      "MeasurementLocation": "08ASMS500240_Lane_1",
                      "CurrentCounterValue": 57002.0,
                      "CurrentRatio": 31.2,
                      "CurrentRatioValid": true,
                      "CurrentTimeStamp": "2020-11-26T18:27:14.8791189+01:00",
                      "LastMaintenanceCounterValue": 23456.0,
                      "LastMaintenanceTimeStamp": "2020-09-26T18:27:14.8791189+02:00",
                      "LastMaintenanceValid": false
                    }
                  ],
                  "SensorDetails": null,
                  "VerificationDetails": null
                }
              ]
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="M:CFX.Maintenance.GetResourceMaintenanceAndServiceResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceAndServiceResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceAndServiceResponse.Machine">
            <summary>
            The barcode, RFID, or other unique identifier that is used to identify this machine / endpoint.
            NOTE: in case the resource is not attached to the endpoint / machine, this field shall be null
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceAndServiceResponse.MachineServiceAndMaintenanceData">
            <summary>
            Dynamic structure that describes the details of this maintenance and service.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.GetResourceMaintenanceStatusRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic response from external systems with detailed information about a resource maintenance status.
            This is typically used for resource that may undergo maintenance operations (e.g. SMTTapeFeederInformation)
            <para></para>
            Example for SMT Endpoint:
            <code language="none">
            {
              "Machine": {
                "UniqueIdentifier": "10000000",
                "Name": "SIPLACE SX4",
                "Vendor": null,
                "ModelNumber": null,
                "SerialNumber": null,
                "SoftwareVersion": null,
                "FirmwareVersion": null
              },
              "ResourceMaintenanceDetails": [
                {
                  "$type": "CFX.Structures.Maintenance.SMTTapeFeederInformation, CFX",
                  "MultiLanes": null,
                  "ResourceName": "8mm-X Tape_2.14",
                  "ResourceIdentifier": "08FAUT901183",
                  "ResourceType": "8mm-X Tape",
                  "ResourcePosition": "2.14",
                  "MaintenanceStatus": null
                }
              ]
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceStatusRequest.Machine">
            <summary>
            The barcode, RFID, or other unique identifier that is used to identify this machine / endpoint.
            NOTE: in case the resource is not attached to the endpoint / machine, this field shall be null
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceStatusRequest.ResourceMaintenanceDetails">
            /// <summary>
            Dynamic structure that describes the request about maintenance details of this resource.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.GetResourceMaintenanceStatusResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic response from external systems with detailed information about a resource maintenance status.
            This is typically used for resource that may undergo maintenance operations (e.g. SMTTapeFeederInformation)
            <para></para>
            Example for SMT Endpoint:
            <code language="none">
            {
              "Result": null,
              "Machine": {
                "UniqueIdentifier": "10000000",
                "Name": "SIPLACE SX4",
                "Vendor": null,
                "ModelNumber": null,
                "SerialNumber": null,
                "SoftwareVersion": null,
                "FirmwareVersion": null
              },
              "ResourceMaintenanceDetails": [
                {
                  "$type": "CFX.Structures.Maintenance.SMTTapeFeederInformation, CFX",
                  "MultiLanes": [
                    {
                      "CycleCount": 1002,
                      "LaneNumber": 1,
                      "UniqueIdentifier": "09ASMS500302_Lane_1"
                    },
                    {
                      "CycleCount": 3451,
                      "LaneNumber": 2,
                      "UniqueIdentifier": "09ASMS500302_Lane_2"
                    }
                  ],
                  "ResourceName": "8mm-X Tape_2.14",
                  "ResourceIdentifier": "08FAUT901183",
                  "ResourceType": "8mm-X Tape",
                  "ResourcePosition": "2.14",
                  "MaintenanceStatus": {
                    "Reason": "No reason",
                    "ResultState": "Ok"
                  }
                }
              ]
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceStatusResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceStatusResponse.Machine">
            <summary>
            The barcode, RFID, or other unique identifier that is used to identify this machine / endpoint.
            NOTE: in case the resource is not attached to the endpoint / machine, this field shall be null
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceMaintenanceStatusResponse.ResourceMaintenanceDetails">
            /// <summary>
            Dynamic structure that describes the response about maintenance details of this resource.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.GetResourceSetupRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Requests detailed resource setup information about a single endpoint, as specified by its CFX Handle.
            The response includes information regarding the endpoint’s resource and sub-resources setup
            that may undergo maintenance operations
            <code language="none">
            {
              "CFXHandle": "SMT.SIPLACE_SX4.10000000"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceSetupRequest.CFXHandle">
            <summary>
            The handle of the endpoint about which the sender wishes to obtain information.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.GetResourceSetupResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Allows any CFX endpoint to request the resource and sub-resources setup of a specified single endpoint. 
            The endpoint information structure is a dynamic structure, and can vary based on the type of endpoint.
            <para></para>
            Example for SMT Endpoint:
            <para></para>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "ResourceSetup": {
                "$type": "CFX.Structures.Maintenance.SMTPlacementSetup, CFX",
                "UniqueIdentifier": "10000000",
                "Name": "SIPLACE SX4",
                "ResourceType": null,
                "Vendor": null,
                "ModelNumber": null,
                "SerialNumber": null,
                "SoftwareVersion": null,
                "FirmwareVersion": null,
                "NozzleChangerPockets": [
                  {
                    "ResourceIdentifier": "10000000_466",
                    "IdentiferUniqueness": "LocallyPersistent",
                    "ResourceName": "10000000_NozzleChanger_1_L_1_1_2_2_1006",
                    "ResourceType": "1006",
                    "ResourcePosition": "4.1.2.2",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_467",
                    "IdentiferUniqueness": "LocallyPersistent",
                    "ResourceName": "10000000_NozzleChanger_1_L_1_1_2_1_1006",
                    "ResourceType": "1006",
                    "ResourcePosition": "4.1.2.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  }
                ],
                "Tables": [
                  {
                    "ResourceIdentifier": "10000000_FeederDevice_1_L",
                    "IdentiferUniqueness": "UnserializedLocation",
                    "ResourceName": "Table_4",
                    "ResourceType": null,
                    "ResourcePosition": "4.1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_FeederDevice_1_R",
                    "IdentiferUniqueness": "UnserializedLocation",
                    "ResourceName": "Table_1",
                    "ResourceType": null,
                    "ResourcePosition": "1.1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  }
                ],
                "Feeders": [
                  {
                    "ResourceIdentifier": "08ASMS500240",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "8mm-X Tape_2.40",
                    "ResourceType": "8mm-X Tape",
                    "ResourcePosition": "2.40",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null,
                    "MultiLanes": [
                      {
                        "CycleCount": null,
                        "LaneNumber": 1,
                        "UniqueIdentifier": "08ASMS500240_1"
                      }
                    ]
                  },
                  {
                    "ResourceIdentifier": "09ASMS500302",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "2x8mm-X Tape_3.2",
                    "ResourceType": "2x8mm-X Tape",
                    "ResourcePosition": "3.2",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null,
                    "MultiLanes": [
                      {
                        "CycleCount": null,
                        "LaneNumber": 1,
                        "UniqueIdentifier": "09ASMS500302_Lane_1"
                      },
                      {
                        "CycleCount": null,
                        "LaneNumber": 2,
                        "UniqueIdentifier": "09ASMS500302_Lane_2"
                      }
                    ]
                  }
                ]
              }
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="M:CFX.Maintenance.GetResourceSetupResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceSetupResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Maintenance.GetResourceSetupResponse.ResourceSetup">
            <summary>
            Dynamic structure that describes the details of this resource.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.NamespaceDoc">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            CFX Topic implemented by endpoints which manage maintenance information
            </summary>
        </member>
        <member name="T:CFX.Maintenance.ResourceInformationEvent">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Allows any CFX endpoint to send the resource and sub-resources of a specified single endpoint. 
            The event can be sent "on change" or "time" base.
            The endpoint information structure is a dynamic structure, and can vary based on the type of endpoint.
            <para></para>
            Example for SMT Endpoint:
            <para></para>
            <code language="none">
            {
              "EventDateTime": "2020-11-26T18:27:14+01:00",
              "ResourceInformation": {
                "$type": "CFX.Structures.Maintenance.MaintenanceResource, CFX",
                "UniqueIdentifier": "10000000",
                "Name": "SMT SIPLACE SX 4",
                "ResourceType": "SMT",
                "Vendor": "ASM",
                "ModelNumber": "SIPLACE SX4",
                "SerialNumber": "UID1111111111111111",
                "SoftwareVersion": "713",
                "FirmwareVersion": null,
                "Resources": [
                  {
                    "ResourceIdentifier": "10000000-00 000-G1-GC__",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "SST34_1",
                    "ResourceType": "SST34",
                    "ResourcePosition": "1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000-00 000-G2-GC__",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "SST34_2",
                    "ResourceType": "SST34",
                    "ResourcePosition": "2.2",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000-00 000-G3-GC__",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "SST34_3",
                    "ResourceType": "SST34",
                    "ResourcePosition": "2.3",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000-00 000-G4-GC__",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "SST34_4",
                    "ResourceType": "SST34",
                    "ResourcePosition": "1.4",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Conveyor_0_E_1",
                    "IdentiferUniqueness": "LocallyPersistent",
                    "ResourceName": "Dual",
                    "ResourceType": "Conveyor",
                    "ResourcePosition": null,
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Gantry_X_1_R_1",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "Gantry_1",
                    "ResourceType": null,
                    "ResourcePosition": "1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Gantry_X_2_R_1",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "Gantry_2",
                    "ResourceType": null,
                    "ResourcePosition": "2.2",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Gantry_X_2_L_1",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "Gantry_3",
                    "ResourceType": null,
                    "ResourcePosition": "2.3",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_Gantry_X_1_L_1",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "Gantry_4",
                    "ResourceType": null,
                    "ResourcePosition": "1.4",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_NozzleChanger_1_L_1",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "NozzleCarrier_14_4.1",
                    "ResourceType": "NozzleCarrier_14",
                    "ResourcePosition": "1.4.1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_NozzleChanger_2_L_1",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "NozzleCarrier_10_3.1",
                    "ResourceType": "NozzleCarrier_10_3",
                    "ResourcePosition": "2.3.1.3",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "00000000-00 000-H1-_____",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "C&amp;P20_1",
                    "ResourceType": "C&amp;P20",
                    "ResourcePosition": "1.1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null,
                    "Cameras": [
                      {
                        "ResourceIdentifier": "10000000-00 000-H1-HC__",
                        "IdentiferUniqueness": "GloballyPersistent",
                        "ResourceName": "SST23_1.1",
                        "ResourceType": "SST23",
                        "ResourcePosition": "1.1.1",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      }
                    ],
                    "RotationAxes": [
                      {
                        "ResourceIdentifier": "10000000-00 000-H1-DP1_",
                        "IdentiferUniqueness": "LocallyPersistent",
                        "ResourceName": "C&amp;P20_1_DpAxis1",
                        "ResourceType": null,
                        "ResourcePosition": "1.1.1.1",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      },
                      {
                        "ResourceIdentifier": "10000000-00 000-H1-DP10",
                        "IdentiferUniqueness": "LocallyPersistent",
                        "ResourceName": "C&amp;P20_1_DpAxis10",
                        "ResourceType": null,
                        "ResourcePosition": "1.1.1.10",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      }
                    ]
                  },
                  {
                    "ResourceIdentifier": "00000000-00 000-H3-_____",
                    "IdentiferUniqueness": "GloballyPersistent",
                    "ResourceName": "C&amp;P20_3",
                    "ResourceType": "C&amp;P20",
                    "ResourcePosition": "2.3.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null,
                    "Cameras": [
                      {
                        "ResourceIdentifier": "10000000-00 000-H3-HC__",
                        "IdentiferUniqueness": "GloballyPersistent",
                        "ResourceName": "SST23_3.1",
                        "ResourceType": "SST23",
                        "ResourcePosition": "2.3.1",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      }
                    ],
                    "RotationAxes": [
                      {
                        "ResourceIdentifier": "10000000-00 000-H3-DP1_",
                        "IdentiferUniqueness": "LocallyPersistent",
                        "ResourceName": "C&amp;P20_3_DpAxis1",
                        "ResourceType": null,
                        "ResourcePosition": "2.3.1.1",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      },
                      {
                        "ResourceIdentifier": "10000000-00 000-H3-DP10",
                        "IdentiferUniqueness": "LocallyPersistent",
                        "ResourceName": "C&amp;P20_3_DpAxis10",
                        "ResourceType": null,
                        "ResourcePosition": "2.3.1.10",
                        "MaintenanceStatus": null,
                        "AdditionalSubResources": null
                      }
                    ]
                  },
                  {
                    "ResourceIdentifier": "10000000_TapeCutter_1_L_1",
                    "IdentiferUniqueness": "UnserializedLocation",
                    "ResourceName": "TapeCutter_1.4",
                    "ResourceType": "",
                    "ResourcePosition": "1.0.4",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_TapeCutter_1_R_1",
                    "IdentiferUniqueness": "UnserializedLocation",
                    "ResourceName": "TapeCutter_1.1",
                    "ResourceType": "",
                    "ResourcePosition": "1.0.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  }
                ]
              }
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="M:CFX.Maintenance.ResourceInformationEvent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceInformationEvent.EventDateTime">
            <summary>
            The date time of the event
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceInformationEvent.ResourceInformation">
            <summary>
            Dynamic structure that describes the details of this resource.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.ResourceMaintenanceAndServiceEvent">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Allows any CFX endpoint to send the resource and sub-resources maintenance and services of a specified single endpoint. 
            The event can be sent "on change" or "time" base.
            The endpoint information structure is a dynamic structure, and can vary based on the type of endpoint.
            <para></para>
            Example for SMT Endpoint:
            <para></para>
            <code language="none">
            {
              "EventDateTime": "2020-11-26T18:27:14+01:00",
              "Machine": {
                "UniqueIdentifier": "10000000",
                "Name": "SIPLACE SX4",
                "ResourceType": null,
                "Vendor": null,
                "ModelNumber": null,
                "SerialNumber": null,
                "SoftwareVersion": null,
                "FirmwareVersion": null
              },
              "MachineServiceAndMaintenanceData": [
                {
                  "UniqueIdentifier": "00000000-00 000-H2-_____",
                  "Name": "C&amp;P20_2",
                  "CalibrationDetails": [
                    {
                      "CalibrationCode": "SegmentOffset",
                      "CalibrationType": "SegmentOffset",
                      "Comments": "",
                      "Status": "Ok",
                      "CalibrationTime": "2020-11-26T18:27:14.9231201+01:00"
                    },
                    {
                      "CalibrationCode": "HeadMapping_0_R",
                      "CalibrationType": "HeadMapping",
                      "Comments": "Calibration failed. Check log",
                      "Status": "Failed",
                      "CalibrationTime": "2020-11-26T18:27:14.9231201+01:00"
                    }
                  ],
                  "ErrorDetails": null,
                  "MaintenanceDetails": [
                    {
                      "Name": "HeadCompleteMileage",
                      "CounterType": "Odometer",
                      "CustomCounterType": null,
                      "MeasurementLocation": "1.1.1",
                      "CurrentCounterValue": 0.0,
                      "CurrentRatio": 97.9,
                      "CurrentRatioValid": true,
                      "CurrentTimeStamp": "2020-11-26T18:27:14.9231201+01:00",
                      "LastMaintenanceCounterValue": 102.0,
                      "LastMaintenanceTimeStamp": "2020-10-26T18:27:14.9231201+01:00",
                      "LastMaintenanceValid": false
                    }
                  ],
                  "SensorDetails": [
                    {
                      "ResourceIdentifier": null,
                      "IdentiferUniqueness": "Unkwnown",
                      "ResourceName": "Temperature sensor",
                      "ResourceType": "Sensor",
                      "ResourcePosition": "2_R",
                      "MaintenanceStatus": null,
                      "AdditionalSubResources": null,
                      "Type": "Temperature",
                      "CustomSensorType": null,
                      "Value": 19.2,
                      "LowLimit": 15.0,
                      "HighLimit": 30.0,
                      "UnitOfMeasure": "DegreeCelsius",
                      "CustomUnitOfMeasure": null,
                      "SampleTime": "2020-11-26T18:27:14.9231201+01:00"
                    }
                  ],
                  "VerificationDetails": null
                },
                {
                  "UniqueIdentifier": "10000000-00 000-G1-GC__",
                  "Name": "SST34_1",
                  "CalibrationDetails": [
                    {
                      "CalibrationCode": "C123456",
                      "CalibrationType": "BoardCamera",
                      "Comments": "Done ok",
                      "Status": "Ok",
                      "CalibrationTime": "2020-11-26T18:27:14.9231201+01:00"
                    }
                  ],
                  "ErrorDetails": null,
                  "MaintenanceDetails": null,
                  "SensorDetails": null,
                  "VerificationDetails": [
                    {
                      "Name": "FCCSCalibration",
                      "Status": "Ok",
                      "Value": 0.0,
                      "UnitOfMeasure": null,
                      "VerificationLocation": "1.2",
                      "Type": "Special",
                      "IsValid": true,
                      "LastExecution": "2020-11-26T18:27:14.9231201+01:00",
                      "Comment": null
                    },
                    {
                      "Name": "FCCSCleaningRequired",
                      "Status": "Failed",
                      "Value": 0.0,
                      "UnitOfMeasure": null,
                      "VerificationLocation": "2.3",
                      "Type": "General",
                      "IsValid": true,
                      "LastExecution": "2020-11-26T18:27:14.9231201+01:00",
                      "Comment": null
                    }
                  ]
                },
                {
                  "UniqueIdentifier": "08ASMS500240",
                  "Name": "8mm-X Tape_2.40",
                  "CalibrationDetails": null,
                  "ErrorDetails": null,
                  "MaintenanceDetails": [
                    {
                      "Name": "FeederCycleCount",
                      "CounterType": "ActivityCount",
                      "CustomCounterType": null,
                      "MeasurementLocation": "08ASMS500240_Lane_1",
                      "CurrentCounterValue": 57002.0,
                      "CurrentRatio": 31.2,
                      "CurrentRatioValid": true,
                      "CurrentTimeStamp": "2020-11-26T18:27:14.9231201+01:00",
                      "LastMaintenanceCounterValue": 23456.0,
                      "LastMaintenanceTimeStamp": "2020-09-26T18:27:14.9231201+02:00",
                      "LastMaintenanceValid": false
                    }
                  ],
                  "SensorDetails": null,
                  "VerificationDetails": null
                }
              ]
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="M:CFX.Maintenance.ResourceMaintenanceAndServiceEvent.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceMaintenanceAndServiceEvent.EventDateTime">
            <summary>
            The date time of the event
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceMaintenanceAndServiceEvent.Machine">
            <summary>
            The barcode, RFID, or other unique identifier that is used to identify this machine / endpoint.
            NOTE: in case the resource is not attached to the endpoint / machine, this field shall be null
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceMaintenanceAndServiceEvent.MachineServiceAndMaintenanceData">
            <summary>
            Dynamic structure that describes the details of this maintenance and service.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.ResourceMaintenanceStatusEvent">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic event from external systems with detailed information about a resource maintenance status.
            The event can be sent "on change" or "time" base.
            This is typically used for resource that may undergo maintenance operations (e.g. SMTTapeFeederInformation)
            <para></para>
            Example for SMT Endpoint:
            <code language="none">
            {
              "EventDateTime": "2020-11-26T18:43:29+01:00",
              "Machine": {
                "UniqueIdentifier": "10000000",
                "Name": "SIPLACE SX4",
                "ResourceType": "SMT",
                "Vendor": "ASM",
                "ModelNumber": "1234",
                "SerialNumber": "1234567890",
                "SoftwareVersion": "730",
                "FirmwareVersion": "0"
              },
              "ResourceMaintenanceDetails": [
                {
                  "$type": "CFX.Structures.Maintenance.SMTTapeFeederInformation, CFX",
                  "ResourceIdentifier": "08FAUT901183",
                  "IdentiferUniqueness": "GloballyPersistent",
                  "ResourceName": "8mm-X Tape_2.14",
                  "ResourceType": "8mm-X Tape",
                  "ResourcePosition": "2.14",
                  "MaintenanceStatus": {
                    "Reason": "No reason",
                    "ResultState": "Ok"
                  },
                  "AdditionalSubResources": null,
                  "MultiLanes": [
                    {
                      "CycleCount": 1002,
                      "LaneNumber": 1,
                      "UniqueIdentifier": "09ASMS500302_Lane_1"
                    },
                    {
                      "CycleCount": 3451,
                      "LaneNumber": 2,
                      "UniqueIdentifier": "09ASMS500302_Lane_2"
                    }
                  ]
                }
              ]
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceMaintenanceStatusEvent.EventDateTime">
            <summary>
            The date time of the event
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceMaintenanceStatusEvent.Machine">
            <summary>
            The barcode, RFID, or other unique identifier that is used to identify this machine / endpoint.
            NOTE: in case the resource is not attached to the endpoint / machine, this field shall be null
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceMaintenanceStatusEvent.ResourceMaintenanceDetails">
            /// <summary>
            Dynamic structure that describes the response about maintenance details of this resource.
            </summary>
        </member>
        <member name="T:CFX.Maintenance.ResourceSetupEvent">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Allows any CFX endpoint to send data about the resource and sub-resources setup. 
            The event can be sent "on change" or "time" base.
            The endpoint information structure is a dynamic structure, and can vary based on the type of endpoint.
            <para></para>
            Example for SMT Endpoint:
            <para></para>
            <code language="none">
            {
              "EventDateTime": "2020-11-26T18:27:14+01:00",
              "ResourceSetup": {
                "$type": "CFX.Structures.Maintenance.SMTPlacementSetup, CFX",
                "UniqueIdentifier": "10000000",
                "Name": "SIPLACE SX4",
                "ResourceType": null,
                "Vendor": null,
                "ModelNumber": null,
                "SerialNumber": null,
                "SoftwareVersion": null,
                "FirmwareVersion": null,
                "NozzleChangerPockets": [
                  {
                    "ResourceIdentifier": "10000000_466",
                    "IdentiferUniqueness": "LocallyPersistent",
                    "ResourceName": "10000000_NozzleChanger_1_L_1_1_2_2_1006",
                    "ResourceType": "1006",
                    "ResourcePosition": "4.1.2.2",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_467",
                    "IdentiferUniqueness": "LocallyPersistent",
                    "ResourceName": "10000000_NozzleChanger_1_L_1_1_2_1_1006",
                    "ResourceType": "1006",
                    "ResourcePosition": "4.1.2.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  }
                ],
                "Tables": [
                  {
                    "ResourceIdentifier": "10000000_FeederDevice_1_L",
                    "IdentiferUniqueness": "UnserializedLocation",
                    "ResourceName": "Table_4",
                    "ResourceType": null,
                    "ResourcePosition": "4.1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  },
                  {
                    "ResourceIdentifier": "10000000_FeederDevice_1_R",
                    "IdentiferUniqueness": "UnserializedLocation",
                    "ResourceName": "Table_1",
                    "ResourceType": null,
                    "ResourcePosition": "1.1.1",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null
                  }
                ],
                "Feeders": [
                  {
                    "ResourceIdentifier": "08ASMS500240",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "8mm-X Tape_2.40",
                    "ResourceType": "8mm-X Tape",
                    "ResourcePosition": "2.40",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null,
                    "MultiLanes": [
                      {
                        "CycleCount": null,
                        "LaneNumber": 1,
                        "UniqueIdentifier": "08ASMS500240_1"
                      }
                    ]
                  },
                  {
                    "ResourceIdentifier": "09ASMS500302",
                    "IdentiferUniqueness": "Unkwnown",
                    "ResourceName": "2x8mm-X Tape_3.2",
                    "ResourceType": "2x8mm-X Tape",
                    "ResourcePosition": "3.2",
                    "MaintenanceStatus": null,
                    "AdditionalSubResources": null,
                    "MultiLanes": [
                      {
                        "CycleCount": null,
                        "LaneNumber": 1,
                        "UniqueIdentifier": "09ASMS500302_Lane_1"
                      },
                      {
                        "CycleCount": null,
                        "LaneNumber": 2,
                        "UniqueIdentifier": "09ASMS500302_Lane_2"
                      }
                    ]
                  }
                ]
              }
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="M:CFX.Maintenance.ResourceSetupEvent.#ctor">
            <summary>
            Default constructor for the ResourceSetupEvent
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceSetupEvent.EventDateTime">
            <summary>
            The date time of the event
            </summary>
        </member>
        <member name="P:CFX.Maintenance.ResourceSetupEvent.ResourceSetup">
            <summary>
            Dynamic structure that describes the details of this resource.
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.BlockMaterialsRequest">
            <summary>
            A request to block one or more particular lots or instances of material from use in production.
            <code language="none">
            {
              "MaterialPackageIdentifiers": [
                "MAT4566556456",
                "MAT4566554543"
              ],
              "Reason": "SuspectedProblem",
              "Comments": "Suspected Bad Lot of Parts",
              "Blocker": {
                "OperatorIdentifier": null,
                "ActorType": "Human",
                "FullName": null,
                "LastName": null,
                "FirstName": null,
                "LoginName": null
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.BlockMaterialsRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.BlockMaterialsRequest.MaterialPackageIdentifiers">
            <summary>
            A list of the unique identifiers of the material packages to be blocked
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.BlockMaterialsRequest.Reason">
            <summary>
            An enumeration describing the reason for the block
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.BlockMaterialsRequest.Comments">
            <summary>
            Human readable comments describing the nature of the block (optional)
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.BlockMaterialsRequest.Blocker">
            <summary>
            The person responsible for initiating this block (optional)
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.BlockMaterialsResponse">
            <summary>
            Response to a request block one or more instances of material from use in production
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "MaterialsPackagesNotBlocked": []
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.BlockMaterialsResponse.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.BlockMaterialsResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.BlockMaterialsResponse.MaterialsPackagesNotBlocked">
            <summary>
            In the case that some of the material packages identified in the request could not be blocked,
            the Result property will be set to PartialSuccess, and this property will contain a list of the identifiers
            that could not be blocked.
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.GetMaterialInformationRequest">
            <summary>
            A request (typically to an factory level software system) to obtain detailed information about a particular material package (or collection of 
            material packages).
            <code language="none">
            {
              "MaterialPackageIdentifiers": [
                "MAT4566556456",
                "MAT4566554543"
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.GetMaterialInformationRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.GetMaterialInformationRequest.MaterialPackageIdentifiers">
            <summary>
            A list of the unique identifiers of the material packages for which detailed
            information is requested.
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.GetMaterialInformationResponse">
            <summary>
            Response to a request to obtain detailed information about one or more material packages
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Manufacturer": "MOTOROLA",
                  "ManufacturerPartNumber": "MOT231234",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG23452442",
                  "ManufacturerLotCode": "LOT2016110588",
                  "Created": "2019-08-30T08:57:38.8044515-04:00",
                  "ManufactureDate": "2016-11-05T00:00:00",
                  "ReceivedDate": "2017-05-06T00:00:00",
                  "ExpiryDate": null,
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 887.0,
                  "Status": "Active",
                  "HazardousMaterialType": "RoHS",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": null,
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2017-05-06T13:55:33",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL3",
                    "MSDState": "InDryStorage"
                  }
                },
                {
                  "UniqueIdentifier": "MAT4566554543",
                  "InternalPartNumber": "IPN48899",
                  "Manufacturer": "SAMSUNG",
                  "ManufacturerPartNumber": "SAM233243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG44543534",
                  "ManufacturerLotCode": "LOT2016101008",
                  "Created": "2019-08-30T08:57:38.8044515-04:00",
                  "ManufactureDate": "2016-10-10T00:00:00",
                  "ReceivedDate": "2017-09-09T00:00:00",
                  "ExpiryDate": null,
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 748.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": null
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.GetMaterialInformationResponse.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.GetMaterialInformationResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.GetMaterialInformationResponse.Materials">
            <summary>
            A list of structures containing the detailed information about the material packages that were requested.
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MaterialsChainSplit">
            <summary>
            Sent when a certain material package chain is is been modified by opening the
            splice plate and therefore create 2 material chains out of one.
            No new material ID will be created during this usecase.
            This use case is operatoed on the station. 
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsChainSplit.SplittedMaterialPackage">
            <summary>
            The splitted chain is the packaging unit chain, which is removed from the machine
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsChainSplit.RemainingMaterialPackage">
            <summary>
            The material Chain is the packaging unit chain, which is remaining at the station.
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MaterialsConsumed">
            <summary>
            Sent by a process endpoint when materials are consumed
            <code language="none">
            {
              "ConsumedMaterials": [
                {
                  "MaterialLocation": {
                    "LocationIdentifier": "3245434554",
                    "LocationName": "SLOT22",
                    "MaterialPackage": {
                      "UniqueIdentifier": "MAT238908348903",
                      "InternalPartNumber": "IPN-1222-55555",
                      "Quantity": 344.0
                    },
                    "CarrierInformation": {
                      "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                      "BaseUniqueIdentifier": null,
                      "BaseName": null,
                      "LaneNumber": 1,
                      "TapeWidth": 8.0,
                      "TapePitch": 4.0,
                      "UniqueIdentifier": "234232432424",
                      "Name": "FEEDER2245465"
                    }
                  },
                  "QuantityUsed": 42.0,
                  "QuantitySpoiled": 2.0,
                  "RemainingQuantity": 344.0
                },
                {
                  "MaterialLocation": {
                    "LocationIdentifier": "3245435784",
                    "LocationName": "SLOT28",
                    "MaterialPackage": {
                      "UniqueIdentifier": "MAT238908323434",
                      "InternalPartNumber": "IPN-1222-11111",
                      "Quantity": 258.0
                    },
                    "CarrierInformation": {
                      "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                      "BaseUniqueIdentifier": null,
                      "BaseName": null,
                      "LaneNumber": 1,
                      "TapeWidth": 8.0,
                      "TapePitch": 4.0,
                      "UniqueIdentifier": "234232432424",
                      "Name": "FEEDER2245465"
                    }
                  },
                  "QuantityUsed": 88.0,
                  "QuantitySpoiled": 3.0,
                  "RemainingQuantity": 258.0
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MaterialsConsumed.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsConsumed.ConsumedMaterials">
            <summary>
            A list of one or more materials that have been consumed
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MaterialsInitialized">
            <summary>
            Sent whan one or more new material packages are introduced into the factory environment.  
            This might occurr when new material is received from suppliers, or when newly received
            material is labeled with unique identifiers for tracking, stocking, or production purposes.
            <code language="none">
            {
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Manufacturer": "MOTOROLA",
                  "ManufacturerPartNumber": "MOT231234",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG23452442",
                  "ManufacturerLotCode": "LOT2016110588",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-11-05T00:00:00",
                  "ReceivedDate": "2017-05-06T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 887.0,
                  "Status": "Active",
                  "HazardousMaterialType": "RoHS",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": null,
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2017-05-06T13:55:33",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL3",
                    "MSDState": "InDryStorage"
                  }
                },
                {
                  "UniqueIdentifier": "MAT4566554543",
                  "InternalPartNumber": "IPN48899",
                  "Manufacturer": "SAMSUNG",
                  "ManufacturerPartNumber": "SAM233243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG44543534",
                  "ManufacturerLotCode": "LOT2016101008",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-10-10T00:00:00",
                  "ReceivedDate": "2017-09-09T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 748.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": null
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MaterialsInitialized.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsInitialized.Materials">
            <summary>
            A list of the new material packages, including details
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MaterialsJoined">
            <summary>
            Sent when two separate material packages (containing the same part) are joined together.
            For example, as in the case of the splicing together of multiple reels of embossed tape
            containing SMD parts.
            <code language="none">
            {
              "LeadingMaterialPackage": {
                "UniqueIdentifier": "MAT4566589856",
                "InternalPartNumber": "IPN45577",
                "Quantity": 151.0
              },
              "TrailingMaterialPackage": {
                "UniqueIdentifier": "MAT4563453457",
                "InternalPartNumber": "IPN45577",
                "Quantity": 151.0
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsJoined.LeadingMaterialPackage">
            <summary>
            Of the two material packages being joined, the material package which will be consumed
            first after joining
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsJoined.TrailingMaterialPackage">
            <summary>
            Of the two material packages being joined, the material package which will be consumed
            last after joining
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MaterialsModified">
            <summary>
            Sent when the attributes of one or more specific material packages have been altered.
            NOTEL  When the current quantity attribute of the material package decreases in the 
            normal course of production (consumption), a MaterialsModified modified message should NOT
            be sent.  Instead, in this case a <see cref="T:CFX.Materials.Management.MaterialsConsumed"/> message should be sent.
            <code language="none">
            {
              "Reason": "ManualCountAndQuantityUpdate",
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Manufacturer": "MOTOROLA",
                  "ManufacturerPartNumber": "MOT231234",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG23452442",
                  "ManufacturerLotCode": "LOT2016110588",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-11-05T00:00:00",
                  "ReceivedDate": "2017-05-06T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 887.0,
                  "Status": "Active",
                  "HazardousMaterialType": "RoHS",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": null,
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2017-05-06T13:55:33",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL3",
                    "MSDState": "InDryStorage"
                  }
                },
                {
                  "UniqueIdentifier": "MAT4566554543",
                  "InternalPartNumber": "IPN48899",
                  "Manufacturer": "SAMSUNG",
                  "ManufacturerPartNumber": "SAM233243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG44543534",
                  "ManufacturerLotCode": "LOT2016101008",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-10-10T00:00:00",
                  "ReceivedDate": "2017-09-09T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 748.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": null
                },
                {
                  "UniqueIdentifier": "MAT4566553421",
                  "InternalPartNumber": "IPN45577",
                  "Manufacturer": "FUJITSU",
                  "ManufacturerPartNumber": "FJJT234243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG543534537",
                  "ManufacturerLotCode": "LOT2017080355",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2017-08-03T00:00:00",
                  "ReceivedDate": "2017-09-10T00:00:00",
                  "Units": null,
                  "InitialQuantity": 500.0,
                  "Quantity": 151.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": null,
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2017-05-06T13:55:33",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL2A",
                    "MSDState": "Exposed"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MaterialsModified.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsModified.Reason">
            <summary>
            The reason for the changes
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsModified.Materials">
            <summary>
            A list of material packages, including the updated information
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MaterialsRetired">
            <summary>
            Sent when one or more material packages are fully exhausted / depleted
            <code language="none">
            {
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Quantity": 887.0
                },
                {
                  "UniqueIdentifier": "MAT4566554543",
                  "InternalPartNumber": "IPN48899",
                  "Quantity": 748.0
                },
                {
                  "UniqueIdentifier": "MAT4566553421",
                  "InternalPartNumber": "IPN45577",
                  "Quantity": 151.0
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MaterialsRetired.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsRetired.Materials">
            <summary>
            A list of the materials that have been exhausted / depleted
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MaterialsSplit">
            <summary>
            Sent when a a certain quantity of material is removed from a material package
            to form a new material package.  The sum of the new quantities of the old and 
            new material package packages should equal the quantity of the original package.
            <code language="none">
            {
              "SourceMaterialPackageIdentifier": "MAT4566589856",
              "SourceMaterialPackageRemainingQuantity": 121.0,
              "NewMaterialPackageIdentifier": "MAT4563453457",
              "NewMaterialPackageQuantity": 30.0
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsSplit.SourceMaterialPackageIdentifier">
            <summary>
            The unique identifier of the original material package that is being divided
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsSplit.SourceMaterialPackageRemainingQuantity">
            <summary>
            The quantity of material remaining in the original material package after
            it was divided
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsSplit.NewMaterialPackageIdentifier">
            <summary>
            The unique identifier of the newly created material package
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MaterialsSplit.NewMaterialPackageQuantity">
            <summary>
            The amount of material contained within newly created material package
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MSDManagement.MaterialsExpired">
            <summary>
            Sent when one or more MSD material packages have reached their maximum exposure time, 
            and may no longer be used in production (unless reconditioned)
            <code language="none">
            {
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Manufacturer": "MOTOROLA",
                  "ManufacturerPartNumber": "MOT231234",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG23452442",
                  "ManufacturerLotCode": "LOT2016110588",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-11-05T00:00:00",
                  "ReceivedDate": "2017-05-06T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 887.0,
                  "Status": "Active",
                  "HazardousMaterialType": "RoHS",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": "2018-09-28T12:48:00.2251223-04:00",
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.2221189-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL3",
                    "MSDState": "Expired"
                  }
                },
                {
                  "UniqueIdentifier": "MAT4566553421",
                  "InternalPartNumber": "IPN45577",
                  "Manufacturer": "FUJITSU",
                  "ManufacturerPartNumber": "FJJT234243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG543534537",
                  "ManufacturerLotCode": "LOT2017080355",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2017-08-03T00:00:00",
                  "ReceivedDate": "2017-09-10T00:00:00",
                  "Units": null,
                  "InitialQuantity": 500.0,
                  "Quantity": 151.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": "2018-09-28T12:48:00.2251223-04:00",
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.2221189-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL2A",
                    "MSDState": "Expired"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MSDManagement.MaterialsExpired.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MSDManagement.MaterialsExpired.Materials">
            <summary>
            The materials which have expired
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MSDManagement.MaterialsOpened">
            <summary>
            Sent when one or more MSD material packages have been opened and exposed to the environment
            <code language="none">
            {
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Manufacturer": "MOTOROLA",
                  "ManufacturerPartNumber": "MOT231234",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG23452442",
                  "ManufacturerLotCode": "LOT2016110588",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-11-05T00:00:00",
                  "ReceivedDate": "2017-05-06T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 887.0,
                  "Status": "Active",
                  "HazardousMaterialType": "RoHS",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": "2018-10-04T12:48:00.2221189-04:00",
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.2221189-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL3",
                    "MSDState": "Exposed"
                  }
                },
                {
                  "UniqueIdentifier": "MAT4566553421",
                  "InternalPartNumber": "IPN45577",
                  "Manufacturer": "FUJITSU",
                  "ManufacturerPartNumber": "FJJT234243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG543534537",
                  "ManufacturerLotCode": "LOT2017080355",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2017-08-03T00:00:00",
                  "ReceivedDate": "2017-09-10T00:00:00",
                  "Units": null,
                  "InitialQuantity": 500.0,
                  "Quantity": 151.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": "2018-10-04T12:48:00.2221189-04:00",
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.2221189-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL2A",
                    "MSDState": "Exposed"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MSDManagement.MaterialsOpened.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MSDManagement.MaterialsOpened.Materials">
            <summary>
            The materials which have been opened / exposed
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MSDManagement.MaterialsPlacedInDryStorage">
            <summary>
            Sent when one or more MSD material packages have been placed into dry storage
            <code language="none">
            {
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Manufacturer": "MOTOROLA",
                  "ManufacturerPartNumber": "MOT231234",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG23452442",
                  "ManufacturerLotCode": "LOT2016110588",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-11-05T00:00:00",
                  "ReceivedDate": "2017-05-06T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 887.0,
                  "Status": "Active",
                  "HazardousMaterialType": "RoHS",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": null,
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.2221189-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL3",
                    "MSDState": "InDryStorage"
                  }
                },
                {
                  "UniqueIdentifier": "MAT4566553421",
                  "InternalPartNumber": "IPN45577",
                  "Manufacturer": "FUJITSU",
                  "ManufacturerPartNumber": "FJJT234243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG543534537",
                  "ManufacturerLotCode": "LOT2017080355",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2017-08-03T00:00:00",
                  "ReceivedDate": "2017-09-10T00:00:00",
                  "Units": null,
                  "InitialQuantity": 500.0,
                  "Quantity": 151.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": null,
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.2221189-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL2A",
                    "MSDState": "InDryStorage"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MSDManagement.MaterialsPlacedInDryStorage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MSDManagement.MaterialsPlacedInDryStorage.Materials">
            <summary>
            The materials which have been placed in dry storage
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MSDManagement.MaterialsRemovedFromDryStorage">
            <summary>
            Sent when one or more MSD material packages have been removed from dry storage
            <code language="none">
            {
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Manufacturer": "MOTOROLA",
                  "ManufacturerPartNumber": "MOT231234",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG23452442",
                  "ManufacturerLotCode": "LOT2016110588",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-11-05T00:00:00",
                  "ReceivedDate": "2017-05-06T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 887.0,
                  "Status": "Active",
                  "HazardousMaterialType": "RoHS",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": "2018-10-04T12:48:00.2341165-04:00",
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.2341165-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL3",
                    "MSDState": "Exposed"
                  }
                },
                {
                  "UniqueIdentifier": "MAT4566553421",
                  "InternalPartNumber": "IPN45577",
                  "Manufacturer": "FUJITSU",
                  "ManufacturerPartNumber": "FJJT234243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG543534537",
                  "ManufacturerLotCode": "LOT2017080355",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2017-08-03T00:00:00",
                  "ReceivedDate": "2017-09-10T00:00:00",
                  "Units": null,
                  "InitialQuantity": 500.0,
                  "Quantity": 151.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": "2018-10-04T12:48:00.2341165-04:00",
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.2341165-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL2A",
                    "MSDState": "Exposed"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MSDManagement.MaterialsRemovedFromDryStorage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MSDManagement.MaterialsRemovedFromDryStorage.Materials">
            <summary>
            The materials which have been removed from dry storage
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MSDManagement.MaterialsRestored">
            <summary>
            Sent when one or more MSD material packages have been reconditioned, and restored for use in production
            <code language="none">
            {
              "Materials": [
                {
                  "UniqueIdentifier": "MAT4566556456",
                  "InternalPartNumber": "IPN47788",
                  "Manufacturer": "MOTOROLA",
                  "ManufacturerPartNumber": "MOT231234",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG23452442",
                  "ManufacturerLotCode": "LOT2016110588",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2016-11-05T00:00:00",
                  "ReceivedDate": "2017-05-06T00:00:00",
                  "Units": null,
                  "InitialQuantity": 1000.0,
                  "Quantity": 887.0,
                  "Status": "Active",
                  "HazardousMaterialType": "RoHS",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": "2018-10-04T12:48:00.238139-04:00",
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.238139-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL3",
                    "MSDState": "Exposed"
                  }
                },
                {
                  "UniqueIdentifier": "MAT4566553421",
                  "InternalPartNumber": "IPN45577",
                  "Manufacturer": "FUJITSU",
                  "ManufacturerPartNumber": "FJJT234243",
                  "Vendor": "Digikey",
                  "VendorPartNumber": "DIG543534537",
                  "ManufacturerLotCode": "LOT2017080355",
                  "Created": "2018-09-28T12:47:59.1991055-04:00",
                  "ManufactureDate": "2017-08-03T00:00:00",
                  "ReceivedDate": "2017-09-10T00:00:00",
                  "Units": null,
                  "InitialQuantity": 500.0,
                  "Quantity": 151.0,
                  "Status": "Active",
                  "HazardousMaterialType": "NotHazardous",
                  "MaterialData": {
                    "$type": "CFX.Structures.MaterialPackageMSDData, CFX",
                    "ExpirationDateTime": "2018-10-04T12:48:00.238139-04:00",
                    "OriginalExposureDateTime": "2017-05-01T08:22:12",
                    "LastExposureDateTime": "2018-09-28T12:48:00.238139-04:00",
                    "RemainingExposureTime": "6.00:00:00",
                    "MSDLevel": "MSL2A",
                    "MSDState": "Exposed"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.MSDManagement.MaterialsRestored.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.MSDManagement.MaterialsRestored.Materials">
            <summary>
            The materials which have been restored
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.MSDManagement.NamespaceDoc">
            <summary>
            Specialized messages related to moisture sensitive materials management.
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.NamespaceDoc">
            <summary>
            Messages related to the management of raw materials.  Includes creation and labeling of material instances, decommissioning spent materials, etc.
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.UnblockMaterialsRequest">
            <summary>
            A request to unblock one or more particular lots or instances of material from use in production.
            <code language="none">
            {
              "Locations": [
                {
                  "LocationIdentifier": "23143433",
                  "LocationName": "SLOT45",
                  "MaterialPackage": null,
                  "CarrierInformation": null
                },
                {
                  "LocationIdentifier": "23143454",
                  "LocationName": "SLOT46",
                  "MaterialPackage": null,
                  "CarrierInformation": null
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.UnblockMaterialsRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.UnblockMaterialsRequest.MaterialPackageIdentifiers">
            <summary>
            A list of the unique identifiers of the material packages to be blocked
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.UnblockMaterialsRequest.Comments">
            <summary>
            Human readable comments describing the nature of the block (optional)
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.UnblockMaterialsRequest.Unblocker">
            <summary>
            The person responsible for removing the block (optional)
            </summary>
        </member>
        <member name="T:CFX.Materials.Management.UnblockMaterialsResponse">
            <summary>
            Response to a request to unblock one or more particular lots or instances of material from use in production.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "BLOCKED OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Management.UnblockMaterialsResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Management.UnblockMaterialsResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Materials.NamespaceDoc">
            <summary>
            CFX Topic implemented by endpoints which manage, store, or track materials used in production.
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.GetLoadedMaterialsRequest">
            <summary>
            A request to a material storage endpoint to obtain a list of all the materials
            currently stored within the endpoint.
            <code language="none">
            {
              "LocationIdentifiers": null
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.GetLoadedMaterialsRequest.LocationIdentifiers">
            <summary>
            An optional list of specific locations in which the requestor is interested.
            If empty, all materials loaded at the Endpoint are returned.
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.GetLoadedMaterialsResponse">
            <summary>
            A response to a request to a material storage endpoint to obtain a list of all the materials
            currently stored within the endpoint.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "SETUP OK"
              },
              "Materials": [
                {
                  "LocationIdentifier": "5555646453",
                  "LocationName": "SLOT45",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "CarrierInformation": {
                    "UniqueIdentifier": "1233333",
                    "Name": null
                  }
                },
                {
                  "LocationIdentifier": "5555646454",
                  "LocationName": "SLOT50",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566554543",
                    "InternalPartNumber": "IPN48899",
                    "Quantity": 748.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": "123334",
                    "BaseName": null,
                    "LaneNumber": 1,
                    "TapeWidth": 8.0,
                    "TapePitch": 8.0,
                    "UniqueIdentifier": "1233334",
                    "Name": "TAPEFEEDER8mm1233334"
                  }
                },
                {
                  "LocationIdentifier": "5555646457",
                  "LocationName": "92.1",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566589856",
                    "InternalPartNumber": "IPN45577",
                    "Quantity": 151.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTrayFeeder, CFX",
                    "CellDimensionX": 17.0,
                    "CellDimensionY": 17.0,
                    "CellCountX": 8,
                    "CellCountY": 3,
                    "CellPitchX": 0.0,
                    "CellPitchY": 0.0,
                    "UniqueIdentifier": "1233337",
                    "Name": "MATRIXTRAY1233337"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Storage.GetLoadedMaterialsResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.GetLoadedMaterialsResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.GetLoadedMaterialsResponse.Materials">
            <summary>
            A list of the materials stored at the process endpoint, including
            storage location information.
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.MaterialCarriersLoaded">
            <summary>
            Sent when a material carrier (typcially containing 1 or more material packages)
            is loaded at an endpoint.
            <code language="none">
            {
              "Carriers": [
                {
                  "LocationIdentifier": "5555646453",
                  "LocationName": null,
                  "CarrierInformation": {
                    "UniqueIdentifier": "1233333",
                    "Name": null
                  }
                },
                {
                  "LocationIdentifier": "5555646455",
                  "LocationName": "LANEA",
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": "123335",
                    "BaseName": "MULTILANEFEEDER123335",
                    "LaneNumber": 1,
                    "TapeWidth": 8.0,
                    "TapePitch": 4.0,
                    "UniqueIdentifier": "1233335A",
                    "Name": "TAPEFEEDER8mm1233335A"
                  }
                },
                {
                  "LocationIdentifier": "5555646455",
                  "LocationName": "LANEB",
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": "123335",
                    "BaseName": "MULTILANEFEEDER123335",
                    "LaneNumber": 2,
                    "TapeWidth": 8.0,
                    "TapePitch": 4.0,
                    "UniqueIdentifier": "1233335B",
                    "Name": "TAPEFEEDER8mm1233335B"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Storage.MaterialCarriersLoaded.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialCarriersLoaded.Carriers">
            <summary>
            There are two usage cases are available for this message:
                1) Load MaterialCarrier directly to Endpoint 
                   (LocationIdentifier = Endpoint Slot Identifier, CarrierInformation = Carrier to be loaded)
                2) Load MateriialCarrier to another MaterialCarrier
                   (LocationIdentifier = Identifier of new parent carrier, CarrierInformation = Identifier of carrier to be loaded)
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.MaterialCarriersUnloaded">
            <summary>
            Sent when a material carrier (typcially containing 1 or more material packages)
            is unloaded at an endpoint.
            <code language="none">
            {
              "CarrierIdentifiers": [
                "1233334",
                "1233334"
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Storage.MaterialCarriersUnloaded.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialCarriersUnloaded.CarrierIdentifiers">
            <summary>
            List of carriers to be unloaded.  
            NOTE - This message DOES NOT mean that the MaterialPackage is unloaded from the MaterialCarrier.
                   Only that the MaterialCarrier is unloaded from its parent (slot on and Endpoint, or another MaterialCarrier).
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.MaterialsEmpty">
            <summary>
            Sent when one or more material packages stored at a particular location
            become fully exhausted / depleted.
            <code language="none">
            {
              "EmptyMaterials": [
                {
                  "LocationIdentifier": "3245434554",
                  "LocationName": "SLOT22",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT238908348903",
                    "InternalPartNumber": "IPN-1222-55555",
                    "Quantity": 0.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": null,
                    "BaseName": null,
                    "LaneNumber": 1,
                    "TapeWidth": 8.0,
                    "TapePitch": 8.0,
                    "UniqueIdentifier": "234232432424",
                    "Name": "FEEDER2245465"
                  }
                },
                {
                  "LocationIdentifier": "3245435784",
                  "LocationName": "SLOT28",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT238908323434",
                    "InternalPartNumber": "IPN-1222-11111",
                    "Quantity": 0.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": null,
                    "BaseName": null,
                    "LaneNumber": 1,
                    "TapeWidth": 8.0,
                    "TapePitch": 4.0,
                    "UniqueIdentifier": "234232432424",
                    "Name": "FEEDER2245465"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Storage.MaterialsEmpty.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialsEmpty.EmptyMaterials">
            <summary>
            A list of the material locations where the depleted material packages are stored or loaded
            at the endpoint.  Also includes the material package that is loaded at the location (if known).
            For example, if the endpoint is an SMT placement machine, the location identifies 
            the feeder slot/position where the depleted material package is loaded.
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.MaterialsLoaded">
            <summary>
            Sent when a material package (potentially contained within a material carrier)
            is loaded at an endpoint.
            <code language="none">
            {
              "Materials": [
                {
                  "LocationIdentifier": "5555646453",
                  "LocationName": "SLOT45",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "CarrierInformation": {
                    "UniqueIdentifier": "1233333",
                    "Name": null
                  }
                },
                {
                  "LocationIdentifier": "5555646454",
                  "LocationName": "SLOT44",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566554543",
                    "InternalPartNumber": "IPN48899",
                    "Quantity": 748.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": "123334",
                    "BaseName": null,
                    "LaneNumber": 1,
                    "TapeWidth": 8.0,
                    "TapePitch": 8.0,
                    "UniqueIdentifier": "1233334",
                    "Name": "TAPEFEEDER8mm1233334"
                  }
                },
                {
                  "LocationIdentifier": "5555646455",
                  "LocationName": "SLOT45",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566553421",
                    "InternalPartNumber": "IPN45577",
                    "Quantity": 151.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": "123335",
                    "BaseName": "MULTILANEFEEDER123335",
                    "LaneNumber": 1,
                    "TapeWidth": 8.0,
                    "TapePitch": 4.0,
                    "UniqueIdentifier": "1233335A",
                    "Name": "TAPEFEEDER8mm1233335A"
                  }
                },
                {
                  "LocationIdentifier": "5555646455",
                  "LocationName": "SLOT45",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566555547",
                    "InternalPartNumber": "IPN45577",
                    "Quantity": 151.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": "123335",
                    "BaseName": "MULTILANEFEEDER123335",
                    "LaneNumber": 2,
                    "TapeWidth": 8.0,
                    "TapePitch": 4.0,
                    "UniqueIdentifier": "1233335B",
                    "Name": "TAPEFEEDER8mm1233335B"
                  }
                },
                {
                  "LocationIdentifier": "5555646456",
                  "LocationName": "SLOT46",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566588751",
                    "InternalPartNumber": "IPN45577",
                    "Quantity": 151.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTubeFeeder, CFX",
                    "BaseUniqueIdentifier": "123336",
                    "BaseName": null,
                    "LaneNumber": 0,
                    "Width": 12.0,
                    "Pitch": 24.0,
                    "UniqueIdentifier": "1233336",
                    "Name": "TUBE1233336"
                  }
                },
                {
                  "LocationIdentifier": "5555646457",
                  "LocationName": "92.1",
                  "MaterialPackage": {
                    "UniqueIdentifier": "MAT4566589856",
                    "InternalPartNumber": "IPN45577",
                    "Quantity": 151.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTrayFeeder, CFX",
                    "CellDimensionX": 17.0,
                    "CellDimensionY": 17.0,
                    "CellCountX": 8,
                    "CellCountY": 3,
                    "CellPitchX": 0.0,
                    "CellPitchY": 0.0,
                    "UniqueIdentifier": "1233337",
                    "Name": "MATRIXTRAY1233337"
                  }
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Storage.MaterialsLoaded.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialsLoaded.Materials">
            <summary>
            There are three usage cases are available for this message:
                1) Load MaterialPackage directly to Endpoint 
                   (LocationIdentifier = Endpoint Slot Identifier, CarrierInformation = null)
                2) Load MaterialPackage to MaterialCarrier
                   (LocationIdentifier = null, CarrierInformation = Identifier of carrier to be loaded)
                3) Load MaterialPackage to MaterialCarrier AND Load MaterialCarrier to Endpoint
                   (LocationIdentifier = Endpoint Slot Identifier, CarrierInformation = Identifier of carrier to be loaded)
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.MaterialsUnloaded">
            <summary>
            Sent when a material package (potentially contained within a material carrier)
            is unloaded at an endpoint.
            <code language="none">
            {
              "MaterialPackageIdentifiers": [
                "MAT4566556456",
                "MAT4566554543",
                "MAT4566553421",
                "MAT4566555547"
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Storage.MaterialsUnloaded.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialsUnloaded.MaterialPackageIdentifiers">
            <summary>
            List of material package identifiers to be unloaded.  
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.NamespaceDoc">
            <summary>
            Related to events that occur when materials are stored, including consumption.  
            This includes not only stock areas, but also point-of-use workstations where materials
            are loaded during production.
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.SplicePointDetected">
            <summary>
            Sent when an endpoint detects a splice point.  A splice point is a juncture between two different material packages 
            of the same part that have been pre-joined prior to loading at the material location, or were joined-in-place
            during production.  Though the two materials are of the same part number, they may be of differing lots.
            <code language="none">
            {
              "DepletedMaterial": {
                "LocationIdentifier": "3245434554",
                "LocationName": "SLOT22",
                "MaterialPackage": {
                  "UniqueIdentifier": "MAT238908348903",
                  "InternalPartNumber": "IPN-1222-55555",
                  "Quantity": 0.0
                },
                "CarrierInformation": {
                  "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                  "BaseUniqueIdentifier": null,
                  "BaseName": null,
                  "LaneNumber": 1,
                  "TapeWidth": 8.0,
                  "TapePitch": 8.0,
                  "UniqueIdentifier": "234232432424",
                  "Name": "FEEDER2245465"
                }
              },
              "NewlyActiveMaterial": {
                "LocationIdentifier": "3245435784",
                "LocationName": "SLOT28",
                "MaterialPackage": {
                  "UniqueIdentifier": "MAT238908348904",
                  "InternalPartNumber": "IPN-1222-55555",
                  "Quantity": 1000.0
                },
                "CarrierInformation": {
                  "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                  "BaseUniqueIdentifier": null,
                  "BaseName": null,
                  "LaneNumber": 1,
                  "TapeWidth": 8.0,
                  "TapePitch": 8.0,
                  "UniqueIdentifier": "234232432424",
                  "Name": "FEEDER2245465"
                }
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Storage.SplicePointDetected.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.SplicePointDetected.DepletedMaterial">
            <summary>
            Describes the location on the machine where a splice point was detected, along with 
            information about the material package that has been depleted.
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.SplicePointDetected.NewlyActiveMaterial">
            <summary>
            Describes the location on the machine where a splice point was detected, along with 
            information about the new material package that is now being actively consumed at 
            that location.
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.ValidateStationSetupRequest">
            <summary>
            Request to a process endpoint to validate that the currently loaded materials
            comply with the setup requirements supplied in this request.
            <code language="none">
            {
              "SetupRequirements": {
                "Lane": null,
                "Stage": null,
                "SetupName": "COMMONSETUP1",
                "MaterialSetupRequirements": [
                  {
                    "Position": "B1.F.45",
                    "PartNumber": "IPN1123",
                    "ApprovedAlternateParts": [
                      "IPN2343",
                      "IPN3432"
                    ],
                    "ApprovedManufacturerParts": [
                      "MOT4329",
                      "SAM5566"
                    ]
                  },
                  {
                    "Position": "B1.F.47",
                    "PartNumber": "IPN1124",
                    "ApprovedAlternateParts": [
                      "IPN3344",
                      "IPN3376"
                    ],
                    "ApprovedManufacturerParts": [
                      "JP55443",
                      "TX554323"
                    ]
                  }
                ],
                "ToolSetupRequirements": [
                  {
                    "Position": "MODULE1.BEAM1",
                    "PartNumber": "HEADTYPE5566",
                    "ToolIdentifier": null
                  },
                  {
                    "Position": "MODULE1.BEAM2",
                    "PartNumber": "HEADTYPE5577",
                    "ToolIdentifier": null
                  }
                ]
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.ValidateStationSetupRequest.SetupRequirements">
            <summary>
            The setup requirements to be validated
            </summary>
        </member>
        <member name="T:CFX.Materials.Storage.ValidateStationSetupResponse">
            <summary>
            Response to a request to a process endpoint to validate that the currently loaded materials
            comply with the setup requirements supplied by the request.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "SETUP OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Storage.ValidateStationSetupResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.ValidateStationSetupResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Materials.Transport.CheckpointReached">
            <summary>
            Sent when a group of materials or production units that is being transported
            through the factory environment arrives at a way point along its path source
            to destination.
            <code language="none">
            {
              "TransportOrderId": "TR329483249830000",
              "Comments": "Arrived SMT Production Area",
              "Status": "InTransit",
              "TrackedBy": {
                "OperatorIdentifier": "BADGE4486",
                "ActorType": "Human",
                "LastName": "Doe",
                "FirstName": "John",
                "LoginName": "john.doe@domain1.com"
              },
              "RelatedWorkOrderId": "WO2384702937403280032",
              "Checkpoint": "SMT STAGING AREA 1",
              "FinalDestination": "LINE 1",
              "NextCheckpoint": "LINE 1"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.CheckpointReached.TransportOrderId">
            <summary>
            The number of the related transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.CheckpointReached.Comments">
            <summary>
            Human readable comments related to this arrival (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.CheckpointReached.Status">
            <summary>
            The status of this transport order at the time of the event
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.CheckpointReached.TrackedBy">
            <summary>
            The operator who recorded the arrival (optional, where applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.CheckpointReached.RelatedWorkOrderId">
            <summary>
            The related production work order number (optional, where applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.CheckpointReached.Checkpoint">
            <summary>
            The name of the check point that was reached
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.CheckpointReached.FinalDestination">
            <summary>
            The name of the final destination of this transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.CheckpointReached.NextCheckpoint">
            <summary>
            The name of the next anticipated check point along the transport
            order's path from source to final destination
            </summary>
        </member>
        <member name="T:CFX.Materials.Transport.GetTransportOrderStatusRequest">
            <summary>
            A request to an endpoint (such as an upper level system, MES, ERP, etc.) to check
            the status of a particular transport order.  A transport order is a directive to move
            materials / WIP / production units from one location to another.
            <code language="none">
            {
              "TransportOrderId": "TR329483249830000"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.GetTransportOrderStatusRequest.TransportOrderId">
            <summary>
            The order number of the related transport order
            </summary>
        </member>
        <member name="T:CFX.Materials.Transport.GetTransportOrderStatusResponse">
            <summary>
            A response to a request to an endpoint (such as an upper level system, MES, ERP, etc.) to check
            the status of a particular transport order.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "TransportOrderId": "TR329483249830000",
              "FinalDestination": "LINE 1",
              "Status": "Delivered",
              "History": [
                {
                  "EventDateTime": "2017-11-01T11:55:00",
                  "Status": "Kitting",
                  "Operator": {
                    "OperatorIdentifier": "BADGE4485",
                    "ActorType": "Human",
                    "LastName": "Smith",
                    "FirstName": "Bill",
                    "LoginName": "bill.smith@domain1.com"
                  },
                  "Location": "STOCK ROOM 1",
                  "Comments": null
                },
                {
                  "EventDateTime": "2017-11-01T14:25:00",
                  "Status": "Kitted",
                  "Operator": {
                    "OperatorIdentifier": "BADGE4485",
                    "ActorType": "Human",
                    "LastName": "Smith",
                    "FirstName": "Bill",
                    "LoginName": "bill.smith@domain1.com"
                  },
                  "Location": "STOCK ROOM 1",
                  "Comments": null
                },
                {
                  "EventDateTime": "2017-11-01T15:45:00",
                  "Status": "InTransit",
                  "Operator": {
                    "OperatorIdentifier": "BADGE4485",
                    "ActorType": "Human",
                    "LastName": "Smith",
                    "FirstName": "Bill",
                    "LoginName": "bill.smith@domain1.com"
                  },
                  "Location": "STOCK ROOM 1",
                  "Comments": null
                },
                {
                  "EventDateTime": "2017-11-01T16:55:00",
                  "Status": "InTransit",
                  "Operator": {
                    "OperatorIdentifier": "BADGE4486",
                    "ActorType": "Human",
                    "LastName": "Doe",
                    "FirstName": "John",
                    "LoginName": "john.doe@domain1.com"
                  },
                  "Location": "SMT STAGING AREA 1",
                  "Comments": null
                },
                {
                  "EventDateTime": "2017-11-01T17:22:00",
                  "Status": "Delivered",
                  "Operator": {
                    "OperatorIdentifier": "BADGE4487",
                    "ActorType": "Human",
                    "LastName": "Dolittle",
                    "FirstName": "Mike",
                    "LoginName": "mike.dolittle@domain1.com"
                  },
                  "Location": "LINE1",
                  "Comments": null
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Transport.GetTransportOrderStatusResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.GetTransportOrderStatusResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.GetTransportOrderStatusResponse.TransportOrderId">
            <summary>
            The order number of the related transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.GetTransportOrderStatusResponse.FinalDestination">
            <summary>
            The final destination of this transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.GetTransportOrderStatusResponse.Status">
            <summary>
            The current status of this transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.GetTransportOrderStatusResponse.History">
            <summary>
            The history of this transport order
            </summary>
        </member>
        <member name="T:CFX.Materials.Transport.NamespaceDoc">
            <summary>
            Messages used for the transportation of raw materials from one location in the factory to another location
            </summary>
        </member>
        <member name="T:CFX.Materials.Transport.TransportOrderCompleted">
            <summary>
            Sent when a transport order has arrived at its final destination.
            <code language="none">
            {
              "TransportOrderId": "TR329483249830000",
              "Comments": "Received at Line 1",
              "AcceptedBy": {
                "OperatorIdentifier": "BADGE4487",
                "ActorType": "Human",
                "LastName": "Dolittle",
                "FirstName": "Mike",
                "LoginName": "mike.dolittle@domain1.com"
              },
              "RelatedWorkOrderId": "WO2384702937403280032",
              "FinalDestination": "LINE 1"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderCompleted.TransportOrderId">
            <summary>
            The order number of the related transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderCompleted.Comments">
            <summary>
            Human readable comments related to this arrival event (when applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderCompleted.AcceptedBy">
            <summary>
            The operator who accepted the delivery, and recorded the arrival (optional)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderCompleted.RelatedWorkOrderId">
            <summary>
            The related production work order number (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderCompleted.FinalDestination">
            <summary>
            The final destination where the transport order was delivered)
            </summary>
        </member>
        <member name="T:CFX.Materials.Transport.TransportOrderStarted">
            <summary>
            Sent when a new transport order is initiated.  A transport order is a directive to move
            materials / WIP / production units from one location to another.
            <code language="none">
            {
              "TransportOrderId": "TR329483249830000",
              "StartedBy": {
                "OperatorIdentifier": "BADGE4485",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Bill",
                "LoginName": "bill.smith@domain1.com"
              },
              "Comments": "Initiating new transport order.  Waiting to be kitted.",
              "Status": "Pending",
              "RelatedWorkOrderId": "WO2384702937403280032",
              "Source": null,
              "FinalDestination": "LINE1",
              "NextCheckpoint": "SMT STAGING AREA 1",
              "Materials": []
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Transport.TransportOrderStarted.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.TransportOrderId">
            <summary>
            The order number of the new transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.StartedBy">
            <summary>
            The operator who initiated the new transport order (optional, where applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.Comments">
            <summary>
            Human readable comments related to this event
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.Status">
            <summary>
            The status of this transport order at the time of the event
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.RelatedWorkOrderId">
            <summary>
            The related production work order number (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.Source">
            <summary>
            The point of origination for this this transport order.  Often
            will be a stock area, room, etc., but may be any location within
            the factory environment
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.FinalDestination">
            <summary>
            The final destination for this transport order 
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.NextCheckpoint">
            <summary>
            The next anticipated check point (way point) for this transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStarted.Materials">
            <summary>
            A list of the specific materials, WIP, and / or production units that are to be 
            transported for this transport order.
            </summary>
        </member>
        <member name="T:CFX.Materials.Transport.TransportOrderStatusChanged">
            <summary>
            Sent when the status of an existing transport order has changed.
            <code language="none">
            {
              "TransportOrderId": "TR329483249830000",
              "Comments": "Kitting Underway...",
              "Status": "Kitting",
              "UpdatedBy": {
                "OperatorIdentifier": "BADGE4485",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Bill",
                "LoginName": "bill.smith@domain1.com"
              },
              "RelatedWorkOrderId": "WO2384702937403280032",
              "Source": null,
              "FinalDestination": "LINE 1",
              "NextCheckpoint": "SMT STAGING AREA 1"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Materials.Transport.TransportOrderStatusChanged.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStatusChanged.TransportOrderId">
            <summary>
            The order number of the new transport order
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStatusChanged.Comments">
            <summary>
            Human readable comments related to this event
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStatusChanged.Status">
            <summary>
            The status of this transport order at the time of the event
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStatusChanged.UpdatedBy">
            <summary>
            The operator who updated the status (optional, where applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStatusChanged.RelatedWorkOrderId">
            <summary>
            The related production work order number (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStatusChanged.Source">
            <summary>
            The point of origination for this this transport order.  Often
            will be a stock area, room, etc., but may be any location within
            the factory environment
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStatusChanged.FinalDestination">
            <summary>
            The final destination for this transport order 
            </summary>
        </member>
        <member name="P:CFX.Materials.Transport.TransportOrderStatusChanged.NextCheckpoint">
            <summary>
            The next anticipated check point (way point) for this transport order
            </summary>
        </member>
        <member name="T:CFX.NamespaceDoc">
            <summary>
            Root CFX Topic.  All CFX endpoints must implement this topic.
            </summary>
        </member>
        <member name="T:CFX.NotSupportedResponse">
            <summary>
            Allows a CFX endpoint to indicate to the sender of a request that it is not able to answer to this particular request
            There can be several reasons :
            - Unknown request/response message : appeared in a more recent version of CFX than the one used by the endpoint
            - Unknown request/response message : totally unknown request (should never append)
            - This request/response message is not implemented in the endpoint because it is not applicable or not implemented yet
            <code language="none">
            {
              "RequestResult": {
                "Result": "Failed",
                "ResultCode": 0,
                "Message": "Unknown message"
              }
            }
            </code>
            /// <code language="none">
            {
              "RequestResult": {
                "Result": "Failed",
                "ResultCode": 0,
                "Message": "Not implemented message"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.NotSupportedResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.NotSupportedResponse.RequestResult">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Production.ActivateRecipeRequest">
            <summary>
            Used to activate a named recipe at the process endpoint. 
            The response indicates whether this was successful or not.
            <code language="none">
            {
              "RecipeName": "RECIPE1234",
              "Revision": "C",
              "Lane": 1,
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.ActivateRecipeRequest.RecipeName">
            <summary>
            The name of the recipe. (may include full path, if applicable)
            </summary>
        </member>
        <member name="P:CFX.Production.ActivateRecipeRequest.Revision">
            <summary>
            The version indicator for the recipe (optional)
            </summary>
        </member>
        <member name="P:CFX.Production.ActivateRecipeRequest.Lane">
            <summary>
            The optional number of the production lane where 
            the recipe should be activated
            </summary>
        </member>
        <member name="P:CFX.Production.ActivateRecipeRequest.Stage">
            <summary>
            The optional name or number of the stage where
            the recipe should be activated
            </summary>
        </member>
        <member name="T:CFX.Production.ActivateRecipeResponse">
            <summary>
            Response to a request to activate a named recipe at the process endpoint. 
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.ActivateRecipeResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.ActivateRecipeResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Production.ActivitiesExecuted">
            <summary>
            Indicates that one or more activities have been performed in the course of processing one or more production units.
            The activities may or may not be value added.  Activities are dynamic structures, and may vary depending upon the 
            nature and purpose of the endpoint.
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              },
              "Activities": [
                {
                  "$type": "CFX.Structures.UnitLoadActivity, CFX",
                  "LoadTime": "00:00:05.3000000",
                  "TimeStamp": "2018-10-25T08:45:51.5300797-04:00",
                  "ActivityInstanceId": "dec7ca54-efc7-4519-a250-0bc7dbeae1d6",
                  "ActivityState": "Completed",
                  "ActivityName": "UNIT LOAD",
                  "Comments": null,
                  "ValueAddType": "NonValueAdd"
                },
                {
                  "$type": "CFX.Structures.UnitAlignmentActivity, CFX",
                  "DX": 0.0,
                  "DY": 0.0,
                  "DZ": 0.0,
                  "DXY": 0.0,
                  "DZX": 0.0,
                  "DZY": 0.0,
                  "TimeStamp": "2018-10-25T08:45:51.5300797-04:00",
                  "ActivityInstanceId": "a6a3307b-d2e4-4c50-a8cc-9949b7866a2b",
                  "ActivityState": "Started",
                  "ActivityName": "UNIT ALIGNMENT",
                  "Comments": null,
                  "ValueAddType": "NonValueAdd"
                },
                {
                  "$type": "CFX.Structures.UnitAlignmentActivity, CFX",
                  "DX": 0.125,
                  "DY": 0.104,
                  "DZ": 0.0,
                  "DXY": 0.987,
                  "DZX": 0.0,
                  "DZY": 0.0,
                  "TimeStamp": "2018-10-25T08:45:56.5300797-04:00",
                  "ActivityInstanceId": "a6a3307b-d2e4-4c50-a8cc-9949b7866a2b",
                  "ActivityState": "Completed",
                  "ActivityName": "UNIT ALIGNMENT",
                  "Comments": null,
                  "ValueAddType": "NonValueAdd"
                },
                {
                  "$type": "CFX.Structures.SMTPlacement.SMTNozzleChangeActivity, CFX",
                  "OldNozzles": [],
                  "NewNozzles": [
                    {
                      "HeadId": "HEAD1",
                      "HeadNozzleNumber": 1,
                      "NozzleType": "409A",
                      "UniqueIdentifier": "UID234213421",
                      "Name": "Nozzle45"
                    },
                    {
                      "HeadId": "HEAD1",
                      "HeadNozzleNumber": 2,
                      "NozzleType": "302B",
                      "UniqueIdentifier": "UID234213421",
                      "Name": "Nozzle32"
                    }
                  ],
                  "TimeStamp": "2018-10-25T08:46:16.5300797-04:00",
                  "ActivityInstanceId": "fa97ae52-2374-4530-8ec5-107fc5bb1ff1",
                  "ActivityState": "Completed",
                  "ActivityName": "NOZZLE CHANGE",
                  "Comments": null,
                  "ValueAddType": "NonValueAdd"
                },
                {
                  "$type": "CFX.Structures.UnitUnloadActivity, CFX",
                  "UnloadTime": "00:00:03.2000000",
                  "TimeStamp": "2018-10-25T08:46:46.5300797-04:00",
                  "ActivityInstanceId": "b5d68d84-440f-4667-b5b7-aa481fcff002",
                  "ActivityState": "Completed",
                  "ActivityName": "UNIT UNLOAD",
                  "Comments": null,
                  "ValueAddType": "NonValueAdd"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.ActivitiesExecuted.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.ActivitiesExecuted.TransactionID">
            <summary>
            Related Transaction ID previously established by a WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.ActivitiesExecuted.Stage">
            <summary>
            The related stage name or number
            </summary>
        </member>
        <member name="P:CFX.Production.ActivitiesExecuted.Activities">
            <summary>
            A list of activities that were performed.  The items in this list are dynamic structures, and
            may vary depending on the type of endpoint.
            </summary>
        </member>
        <member name="T:CFX.Production.Application.MaterialsApplied">
            <summary>
            Sent when material is applied to a production unit, such as glue, adhesives, coatings, solder, paste, etc.
            <code language="none">
            {
              "TransactionId": "ce68a27a-af0b-42c2-a4b3-1066196a9f4a",
              "AppliedMaterials": [
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 1,
                  "QuantityInstalled": 3.57,
                  "Material": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "CarrierLocation": null,
                  "InstalledComponents": []
                },
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 2,
                  "QuantityInstalled": 3.45,
                  "Material": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "CarrierLocation": null,
                  "InstalledComponents": []
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Application.MaterialsApplied.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.Production.Application.MaterialsApplied.TransactionId">
            <summary>
            The id of the work transaction with which this message is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.Application.MaterialsApplied.AppliedMaterials">
            <summary>
            A list of the specific materials which were applied.
            </summary>
        </member>
        <member name="T:CFX.Production.Application.MaterialsUnapplied">
            <summary>
            Sent when material is unapplied or removed from a production unit, as in the case
            of paste being wiped clean, for example.
            <code language="none">
            {
              "TransactionId": "f5f4d00c-c346-4a5b-a98c-4be22aec2d49",
              "UnappliedMaterials": [
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 1,
                  "QuantityUninstalled": 3.55,
                  "Material": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "UninstalledComponents": []
                },
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 2,
                  "QuantityUninstalled": 3.55,
                  "Material": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "UninstalledComponents": []
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Application.MaterialsUnapplied.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.Production.Application.MaterialsUnapplied.TransactionId">
            <summary>
            The id of the work transaction with which this message is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.Application.MaterialsUnapplied.UnappliedMaterials">
            <summary>
            A list of materials which have been uninstalled.
            </summary>
        </member>
        <member name="T:CFX.Production.Application.NamespaceDoc">
            <summary>
            CFX Topic implemented by endpoints which are involved in the application of materials to production units, 
            such as fluids, adhesives, metals, etc.
            </summary>
        </member>
        <member name="T:CFX.Production.Application.Solder.NamespaceDoc">
            <summary>
            CFX Topic implemented by endpoints which are involved in the soldering of production units.
            </summary>
        </member>
        <member name="T:CFX.Production.Application.Solder.PCBSelectiveSoldered">
            <summary>
            Message sent upon completion of the selective soldering process
            <para></para>
            <code language="none">
            {
              "TransactionId": "c4d6262d-95cb-43e6-8b5c-dfd45978dd40",
              "HeaderData": {
                "Process_Status": "Completed",
                "RecipeName": "Panasonic 2up",
                "Nitrogen_Pressure": 54.0,
                "Air_Pressure": 62.0,
                "Cycle_Count": 671261,
                "Cycle_Time": "00:01:44.2000000",
                "Nitrogen_Purity": 15.0,
                "Nitrogen_Flow": 39.0,
                "Fiducial_Enabled": true
              },
              "SolderedPCBs": [
                {
                  "UnitIdentifier": "PANEL4325435",
                  "UnitPositionNumber": 1,
                  "ZoneData": [
                    {
                      "StageSequence": 1,
                      "ProcessTime": "00:15:00",
                      "Bottle1_Pressure": 7.0,
                      "Bottle2_Pressure": 7.0,
                      "Flux_Volume": 210.0,
                      "Top_Preheater_Power": 50.0,
                      "Top_Preheater_Soak": 10.0,
                      "Top_Preheater_Temp": 109.0,
                      "Top_Preheater_Time": "00:00:37",
                      "Bot_Preheater_Power": 0.0,
                      "Bot_Preheater_Soak": 0.0,
                      "Bot_Preheater_Temp": 0.0,
                      "Bot_Preheater_Time": "00:00:00",
                      "Bath_Temp": 0.0,
                      "Bath_Wave_Enabled": false,
                      "Bath_Wave_Hgt": 0.0,
                      "Solder_Quantity_Used": 0.0,
                      "Fid_XCorrection": 0.15,
                      "Fid_YCorrection": 0.2
                    },
                    {
                      "StageSequence": 2,
                      "ProcessTime": "00:00:37",
                      "Bottle1_Pressure": 0.0,
                      "Bottle2_Pressure": 0.0,
                      "Flux_Volume": 0.0,
                      "Top_Preheater_Power": 50.0,
                      "Top_Preheater_Soak": 10.0,
                      "Top_Preheater_Temp": 109.0,
                      "Top_Preheater_Time": "00:00:37",
                      "Bot_Preheater_Power": 50.0,
                      "Bot_Preheater_Soak": 10.0,
                      "Bot_Preheater_Temp": 108.0,
                      "Bot_Preheater_Time": "00:00:37",
                      "Bath_Temp": 0.0,
                      "Bath_Wave_Enabled": false,
                      "Bath_Wave_Hgt": 0.0,
                      "Solder_Quantity_Used": 0.0,
                      "Fid_XCorrection": 0.0,
                      "Fid_YCorrection": 0.0
                    },
                    {
                      "StageSequence": 3,
                      "ProcessTime": "00:00:37",
                      "Bottle1_Pressure": 0.0,
                      "Bottle2_Pressure": 0.0,
                      "Flux_Volume": 0.0,
                      "Top_Preheater_Power": 50.0,
                      "Top_Preheater_Soak": 10.0,
                      "Top_Preheater_Temp": 109.0,
                      "Top_Preheater_Time": "00:00:37",
                      "Bot_Preheater_Power": 50.0,
                      "Bot_Preheater_Soak": 10.0,
                      "Bot_Preheater_Temp": 108.0,
                      "Bot_Preheater_Time": "00:00:37",
                      "Bath_Temp": 305.0,
                      "Bath_Wave_Enabled": true,
                      "Bath_Wave_Hgt": 0.1,
                      "Solder_Quantity_Used": 5.0,
                      "Fid_XCorrection": 0.15,
                      "Fid_YCorrection": 0.2
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL4325435",
                  "UnitPositionNumber": 1,
                  "ZoneData": [
                    {
                      "StageSequence": 1,
                      "ProcessTime": "00:15:00",
                      "Bottle1_Pressure": 7.0,
                      "Bottle2_Pressure": 7.0,
                      "Flux_Volume": 210.0,
                      "Top_Preheater_Power": 50.0,
                      "Top_Preheater_Soak": 10.0,
                      "Top_Preheater_Temp": 109.0,
                      "Top_Preheater_Time": "00:00:37",
                      "Bot_Preheater_Power": 0.0,
                      "Bot_Preheater_Soak": 0.0,
                      "Bot_Preheater_Temp": 0.0,
                      "Bot_Preheater_Time": "00:00:00",
                      "Bath_Temp": 0.0,
                      "Bath_Wave_Enabled": false,
                      "Bath_Wave_Hgt": 0.0,
                      "Solder_Quantity_Used": 0.0,
                      "Fid_XCorrection": 0.15,
                      "Fid_YCorrection": 0.2
                    },
                    {
                      "StageSequence": 2,
                      "ProcessTime": "00:00:37",
                      "Bottle1_Pressure": 0.0,
                      "Bottle2_Pressure": 0.0,
                      "Flux_Volume": 0.0,
                      "Top_Preheater_Power": 50.0,
                      "Top_Preheater_Soak": 10.0,
                      "Top_Preheater_Temp": 109.0,
                      "Top_Preheater_Time": "00:00:37",
                      "Bot_Preheater_Power": 50.0,
                      "Bot_Preheater_Soak": 10.0,
                      "Bot_Preheater_Temp": 108.0,
                      "Bot_Preheater_Time": "00:00:37",
                      "Bath_Temp": 0.0,
                      "Bath_Wave_Enabled": false,
                      "Bath_Wave_Hgt": 0.0,
                      "Solder_Quantity_Used": 0.0,
                      "Fid_XCorrection": 0.0,
                      "Fid_YCorrection": 0.0
                    },
                    {
                      "StageSequence": 3,
                      "ProcessTime": "00:00:37",
                      "Bottle1_Pressure": 0.0,
                      "Bottle2_Pressure": 0.0,
                      "Flux_Volume": 0.0,
                      "Top_Preheater_Power": 50.0,
                      "Top_Preheater_Soak": 10.0,
                      "Top_Preheater_Temp": 109.0,
                      "Top_Preheater_Time": "00:00:37",
                      "Bot_Preheater_Power": 50.0,
                      "Bot_Preheater_Soak": 10.0,
                      "Bot_Preheater_Temp": 108.0,
                      "Bot_Preheater_Time": "00:00:37",
                      "Bath_Temp": 305.0,
                      "Bath_Wave_Enabled": true,
                      "Bath_Wave_Hgt": 0.1,
                      "Solder_Quantity_Used": 5.0,
                      "Fid_XCorrection": 0.15,
                      "Fid_YCorrection": 0.2
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Application.Solder.PCBSelectiveSoldered.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Application.Solder.PCBSelectiveSoldered.TransactionId">
            <summary>
            The id of the work transaction with which this inspection session is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.Application.Solder.PCBSelectiveSoldered.HeaderData">
            <summary>
            General data values that apply across the selective process cycle
            </summary>
        </member>
        <member name="P:CFX.Production.Application.Solder.PCBSelectiveSoldered.SolderedPCBs">
            <summary>
            Details of PCB that has been processed.
            </summary>
        </member>
        <member name="T:CFX.Production.Assembly.MaterialsInstalled">
            <summary>
            Sent by a process endpoint when one or more materials (see note) are installed on to a production unit. 
            This message is typically sent at the completion of production on a unit or group of units at the
            endpoint, or, at the end of each stage.
            <code language="none">
            {
              "TransactionId": "ce1cf002-50fe-4cd4-af27-5e46fdae5608",
              "InstalledMaterials": [
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 1,
                  "QuantityInstalled": 3.0,
                  "QuantityNonInstalled": 0.0,
                  "Material": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "CarrierLocation": {
                    "LocationIdentifier": "UID384234893",
                    "LocationName": "SLOT45",
                    "CarrierInformation": {
                      "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                      "BaseUniqueIdentifier": "123334",
                      "BaseName": null,
                      "LaneNumber": 1,
                      "TapeWidth": 8.0,
                      "TapePitch": 8.0,
                      "UniqueIdentifier": "1233334",
                      "Name": "TAPEFEEDER8mm1233334"
                    }
                  },
                  "InstalledComponents": [
                    {
                      "ReferenceDesignator": "R1",
                      "InstallationTime": "2018-10-03T16:03:05.1091909-04:00"
                    },
                    {
                      "ReferenceDesignator": "R2",
                      "InstallationTime": "2018-10-03T16:03:05.1091909-04:00"
                    },
                    {
                      "ReferenceDesignator": "R3",
                      "InstallationTime": "2018-10-03T16:03:05.1091909-04:00"
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 2,
                  "QuantityInstalled": 3.0,
                  "QuantityNonInstalled": 1.0,
                  "Material": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "CarrierLocation": {
                    "LocationIdentifier": "UID384234893",
                    "LocationName": "SLOT45",
                    "CarrierInformation": {
                      "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                      "BaseUniqueIdentifier": "123334",
                      "BaseName": null,
                      "LaneNumber": 1,
                      "TapeWidth": 8.0,
                      "TapePitch": 8.0,
                      "UniqueIdentifier": "1233334",
                      "Name": "TAPEFEEDER8mm1233334"
                    }
                  },
                  "InstalledComponents": [
                    {
                      "ReferenceDesignator": "R1",
                      "InstallationTime": "2018-10-03T16:03:05.1091909-04:00"
                    },
                    {
                      "ReferenceDesignator": "R2",
                      "InstallationTime": "2018-10-03T16:03:05.1091909-04:00"
                    },
                    {
                      "ReferenceDesignator": "R3",
                      "InstallationTime": "2018-10-03T16:03:05.1091909-04:00"
                    }
                  ],
                  "NonInstalledComponents": [
                    {
                      "ReferenceDesignator": "R1",
                      "NonInstallationTime": "2018-10-03T16:03:05.1091909-04:00",
                      "Location" : "RejectionBox",
                      "RejectionBoxId" : "RejectionBox1",
                      "RejectionComment" : "Bad electrical test measure",
                      "RejectionReason": "BadElectricalTest",
                      "RejectionDetails": {
                        "$type": "CFX.Structures.BadElectricalTestRejectionDetails, CFX",
                        "TesterSerialNumber" : "ELECTRICAL-TESTER-0123456789"
                        "Frequency": "1000"
                        "ExpectedValue": "3300",
                        "MeasuredValue": "3100",
                        "ToleranceMin": "100",
                        "ToleranceMax": "100",
                        "ValueUnit": "Ohm",
                        "result": "false",
                      }
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Assembly.MaterialsInstalled.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.MaterialsInstalled.TransactionId">
            <summary>
            The id of the work transaction with which this installation is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.MaterialsInstalled.InstalledMaterials">
            <summary>
            A list of the specific materials which were installed.
            </summary>
        </member>
        <member name="T:CFX.Production.Assembly.MaterialsUninstalled">
            <summary>
            Sent by a process endpoint when one or more materials (see note) are removed from a production unit.
            This message is typically sent at the completion of a production unit or group of units at the
            endpoint, or, at the end of each stage.
            <code language="none">
            {
              "TransactionId": "8d152f92-425d-4b5e-8c8a-da6a00f93c1b",
              "UninstalledMaterials": [
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 1,
                  "QuantityUninstalled": 3.0,
                  "Reason": "DefectiveMaterial",
                  "Material": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "UninstalledComponents": [
                    {
                      "ReferenceDesignator": "R1",
                      "InstallationTime": "2018-10-10T08:34:40.1054186-04:00"
                    },
                    {
                      "ReferenceDesignator": "R2",
                      "InstallationTime": "2018-10-10T08:34:40.1054186-04:00"
                    },
                    {
                      "ReferenceDesignator": "R3",
                      "InstallationTime": "2018-10-10T08:34:40.1054186-04:00"
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 2,
                  "QuantityUninstalled": 3.0,
                  "Reason": "DefectiveMaterial",
                  "Material": {
                    "UniqueIdentifier": "MAT4566556456",
                    "InternalPartNumber": "IPN47788",
                    "Quantity": 887.0
                  },
                  "UninstalledComponents": [
                    {
                      "ReferenceDesignator": "R1",
                      "InstallationTime": "2018-10-10T08:34:40.1054186-04:00"
                    },
                    {
                      "ReferenceDesignator": "R2",
                      "InstallationTime": "2018-10-10T08:34:40.1054186-04:00"
                    },
                    {
                      "ReferenceDesignator": "R3",
                      "InstallationTime": "2018-10-10T08:34:40.1054186-04:00"
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Assembly.MaterialsUninstalled.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.MaterialsUninstalled.TransactionId">
            <summary>
            The id of the work transaction with which this uninstallation is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.MaterialsUninstalled.UninstalledMaterials">
            <summary>
            A list of materials which have been uninstalled.
            </summary>
        </member>
        <member name="T:CFX.Production.Assembly.NamespaceDoc">
            <summary>
            Messages are used by a production resource performing any form of assembly of production units. This includes both automated, semi-manual and manual assembly operations.
            </summary>
        </member>
        <member name="T:CFX.Production.Assembly.PressInsertion.ConditionCompleted">
            <summary>
            Sent by a press insertion machine when a condition has been completed
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "ResultOfCondition":
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.PressInsertion.ConditionCompleted.TransactionID">
            <summary>
            Related Transaction ID specified previously by WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.PressInsertion.ConditionCompleted.ResultOfCondition">
            <summary>
            An enumeration indicating the result of the condition
            </summary>
        </member>
        <member name="T:CFX.Production.Assembly.PressInsertion.GetConditionPermissionRequest">
            <summary>
            This message is used to request a process endpoint for permission to proceed
            with the recipe based on the results of a condition sequence action
            <code language="none">
            {
              "TransactionId": "7e712504-4d65-499f-9dcb-1974e20bae59",
              "ConditionStep": {}
              "Data": {}
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Assembly.PressInsertion.GetConditionPermissionRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.PressInsertion.GetConditionPermissionRequest.TransactionID">
            <summary>
            Related Transaction ID specified previously by WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.PressInsertion.GetConditionPermissionRequest.ConditionStep">
            <summary>	
            Describes a individual step of a Condition sequence that must be validated
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.PressInsertion.GetConditionPermissionRequest.Data">
            <summary>
            The data to validate
            </summary>
        </member>
        <member name="T:CFX.Production.Assembly.PressInsertion.GetConditionPermissionResponse">
            <summary>
            This message is used to grant or reject permission for a process endpoint to proceed
            with the recipe based on the results of a condition sequence action.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "TransactionId": "7e712504-4d65-499f-9dcb-1974e20bae59",
              "ConditionStep": {}
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Assembly.PressInsertion.GetConditionPermissionResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.PressInsertion.GetConditionPermissionResponse.TransactionID">
            <summary>
            Related Transaction ID specified previously by WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.PressInsertion.GetConditionPermissionResponse.ConditionStep">
            <summary>	
            Describes a individual step of a Condition sequence that must be validated
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.PressInsertion.GetConditionPermissionResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Production.Assembly.UnitsPersonalized">
            <summary>
            Sent by a process endpoint when a configuration or assignment is made (example MAC Address) 
            <code language="none">
            {
              "TransactionId": "e5cf340c-6858-4e26-893d-deae86bc09f1",
              "PersonalizedUnits": [
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 1,
                  "Characteristics": [
                    {
                      "Name": "MAC Address",
                      "Value": "C0-15-B9-2D-0F-3B"
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 2,
                  "Characteristics": [
                    {
                      "Name": "MAC Address",
                      "Value": "C0-15-B9-2D-0F-3C"
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Assembly.UnitsPersonalized.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.UnitsPersonalized.TransactionId">
            <summary>
            The id of the work transaction with which this installation is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.Assembly.UnitsPersonalized.PersonalizedUnits">
            <summary>
            A list of production units that have been personalized, including
            the personalization characteristics of each.
            </summary>
        </member>
        <member name="T:CFX.Production.BlockMaterialLocationsRequest">
            <summary>
            Sent to a process endpoint to block or disable a particular material setup location. 
            This is typically used where a loaded material may become unsuitable for use, 
            for example MSD expiry of an SMT material.
            <code language="none">
            {
              "Reason": "ExpiredMaterial",
              "Comments": "MSD Material Has Expired",
              "Locations": [
                {
                  "LocationIdentifier": "23143433",
                  "LocationName": "SLOT45",
                  "MaterialPackage": null,
                  "CarrierInformation": null
                },
                {
                  "LocationIdentifier": "23143454",
                  "LocationName": "SLOT46",
                  "MaterialPackage": null,
                  "CarrierInformation": null
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.BlockMaterialLocationsRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.BlockMaterialLocationsRequest.Reason">
            <summary>
            An enumeration indicating the reason for the block.
            </summary>
        </member>
        <member name="P:CFX.Production.BlockMaterialLocationsRequest.Comments">
            <summary>
            Free form comments indicating additional information about this block event.
            </summary>
        </member>
        <member name="P:CFX.Production.BlockMaterialLocationsRequest.Locations">
            <summary>
            A list of locations to be blocked
            </summary>
        </member>
        <member name="T:CFX.Production.BlockMaterialLocationsResponse">
            <summary>
            Sent to a process endpoint to block or disable a particular material setup location. 
            This is typically used where a loaded material may become unsuitable for use, 
            for example MSD expiry of an SMT material.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.BlockMaterialLocationsResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.BlockMaterialLocationsResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Production.GetActiveRecipeRequest">
            <summary>
            Used to request the name of the recipe that is activated at a process
            endpoint. The response indicates the name of the recipe.
            <code language="none">
            {
              "Lane": 1,
              "Stage": null
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.GetActiveRecipeRequest.Lane">
            <summary>
            The optional number of the production lane
            </summary>
        </member>
        <member name="P:CFX.Production.GetActiveRecipeRequest.Stage">
            <summary>
            The optional structure identifying the specific Stage
            </summary>
        </member>
        <member name="T:CFX.Production.GetActiveRecipeResponse">
            <summary>
            Used to request the name of the recipe that is activated at a process
            endpoint. The response indicates the name of the recipe.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "ActiveRecipeName": "RECIPE5566",
              "ActiveRecipeRevision": "C"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.GetActiveRecipeResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.GetActiveRecipeResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Production.GetActiveRecipeResponse.ActiveRecipeName">
            <summary>
            The name of the active recipe (may include full path, if applicable)
            </summary>
        </member>
        <member name="P:CFX.Production.GetActiveRecipeResponse.ActiveRecipeRevision">
            <summary>
            Version number, e.g. “2.0” (Optional)
            </summary>
        </member>
        <member name="T:CFX.Production.GetAvailableRecipesRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            This message is used to request a process endpoint for the available recipes.
            The response includes the list of the recipes, with a maximun specified by the MaxCount parameter
            <code language="none">
            {
              "Path": "myRecipes/CFX/A-Team*",
              "MaxCount": 5
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.GetAvailableRecipesRequest.Path">
            <summary>
            Pathname with wildcard, e.g. “myRecipes/CFX/A-Team*”.
            </summary>
        </member>
        <member name="P:CFX.Production.GetAvailableRecipesRequest.MaxCount">
            <summary>
            Max. number of recipes that may be returned with the response.
            </summary>
        </member>
        <member name="T:CFX.Production.GetAvailableRecipesResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Response to a request of getting the available recipes. 
            The response includes a list of recipes (name, revision), but not their data.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "ActualCount": 3,
              "RecipeCount": 2,
              "Recipes": [
                {
                  "RecipeName": "Recipe1",
                  "Revision": "1.2"
                },
                {
                  "RecipeName": "Recipe2",
                  "Revision": "2.7"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.GetAvailableRecipesResponse.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.GetAvailableRecipesResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Production.GetAvailableRecipesResponse.ActualCount">
            <summary>
            The actual number of recipes that match the request.
            </summary>
        </member>
        <member name="P:CFX.Production.GetAvailableRecipesResponse.RecipeCount">
            <summary>
            The number of recipes in the response list
            </summary>
        </member>
        <member name="P:CFX.Production.GetAvailableRecipesResponse.Recipes">
            <summary>
            An optional list of the identified RecipeLean (RecipeName and Revision) structures 
            </summary>
        </member>
        <member name="T:CFX.Production.GetRecipeRequest">
            <summary>
            This message is used to request a process endpoint for the details of a named
            recipe. The response includes details of the recipe, depending on the 
            classification of the process.
            <code language="none">
            {
              "RecipeName": "RECIPE3234",
              "Revision": null
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.GetRecipeRequest.RecipeName">
            <summary>
            The name of the recipe to be retrieved (may include full path, if applicable)
            </summary>
        </member>
        <member name="P:CFX.Production.GetRecipeRequest.Revision">
            <summary>
            Version number, e.g. “2.0” (Optional)
            </summary>
        </member>
        <member name="T:CFX.Production.GetRecipeResponse">
            <summary>
            This message is used to request a process endpoint for the details of a named
            recipe. The response includes details of the recipe, depending on the 
            classification of the process.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "Recipe": {
                "Name": "RECIPE4455",
                "Revision": null,
                "MimeType": "application/octet-stream",
                "RecipeData": "ESKImSNVZlM="
              }
            }
            </code>
            <para>UnitsInspectionRecipe provides the means to convey static recipe information of
            inspection programs. It is expected to contain an InspectionMeasurementExpected object
            for each solder deposit to inspect.
            </para>
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "Recipe": {
                "$type": "CFX.Structures.SolderPasteInspection.SolderPasteInspectionRecipe, CFX",
                "Name": "SolderRecipeXYZ_TextBoard1",
                "Revision": "1.3.3.33",
                "ExpectedCycleTime": 0.0,
                "ExpectedUnitsPerWorkTransaction": 0.0,
                "UnitLength": null,
                "UnitWidth": null,
                "UnitHeight": null,
                "MimeType": null,
                "RecipeData": null,
                "UnitsToInspect": [
                  {
                    "UnitPositionNumber": 1,
                    "Name": null,
                    "ChildObjects": [
                      {
                        "Group": "Resistor",
                        "Type": "Pad",
                        "RefNo": 1,
                        "CRD": "R100.1",
                        "PartNumber": "A2C000628080001",
                        "PackageType": "0201",
                        "Steps": [
                          {
                            "Name": "PasteDeposit",
                            "Sequence": 1,
                            "TargetValue": {
                              "EX": 0.8,
                              "EY": 1.5,
                              "EZ": 0.1,
                              "PX": 1000.0,
                              "PY": 1200.0,
                              "EA": 1.2,
                              "EVol": 0.0001,
                              "AR": 1.8,
                              "RXY": 0.0,
                              "Vertices": null,
                              "UniqueIdentifier": "249a0c81-875f-474f-85b3-5c628108efec",
                              "MeasurementName": null,
                              "TimeRecorded": null,
                              "Sequence": 0,
                              "Result": "Passed",
                              "CRDs": null
                            }
                          }
                        ]
                      },
                      {
                        "Group": "Resistor",
                        "Type": "Pad",
                        "RefNo": 2,
                        "CRD": "R100.2",
                        "PartNumber": "A2C000628080001",
                        "PackageType": "0201",
                        "Steps": [
                          {
                            "Name": "PasteDeposit",
                            "Sequence": 1,
                            "TargetValue": {
                              "EX": 0.8,
                              "EY": 1.5,
                              "EZ": 0.0,
                              "PX": 3000.0,
                              "PY": 1200.0,
                              "EA": 1.2,
                              "EVol": 0.0001,
                              "AR": 1.8,
                              "RXY": 0.0,
                              "Vertices": null,
                              "UniqueIdentifier": "71aeb946-ace8-4c83-997e-2bc9cabc5e91",
                              "MeasurementName": null,
                              "TimeRecorded": null,
                              "Sequence": 0,
                              "Result": "Passed",
                              "CRDs": null
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "RecipeGenerationDate": "2020-11-30T13:35:00.4214651+01:00",
                "InspectionMethod": "Human"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.GetRecipeResponse.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.GetRecipeResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Production.GetRecipeResponse.Recipe">
            <summary>
            The recipe.  This is a dynamic structure tha supports specialized recipe types 
            for different types of equipment.
            </summary>
        </member>
        <member name="T:CFX.Production.GetRequiredSetupRequest">
            <summary>
            Sent to a process endpoint to request the setup requirements of the active recipe.
            The response lists the required materials and tools, along with the locations where 
            the materials/tools must be loaded.
            <code language="none">
            {
              "Lane": 1,
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupRequest.Lane">
            <summary>
            An optional property designating the specific Lane.
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupRequest.Stage">
            <summary>
            An optional property designating the specific Stage.
            </summary>
        </member>
        <member name="T:CFX.Production.GetRequiredSetupResponse">
            <summary>
            Response from a process endpoint to a request to obtain the setup requirements of the active recipe.
            The response lists the required materials and tools, along with the locations where 
            the materials/tools must be loaded.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "RecipeName": "RECIPE4455",
              "RecipeRevision": "C",
              "Lane": 1,
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              },
              "SetupRequirements": {
                "Lane": 1,
                "Stage": {
                  "StageSequence": 1,
                  "StageName": "STAGE1",
                  "StageType": "Work"
                },
                "SetupName": "COMMONSETUP45",
                "MaterialSetupRequirements": [
                  {
                    "Position": "B1.F.45",
                    "PartNumber": "IPN1123",
                    "ApprovedAlternateParts": [
                      "IPN2343",
                      "IPN3432"
                    ],
                    "ApprovedManufacturerParts": [
                      "MOT4329",
                      "SAM5566"
                    ]
                  },
                  {
                    "Position": "B1.F.47",
                    "PartNumber": "IPN1124",
                    "ApprovedAlternateParts": [
                      "IPN3344",
                      "IPN3376"
                    ],
                    "ApprovedManufacturerParts": [
                      "JP55443",
                      "TX554323"
                    ]
                  }
                ],
                "ToolSetupRequirements": [
                  {
                    "Position": "MODULE1.BEAM1",
                    "PartNumber": "HEADTYPE5566",
                    "ToolIdentifier": null
                  },
                  {
                    "Position": "MODULE1.BEAM2",
                    "PartNumber": "HEADTYPE5577",
                    "ToolIdentifier": null
                  }
                ]
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.GetRequiredSetupResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.Result">
            <summary>
            Result of the request
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.RecipeName">
            <summary>
            The name of the recipe associated with the required setup.
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.RecipeRevision">
            <summary>
            The revision of the recipe that is required (eg. "A", "B", etc.)
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.Lane">
            <summary>
            An optional property designating the specific Lane associated with this setup.
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.Stage">
            <summary>
            An optional property designating the specific Stage associated with this setup.
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.SetupRequirements">
            <summary>
            A structure indicating the setup requirements.
            </summary>
        </member>
        <member name="T:CFX.Production.GetUnitInfoRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            This message is used to request a process endpoint for the details of a list of Unit
            <code language="none">
            {
              "PrimaryIdentifier": SN1234567890,
              "HermesIdentifier": null,
              "UnitIdentifier":null
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.GetUnitInfoRequest.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.GetUnitInfoRequest.HermesIdentifier">
            <summary>
            The Hermes BoardId (GUID) of the carrier, a PCB panel or single production unit – 
            optional, may be used when PrimaryIdentifier is not available.
            </summary>
        </member>
        <member name="P:CFX.Production.GetUnitInfoRequest.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, e.g. Barcode, to be used in case 
            the Primary Identifier is not available and, thus, PrimaryIdentifier is left empty.
            </summary>
        </member>
        <member name="T:CFX.Production.GetUnitInfoResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Response from a process endpoint to a request to obtatin Unit information.
            The reponse lists the units and the related information (e.g., BadMark, Fiducials)
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "PrimaryIdentifier": "SN123456789",
              "HermesIdentifier": null,
              "UnitCount": 2,
              "Units": [
                {
                  "BadMark": 0,
                  "FiducialCount": 2,
                  "Fiducials": [
                    {
                      "FiducialX": 0.12,
                      "FiducialY": 0.16,
                      "FiducialRXY": 0.0
                    },
                    {
                      "FiducialX": 0.12,
                      "FiducialY": 2.56,
                      "FiducialRXY": 0.0
                    }
                  ],
                  "UnitIdentifier": "SN12345",
                  "PositionNumber": 1,
                  "PositionName": "Circuit1",
                  "X": 0.254,
                  "Y": 0.556,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "BadMark": 1,
                  "FiducialCount": null,
                  "Fiducials": null,
                  "UnitIdentifier": "SN091235",
                  "PositionNumber": 0,
                  "PositionName": null,
                  "X": 0.0,
                  "Y": 0.0,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.GetUnitInfoResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Production.GetUnitInfoResponse.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. of the PCB if available.
            </summary>
        </member>
        <member name="P:CFX.Production.GetUnitInfoResponse.HermesIdentifier">
            <summary>
            The Hermes BoardId (GUID) of the PCB if available.
            </summary>
        </member>
        <member name="P:CFX.Production.GetUnitInfoResponse.UnitCount">
            <summary>
            The number of individual production units
            </summary>
        </member>
        <member name="P:CFX.Production.GetUnitInfoResponse.Units">
            <summary>
            An optional list of structures that identify each specific instance of production unit (if known).
            </summary>
        </member>
        <member name="T:CFX.Production.Hermes.GetMagazineDataRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Sent from a Hermes endpoint to request magazine data
            <code language="none">
            {
              "MagazineId": "ID12345"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Hermes.GetMagazineDataRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetMagazineDataRequest.MagazineId">
            <summary>
            Barcode of a magazine, required to identify the magazine.
            </summary>
        </member>
        <member name="T:CFX.Production.Hermes.GetMagazineDataResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Reponse to a request by a Hermes enabled endpoint to acquire information related to a particular magazine.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "MagazineData": {
                "MagazineId": "ID12345",
                "HermesUnits": [
                  {
                    "SlotId": 1,
                    "BoardId": "3ce1c3f6-695d-4eaa-a0eb-cadb9b1eccba",
                    "BoardIdCreatedBy": "Printer12345",
                    "FailedBoard": 1,
                    "ProductTypeId": "Product_A",
                    "FlippedBoard": 1,
                    "TopBarcode": "BT_M20206500001",
                    "BottomBarcode": "B_M20206500001",
                    "Lenght": 160.0,
                    "Width": 100.0,
                    "Thickness": 10.0,
                    "ConveyorSpeed": 1200.0,
                    "TopClearanceHeight": 2.5,
                    "BottomClearanceHeight": 1.2,
                    "Weight": 80.0,
                    "WorkOrderIdentifier": {
                      "WorkOrderId": "WO9988776666",
                      "Batch": "Batch1"
                    }
                  },
                  {
                    "SlotId": 2,
                    "BoardId": "67ec444b-24de-4ed3-b7be-1db4ace6ef5f",
                    "BoardIdCreatedBy": "Printer12345",
                    "FailedBoard": 1,
                    "ProductTypeId": "Product_A",
                    "FlippedBoard": 1,
                    "TopBarcode": "BT_M20206500002",
                    "BottomBarcode": "B_M20206500002",
                    "Lenght": 160.0,
                    "Width": 100.0,
                    "Thickness": 10.0,
                    "ConveyorSpeed": 1200.0,
                    "TopClearanceHeight": 2.5,
                    "BottomClearanceHeight": 1.2,
                    "Weight": 80.0,
                    "WorkOrderIdentifier": {
                      "WorkOrderId": "WO9988776666",
                      "Batch": "Batch1"
                    }
                  }
                ]
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Hermes.GetMagazineDataResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetMagazineDataResponse.Result">
            <summary>
            Result of the request
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetMagazineDataResponse.MagazineData">
            <summary>
            Barcode of a magazine, required to identify the magazine.
            </summary>
        </member>
        <member name="T:CFX.Production.Hermes.GetWorkOrderDataRequest">
            <summary>
            Used by an endpoint to acquire information related to a particular work order (typically at the beginning of a Hermes enabled line).
            This information would typically then be passed down the line through the Hermes protocol / mechanism.
            <code language="none">
            {
              "WorkOrderIdentifier": {
                "WorkOrderId": "WO0001",
                "Batch": "Batch1"
              },
              "UnitIdentifier": null
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Hermes.GetWorkOrderDataRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataRequest.WorkOrderIdentifier">
            <summary>
            The identifier of the work order to look up.
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataRequest.UnitIdentifier">
            <summary>
            (OPTIONAL)  If work order informatoin is not known, an endpoint may also obtain work order data by instead populating
            this property with the identifier of a production unit that is associated with a work order and known to an upper 
            level control system.  The upper level control system will then look up the associated work order, and return the 
            appropriate work order information.
            </summary>
        </member>
        <member name="T:CFX.Production.Hermes.GetWorkOrderDataResponse">
            <summary>
            Reponse to a request by a Hermes enabled endpoint to acquire information related to a particular work order.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "Response success"
              },
              "WorkOrderIdentifier": {
                "WorkOrderId": "WO0001",
                "Batch": "Batch1"
              },
              "ProductTypeId": "Control Card X4",
              "Length": 160.0,
              "Width": 100.0,
              "Thickness": 3.0,
              "TopClearanceHeight": 12.0,
              "BottomClearanceHeight": 5.0,
              "Weight": 200.0,
              "Surface": "PrimarySurface",
              "Route": 1
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Hermes.GetWorkOrderDataResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.Result">
            <summary>
            Result of the request
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.WorkOrderIdentifier">
            <summary>
            The identifier of the work order whose data was retrieved.
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.ProductTypeId">
            <summary>
            The Hermes ProductTypeId of the assembly that is associated with this work order.
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.Length">
            <summary>
            The length of the PCB in millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.Width">
            <summary>
            The width of the PCB in millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.Thickness">
            <summary>
            The thickness of the PCB in millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.TopClearanceHeight">
            <summary>
            The clearance height for the top side of the PCB millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.BottomClearanceHeight">
            <summary>
            The clearance height for the bottom side of the PCB millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.Weight">
            <summary>
            The weight of the PCB in grams (g)
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.Surface">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Identifies the surface of the product that is relevant to this Work Order (if any)
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.GetWorkOrderDataResponse.Route">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            A number that indicates a routing instruction that will be passed on by Hermes to downstream machines.
            Each machine needs to be configured to know how to handle a certain Route number
            </summary>
        </member>
        <member name="T:CFX.Production.Hermes.MagazineArrived">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Event triggered by a Hermes enabled endpoint when a magazine arrived.
            <code language="none">
            {
              "MagazineData": {
                "MagazineId": "ID12345",
                "HermesUnits": [
                  {
                    "SlotId": 1,
                    "BoardId": "aa40cd8e-aa68-4ce5-a1dd-a8c41bd3fa9c",
                    "BoardIdCreatedBy": "Printer12345",
                    "FailedBoard": 1,
                    "ProductTypeId": "Product_A",
                    "FlippedBoard": 1,
                    "TopBarcode": "BT_M20206500001",
                    "BottomBarcode": "B_M20206500001",
                    "Lenght": 160.0,
                    "Width": 100.0,
                    "Thickness": 10.0,
                    "ConveyorSpeed": 1200.0,
                    "TopClearanceHeight": 2.5,
                    "BottomClearanceHeight": 1.2,
                    "Weight": 80.0,
                    "WorkOrderIdentifier": {
                      "WorkOrderId": "WO9988776666",
                      "Batch": "Batch1"
                    }
                  },
                  {
                    "SlotId": 2,
                    "BoardId": "7eb2a1db-5adf-4582-8508-180320158178",
                    "BoardIdCreatedBy": "Printer12345",
                    "FailedBoard": 1,
                    "ProductTypeId": "Product_A",
                    "FlippedBoard": 1,
                    "TopBarcode": "BT_M20206500002",
                    "BottomBarcode": "B_M20206500002",
                    "Lenght": 160.0,
                    "Width": 100.0,
                    "Thickness": 10.0,
                    "ConveyorSpeed": 1200.0,
                    "TopClearanceHeight": 2.5,
                    "BottomClearanceHeight": 1.2,
                    "Weight": 80.0,
                    "WorkOrderIdentifier": {
                      "WorkOrderId": "WO9988776666",
                      "Batch": "Batch1"
                    }
                  }
                ]
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Hermes.MagazineArrived.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.MagazineArrived.MagazineData">
            <summary>
            Barcode of a magazine, required to identify the magazine.
            </summary>
        </member>
        <member name="T:CFX.Production.Hermes.MagazineDeparted">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Event triggered by a Hermes enabled endpoint when a magazine departed.
            <code language="none">
            {
              "MagazineData": {
                "MagazineId": "ID12345",
                "HermesUnits": [
                  {
                    "SlotId": 1,
                    "BoardId": "cb8de687-00a1-48a8-a869-314e64cf0e86",
                    "BoardIdCreatedBy": "Printer12345",
                    "FailedBoard": 1,
                    "ProductTypeId": "Product_A",
                    "FlippedBoard": 1,
                    "TopBarcode": "BT_M20206500001",
                    "BottomBarcode": "B_M20206500001",
                    "Lenght": 160.0,
                    "Width": 100.0,
                    "Thickness": 10.0,
                    "ConveyorSpeed": 1200.0,
                    "TopClearanceHeight": 2.5,
                    "BottomClearanceHeight": 1.2,
                    "Weight": 80.0,
                    "WorkOrderIdentifier": {
                      "WorkOrderId": "WO9988776666",
                      "Batch": "Batch1"
                    }
                  },
                  {
                    "SlotId": 2,
                    "BoardId": "4aafb669-eec8-4b7d-b436-641f59bf0529",
                    "BoardIdCreatedBy": "Printer12345",
                    "FailedBoard": 1,
                    "ProductTypeId": "Product_A",
                    "FlippedBoard": 1,
                    "TopBarcode": "BT_M20206500002",
                    "BottomBarcode": "B_M20206500002",
                    "Lenght": 160.0,
                    "Width": 100.0,
                    "Thickness": 10.0,
                    "ConveyorSpeed": 1200.0,
                    "TopClearanceHeight": 2.5,
                    "BottomClearanceHeight": 1.2,
                    "Weight": 80.0,
                    "WorkOrderIdentifier": {
                      "WorkOrderId": "WO9988776666",
                      "Batch": "Batch1"
                    }
                  }
                ]
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Hermes.MagazineDeparted.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.Hermes.MagazineDeparted.MagazineData">
            <summary>
            Barcode of a magazine, required to identify the magazine.
            </summary>
        </member>
        <member name="T:CFX.Production.LoadingAndUnloading.NamespaceDoc">
            <summary>
            Implemented when a production resource is capable of loading or unloading production units into any type of fixture or carrier.  This includes de-panelization equipment, for example.
            </summary>
        </member>
        <member name="T:CFX.Production.LoadingAndUnloading.UnitsLoaded">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Sent when a unit is loaded from any form of carrier, including fixtures, pallets, trays, tubs, totes, carts, etc.
            <code language="none">
            {
              "UniqueIdentifier": "PALLET123",
              "Units": [
                {
                  "UnitIdentifier": "MODULE1",
                  "PositionNumber": 1,
                  "PositionName": "NEST1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "MODULE2",
                  "PositionNumber": 2,
                  "PositionName": "NEST2",
                  "X": 70.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.LoadingAndUnloading.UnitsLoaded.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.Production.LoadingAndUnloading.UnitsLoaded.UniqueIdentifier">
            <summary>
            The unique identifier for this carrier (barcode, RFID, etc.)
            </summary>
        </member>
        <member name="P:CFX.Production.LoadingAndUnloading.UnitsLoaded.Units">
            <summary>
            A list of the specific units that were loaded along with positions they were loaded from.
            </summary>
        </member>
        <member name="T:CFX.Production.LoadingAndUnloading.UnitsUnloaded">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Sent when a unit is unloaded into any form of carrier, including fixtures, pallets, trays, tubs, totes, carts, etc.
            Associates unit with a carrier.
            <code language="none">
            {
              "UniqueIdentifier": "PALLET123",
              "Units": [
                {
                  "UnitIdentifier": "MODULE1",
                  "PositionNumber": 1,
                  "PositionName": "NEST1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "MODULE2",
                  "PositionNumber": 2,
                  "PositionName": "NEST2",
                  "X": 70.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.LoadingAndUnloading.UnitsUnloaded.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.Production.LoadingAndUnloading.UnitsUnloaded.UniqueIdentifier">
            <summary>
            The unique identifier for this carrier (barcode, RFID, etc.)
            </summary>
        </member>
        <member name="P:CFX.Production.LoadingAndUnloading.UnitsUnloaded.Units">
            <summary>
            A list of the specific units that were unloaded along with positions they were unloaded to.
            </summary>
        </member>
        <member name="T:CFX.Production.LockStationRequest">
            <summary>
            Request that the endpoint cease active operation (locked) as soon as practically possible
            at a process endpoint.  A specific production lane or stage may be optionally specified.
            Includes a reason, and applies to all operations. The response indicates that the process
            has stopped.
            <code language="none">
            {
              "Lane": 1,
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              },
              "Reason": "QualityIssue",
              "Requestor": {
                "OperatorIdentifier": "e4d92c77-6a19-4d1e-8c2a-b2b217f59a44",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Bill",
                "LoginName": "bill.smith@domain1.com"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.LockStationRequest.Lane">
            <summary>
            An optional production lane.  When specified, only that production lane shall be locked.
            </summary>
        </member>
        <member name="P:CFX.Production.LockStationRequest.Stage">
            <summary>
            An optional stage.  When specified, only that stage shall be locked.
            </summary>
        </member>
        <member name="P:CFX.Production.LockStationRequest.Reason">
            <summary>
            Reason for the request to lock the station.
            </summary>
        </member>
        <member name="P:CFX.Production.LockStationRequest.Requestor">
            <summary>
            Identifies the originator of the request. (optional)
            </summary>
        </member>
        <member name="T:CFX.Production.LockStationResponse">
            <summary>
            Response to a request that the endpoint cease active operation (locked) as soon as practically possible
            at a process endpoint.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.LockStationResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Production.NamespaceDoc">
            <summary>
            CFX Topic implemented by endpoints which are involved in the process of creating and testing production units.
            </summary>
        </member>
        <member name="T:CFX.Production.OperatorActivated">
            <summary>
            Indicates that an operator is now active at or responsible for a process endpoint. 
            Having multiple operators (each needs to be activated and deactivated separately) or 
            an absence of an operator is possible. 
            <code language="none">
            {
              "Operator": {
                "OperatorIdentifier": "42b7a5cc-3bbd-4010-8a01-1c5851b9a2a3",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Bill",
                "LoginName": "bill.smith@domain1.com"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.OperatorActivated.Operator">
            <summary>
            A structure which defines the Operator.
            </summary>
        </member>
        <member name="T:CFX.Production.OperatorDeactivated">
            <summary>
            Indicates that an activated operator is no longer active or responsible at a process endpoint
            <code language="none">
            {
              "Operator": {
                "OperatorIdentifier": "ea9da45d-9b1f-4e6a-974f-df06aeede42f",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Bill",
                "LoginName": "bill.smith@domain1.com"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.OperatorDeactivated.Operator">
            <summary>
            A structure which defines the Operator (optional)
            </summary>
        </member>
        <member name="T:CFX.Production.Processing.NamespaceDoc">
            <summary>
            CFX Topic implemented by endpoints which are involved in the processing of production units.
            </summary>
        </member>
        <member name="T:CFX.Production.Processing.UnitsProcessed">
            <summary>
            Sent when an endpoint processes one or more production units within
            the scope of a work transaction.  Contains dynamic structures that vary
            based upon the type of processing that was performed.
            <para></para>
            <para>Example 1 (Reflow Oven Processing):</para>
            <para></para>
            <code language="none">
            {
              "TransactionId": "a881ac27-9649-41c8-a13e-df118471eb1e",
              "OverallResult": "Succeeded",
              "CommonProcessData": {
                "$type": "CFX.Structures.SolderReflow.ReflowProcessData, CFX",
                "ConveyorSpeed": 60.0,
                "ConveyorSpeedSetpoint": 0.0,
                "ZoneData": [
                  {
                    "Zone": {
                      "ReflowZoneType": "PreHeat",
                      "StageSequence": 1,
                      "StageName": "Zone1",
                      "StageType": "Work"
                    },
                    "Setpoints": [
                      {
                        "SubZone": "Top",
                        "SetpointType": "Temperature",
                        "Setpoint": 220.0
                      },
                      {
                        "SubZone": "Bottom",
                        "SetpointType": "Temperature",
                        "Setpoint": 210.0
                      }
                    ],
                    "Readings": [
                      {
                        "SubZone": "Top",
                        "ReadingType": "Temperature",
                        "ReadingValue": 221.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "Power",
                        "ReadingValue": 220.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 55.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Temperature",
                        "ReadingValue": 209.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Power",
                        "ReadingValue": 195.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 45.0
                      }
                    ]
                  },
                  {
                    "Zone": {
                      "ReflowZoneType": "Soak",
                      "StageSequence": 2,
                      "StageName": "Zone2",
                      "StageType": "Work"
                    },
                    "Setpoints": [
                      {
                        "SubZone": "Top",
                        "SetpointType": "Temperature",
                        "Setpoint": 200.0
                      },
                      {
                        "SubZone": "Bottom",
                        "SetpointType": "Temperature",
                        "Setpoint": 190.0
                      }
                    ],
                    "Readings": [
                      {
                        "SubZone": "Top",
                        "ReadingType": "Temperature",
                        "ReadingValue": 201.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "Power",
                        "ReadingValue": 190.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 45.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Temperature",
                        "ReadingValue": 189.5
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Power",
                        "ReadingValue": 185.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 42.0
                      }
                    ]
                  },
                  {
                    "Zone": {
                      "ReflowZoneType": "Reflow",
                      "StageSequence": 3,
                      "StageName": "Zone3",
                      "StageType": "Work"
                    },
                    "Setpoints": [
                      {
                        "SubZone": "Top",
                        "SetpointType": "Temperature",
                        "Setpoint": 250.0
                      },
                      {
                        "SubZone": "Bottom",
                        "SetpointType": "Temperature",
                        "Setpoint": 240.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "SetpointType": "O2",
                        "Setpoint": 500.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "SetpointType": "Vacuum",
                        "Setpoint": 225.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "SetpointType": "VacuumHoldTime",
                        "Setpoint": 5.0
                      }
                    ],
                    "Readings": [
                      {
                        "SubZone": "Top",
                        "ReadingType": "Temperature",
                        "ReadingValue": 251.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "Power",
                        "ReadingValue": 230.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 75.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Temperature",
                        "ReadingValue": 239.5
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Power",
                        "ReadingValue": 220.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 65.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "ReadingType": "O2",
                        "ReadingValue": 498.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "ReadingType": "Vacuum",
                        "ReadingValue": 224.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "ReadingType": "VacuumHoldTime",
                        "ReadingValue": 5.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "ReadingType": "ConvectionRate",
                        "ReadingValue": 250.0
                      }
                    ]
                  },
                  {
                    "Zone": {
                      "ReflowZoneType": "Cool",
                      "StageSequence": 4,
                      "StageName": "Zone4",
                      "StageType": "Work"
                    },
                    "Setpoints": [
                      {
                        "SubZone": "Top",
                        "SetpointType": "Temperature",
                        "Setpoint": 150.0
                      },
                      {
                        "SubZone": "Bottom",
                        "SetpointType": "Temperature",
                        "Setpoint": 140.0
                      }
                    ],
                    "Readings": [
                      {
                        "SubZone": "Top",
                        "ReadingType": "Temperature",
                        "ReadingValue": 151.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "Power",
                        "ReadingValue": 120.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 30.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Temperature",
                        "ReadingValue": 139.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Power",
                        "ReadingValue": 110.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 25.0
                      }
                    ]
                  }
                ]
              },
              "UnitProcessData": []
            }
            </code>
            <para></para>
            <para>Example 2 (Conformal Coating Process):</para>
            <para></para>
            <code language="none">
            {
              "TransactionId": "d280fd1c-e2cb-4544-be8b-78554c87a0c5",
              "OverallResult": "Succeeded",
              "CommonProcessData": null,
              "UnitProcessData": [
                {
                  "UnitIdentifier": "CARRIER55678",
                  "UnitPositionNumber": 1,
                  "UnitResult": "Succeeded",
                  "UnitProcessData": {
                    "$type": "CFX.Structures.Coating.CoatingProcessData, CFX",
                    "Readings": [
                      {
                        "MeasurementType": "FluidVolume",
                        "ActualValue": 1.1,
                        "ExpectedValue": 1.0,
                        "MinAcceptableValue": 0.8,
                        "MaxAcceptableValue": 1.2,
                        "UniqueIdentifier": "c3113de4-c3f9-4c9d-8814-fee2ea12e90b",
                        "MeasurementName": "FluidVolume",
                        "TimeRecorded": null,
                        "Sequence": 0,
                        "Result": "Passed",
                        "CRDs": null
                      },
                      {
                        "MeasurementType": "FluidPressure",
                        "ActualValue": 32.5,
                        "ExpectedValue": 32.0,
                        "MinAcceptableValue": 31.0,
                        "MaxAcceptableValue": 33.8,
                        "UniqueIdentifier": "fd246214-573b-40dd-927a-ebfb49d46ae7",
                        "MeasurementName": "FluidPressure",
                        "TimeRecorded": null,
                        "Sequence": 0,
                        "Result": "Passed",
                        "CRDs": null
                      }
                    ]
                  }
                },
                {
                  "UnitIdentifier": "CARRIER55678",
                  "UnitPositionNumber": 2,
                  "UnitResult": "Succeeded",
                  "UnitProcessData": {
                    "$type": "CFX.Structures.Coating.CoatingProcessData, CFX",
                    "Readings": [
                      {
                        "MeasurementType": "FluidVolume",
                        "ActualValue": 1.1,
                        "ExpectedValue": 1.0,
                        "MinAcceptableValue": 0.8,
                        "MaxAcceptableValue": 1.2,
                        "UniqueIdentifier": "11508f6f-fa11-4533-9db0-d3ff99bb03ba",
                        "MeasurementName": "FluidVolume",
                        "TimeRecorded": null,
                        "Sequence": 0,
                        "Result": "Passed",
                        "CRDs": null
                      },
                      {
                        "MeasurementType": "FluidPressure",
                        "ActualValue": 32.5,
                        "ExpectedValue": 32.0,
                        "MinAcceptableValue": 31.0,
                        "MaxAcceptableValue": 33.8,
                        "UniqueIdentifier": "a0fff961-4fb4-4851-932d-fb811d2fe83d",
                        "MeasurementName": "FluidPressure",
                        "TimeRecorded": null,
                        "Sequence": 0,
                        "Result": "Passed",
                        "CRDs": null
                      }
                    ]
                  }
                }
              ]
            }
            </code>
            <para></para>
            <para>Example 3 (Reflow Profiling Device):</para>
            <para></para>
            <code language="none">
            {
              "TransactionId": "40e16df4-acaa-4c4a-9503-fca51ca58876",
              "OverallResult": "Succeeded",
              "CommonProcessData": {
                "$type": "CFX.Structures.ReflowProfiling.ReflowProfilingProcessData, CFX",
                "TimeDateUnitIn": "2018-10-31T09:30:27.05191-04:00",
                "TimeDateUnitOut": "2018-10-31T09:31:49.05191-04:00",
                "ProductName": "Product1",
                "Barcode": "CARRIER55678",
                "RecipeName": "Recipe1",
                "ProcessWindowName": "ProcessWindow001",
                "LotID": "Lot5564",
                "OvenName": "Oven1",
                "Lane": 1,
                "ConveyorSpeedSetpoint": 100.0,
                "MeasuredConveyorSpeed": 102.3,
                "Result": "Passed",
                "ProductionUnitPWI": 89.6,
                "ZoneData": [
                  {
                    "Zone": {
                      "ReflowZoneType": "PreHeat",
                      "StageSequence": 1,
                      "StageName": "Zone1",
                      "StageType": "Work"
                    },
                    "Setpoints": [
                      {
                        "SubZone": "Top",
                        "SetpointType": "Temperature",
                        "Setpoint": 220.0
                      },
                      {
                        "SubZone": "Bottom",
                        "SetpointType": "Temperature",
                        "Setpoint": 210.0
                      }
                    ],
                    "Readings": [
                      {
                        "SubZone": "Top",
                        "ReadingType": "Temperature",
                        "ReadingValue": 221.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "Power",
                        "ReadingValue": 220.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 55.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Temperature",
                        "ReadingValue": 209.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Power",
                        "ReadingValue": 195.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 45.0
                      }
                    ]
                  },
                  {
                    "Zone": {
                      "ReflowZoneType": "Soak",
                      "StageSequence": 2,
                      "StageName": "Zone2",
                      "StageType": "Work"
                    },
                    "Setpoints": [
                      {
                        "SubZone": "Top",
                        "SetpointType": "Temperature",
                        "Setpoint": 200.0
                      },
                      {
                        "SubZone": "Bottom",
                        "SetpointType": "Temperature",
                        "Setpoint": 190.0
                      }
                    ],
                    "Readings": [
                      {
                        "SubZone": "Top",
                        "ReadingType": "Temperature",
                        "ReadingValue": 201.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "Power",
                        "ReadingValue": 190.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 45.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Temperature",
                        "ReadingValue": 189.5
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Power",
                        "ReadingValue": 185.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 42.0
                      }
                    ]
                  },
                  {
                    "Zone": {
                      "ReflowZoneType": "Reflow",
                      "StageSequence": 3,
                      "StageName": "Zone3",
                      "StageType": "Work"
                    },
                    "Setpoints": [
                      {
                        "SubZone": "Top",
                        "SetpointType": "Temperature",
                        "Setpoint": 250.0
                      },
                      {
                        "SubZone": "Bottom",
                        "SetpointType": "Temperature",
                        "Setpoint": 240.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "SetpointType": "O2",
                        "Setpoint": 500.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "SetpointType": "Vacuum",
                        "Setpoint": 225.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "SetpointType": "VacuumHoldTime",
                        "Setpoint": 5.0
                      }
                    ],
                    "Readings": [
                      {
                        "SubZone": "Top",
                        "ReadingType": "Temperature",
                        "ReadingValue": 251.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "Power",
                        "ReadingValue": 230.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 75.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Temperature",
                        "ReadingValue": 239.5
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Power",
                        "ReadingValue": 220.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 65.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "ReadingType": "O2",
                        "ReadingValue": 498.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "ReadingType": "Vacuum",
                        "ReadingValue": 224.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "ReadingType": "VacuumHoldTime",
                        "ReadingValue": 5.0
                      },
                      {
                        "SubZone": "WholeZone",
                        "ReadingType": "ConvectionRate",
                        "ReadingValue": 250.0
                      }
                    ]
                  },
                  {
                    "Zone": {
                      "ReflowZoneType": "Cool",
                      "StageSequence": 4,
                      "StageName": "Zone4",
                      "StageType": "Work"
                    },
                    "Setpoints": [
                      {
                        "SubZone": "Top",
                        "SetpointType": "Temperature",
                        "Setpoint": 150.0
                      },
                      {
                        "SubZone": "Bottom",
                        "SetpointType": "Temperature",
                        "Setpoint": 140.0
                      }
                    ],
                    "Readings": [
                      {
                        "SubZone": "Top",
                        "ReadingType": "Temperature",
                        "ReadingValue": 151.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "Power",
                        "ReadingValue": 120.0
                      },
                      {
                        "SubZone": "Top",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 30.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Temperature",
                        "ReadingValue": 139.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "Power",
                        "ReadingValue": 110.0
                      },
                      {
                        "SubZone": "Bottom",
                        "ReadingType": "PowerLevel",
                        "ReadingValue": 25.0
                      }
                    ]
                  }
                ]
              },
              "UnitProcessData": []
            }
            </code>
            <para></para>
            <para>Example 4 (Selective Soldering Process):</para>
            <para></para>
            <code language="none">
            {
              "TransactionId": "a4275a83-4a6a-4656-a92d-402ddd4458d8",
              "OverallResult": "Succeeded",
              "CommonProcessData": {
                "$type": "CFX.Structures.SolderApplication.SelectiveSolderProcessData, CFX",
                "Process_Status": "Completed",
                "RecipeName": "Panasonic 2up",
                "Nitrogen_Pressure": 54.0,
                "Air_Pressure": 62.0,
                "Cycle_Count": 671261,
                "Cycle_Time": "00:01:44.2000000",
                "Nitrogen_Purity": 15.0,
                "Nitrogen_Flow": 39.0,
                "Fiducial_Enabled": true
              },
              "UnitProcessData": [
                {
                  "UnitIdentifier": "PANEL4325435",
                  "UnitPositionNumber": 1,
                  "UnitResult": "Succeeded",
                  "UnitProcessData": {
                    "$type": "CFX.Structures.SolderApplication.SelectiveSolderPCBProcessData, CFX",
                    "ZoneData": [
                      {
                        "StageSequence": 1,
                        "ProcessTime": "00:15:00",
                        "Bottle1_Pressure": 7.0,
                        "Bottle2_Pressure": 7.0,
                        "Flux_Volume": 210.0,
                        "Top_Preheater_Power": 50.0,
                        "Top_Preheater_Soak": 10.0,
                        "Top_Preheater_Temp": 109.0,
                        "Top_Preheater_Time": "00:00:37",
                        "Bot_Preheater_Power": 0.0,
                        "Bot_Preheater_Soak": 0.0,
                        "Bot_Preheater_Temp": 0.0,
                        "Bot_Preheater_Time": "00:00:00",
                        "Bath_Temp": 0.0,
                        "Bath_Wave_Enabled": false,
                        "Bath_Wave_Hgt": 0.0,
                        "Solder_Quantity_Used": 0.0,
                        "Fid_XCorrection": 0.15,
                        "Fid_YCorrection": 0.2
                      },
                      {
                        "StageSequence": 2,
                        "ProcessTime": "00:00:37",
                        "Bottle1_Pressure": 0.0,
                        "Bottle2_Pressure": 0.0,
                        "Flux_Volume": 0.0,
                        "Top_Preheater_Power": 50.0,
                        "Top_Preheater_Soak": 10.0,
                        "Top_Preheater_Temp": 109.0,
                        "Top_Preheater_Time": "00:00:37",
                        "Bot_Preheater_Power": 50.0,
                        "Bot_Preheater_Soak": 10.0,
                        "Bot_Preheater_Temp": 108.0,
                        "Bot_Preheater_Time": "00:00:37",
                        "Bath_Temp": 0.0,
                        "Bath_Wave_Enabled": false,
                        "Bath_Wave_Hgt": 0.0,
                        "Solder_Quantity_Used": 0.0,
                        "Fid_XCorrection": 0.0,
                        "Fid_YCorrection": 0.0
                      },
                      {
                        "StageSequence": 3,
                        "ProcessTime": "00:00:37",
                        "Bottle1_Pressure": 0.0,
                        "Bottle2_Pressure": 0.0,
                        "Flux_Volume": 0.0,
                        "Top_Preheater_Power": 50.0,
                        "Top_Preheater_Soak": 10.0,
                        "Top_Preheater_Temp": 109.0,
                        "Top_Preheater_Time": "00:00:37",
                        "Bot_Preheater_Power": 50.0,
                        "Bot_Preheater_Soak": 10.0,
                        "Bot_Preheater_Temp": 108.0,
                        "Bot_Preheater_Time": "00:00:37",
                        "Bath_Temp": 305.0,
                        "Bath_Wave_Enabled": true,
                        "Bath_Wave_Hgt": 0.1,
                        "Solder_Quantity_Used": 5.0,
                        "Fid_XCorrection": 0.15,
                        "Fid_YCorrection": 0.2
                      }
                    ]
                  }
                },
                {
                  "UnitIdentifier": "PANEL4325435",
                  "UnitPositionNumber": 2,
                  "UnitResult": "Succeeded",
                  "UnitProcessData": {
                    "$type": "CFX.Structures.SolderApplication.SelectiveSolderPCBProcessData, CFX",
                    "ZoneData": [
                      {
                        "StageSequence": 1,
                        "ProcessTime": "00:15:00",
                        "Bottle1_Pressure": 7.0,
                        "Bottle2_Pressure": 7.0,
                        "Flux_Volume": 210.0,
                        "Top_Preheater_Power": 50.0,
                        "Top_Preheater_Soak": 10.0,
                        "Top_Preheater_Temp": 109.0,
                        "Top_Preheater_Time": "00:00:37",
                        "Bot_Preheater_Power": 0.0,
                        "Bot_Preheater_Soak": 0.0,
                        "Bot_Preheater_Temp": 0.0,
                        "Bot_Preheater_Time": "00:00:00",
                        "Bath_Temp": 0.0,
                        "Bath_Wave_Enabled": false,
                        "Bath_Wave_Hgt": 0.0,
                        "Solder_Quantity_Used": 0.0,
                        "Fid_XCorrection": 0.15,
                        "Fid_YCorrection": 0.2
                      },
                      {
                        "StageSequence": 2,
                        "ProcessTime": "00:00:37",
                        "Bottle1_Pressure": 0.0,
                        "Bottle2_Pressure": 0.0,
                        "Flux_Volume": 0.0,
                        "Top_Preheater_Power": 50.0,
                        "Top_Preheater_Soak": 10.0,
                        "Top_Preheater_Temp": 109.0,
                        "Top_Preheater_Time": "00:00:37",
                        "Bot_Preheater_Power": 50.0,
                        "Bot_Preheater_Soak": 10.0,
                        "Bot_Preheater_Temp": 108.0,
                        "Bot_Preheater_Time": "00:00:37",
                        "Bath_Temp": 0.0,
                        "Bath_Wave_Enabled": false,
                        "Bath_Wave_Hgt": 0.0,
                        "Solder_Quantity_Used": 0.0,
                        "Fid_XCorrection": 0.0,
                        "Fid_YCorrection": 0.0
                      },
                      {
                        "StageSequence": 3,
                        "ProcessTime": "00:00:37",
                        "Bottle1_Pressure": 0.0,
                        "Bottle2_Pressure": 0.0,
                        "Flux_Volume": 0.0,
                        "Top_Preheater_Power": 50.0,
                        "Top_Preheater_Soak": 10.0,
                        "Top_Preheater_Temp": 109.0,
                        "Top_Preheater_Time": "00:00:37",
                        "Bot_Preheater_Power": 50.0,
                        "Bot_Preheater_Soak": 10.0,
                        "Bot_Preheater_Temp": 108.0,
                        "Bot_Preheater_Time": "00:00:37",
                        "Bath_Temp": 305.0,
                        "Bath_Wave_Enabled": true,
                        "Bath_Wave_Hgt": 0.1,
                        "Solder_Quantity_Used": 5.0,
                        "Fid_XCorrection": 0.15,
                        "Fid_YCorrection": 0.2
                      }
                    ]
                  }
                }
              ]
            }
            </code>
            <para></para>
            <para>Example 5: Printer Operation Data: for each printed PCB send used Printer process parameters</para>
            <para></para>
            <code language="none">  
            {
              "TransactionId": "b063df28-715d-4ba3-bd39-e9b542e4333c",
              "OverallResult": "Succeeded",
              "CommonProcessData": {
                "$type": "CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData, CFX",
                "Strokes": [
                  {
                    "PrintPressure": 1.0,
                    "PrintSpeed": 12.0
                  },
                  {
                    "PrintPressure": 2.0,
                    "PrintSpeed": 9.0
                  }
                ],
                "Separation": {
                  "Name": null,
                  "SeparationSpeed": 1.6,
                  "SeparationDistance": 1.2,
                  "SeparationDelay": null
                },
                "PeriodicCleanings": [
                  {
                    "CleanFrequency": 2,
                    "CleanMode": "W"
                  }
                ],
                "RecipeName": "RECIPE_123",
                "OffsetX": 1.5,
                "OffsetY": 0.5,
                "OffsetTheta": 2.5,
                "FirstPrintDirection": "FrontToRear",
                "CycleTime": "00:00:00"
              },
              "UnitProcessData": []
            }
            </code>
            <para></para>
            <para>Example 6: Cleaning process Data: for each printed PCB send used cleaning process parameters</para>
            <para></para>
            <code language="none">
            {
              "TransactionId": "d6090fe7-1fce-4eee-8c3a-25ee1747795f",
              "OverallResult": "Succeeded",
              "CommonProcessData": {
                "$type": "CFX.Structures.Cleaning.CleaningProcessData, CFX",
                "ConveyorSpeed": 1.4,
                "CleaningTimeSet": 200.0,
                "CleaningTimeActual": 200.0,
                "CleaningSteps": [
                  {
                    "CleaningStepType": "Wash",
                    "CleaningStepTime": 200.0,
                    "Readings": [
                      {
                        "ReadingType": "FlowRateAverage",
                        "ReadingValue": 12.0
                      },
                      {
                        "ReadingType": "FlowRateMax",
                        "ReadingValue": 20.0
                      },
                      {
                        "ReadingType": "FlowRateMin",
                        "ReadingValue": 4.0
                      }
                    ]
                  }
                ]
              },
              "UnitProcessData": []
            }
            </code>
            <para></para>
            <para>Example 7: RouteToolParameters Data: For each PCB send RouterToolparameters</para>
            <para></para>
            <code language="none"> 
            {
              "TransactionId": "97b8ac76-670e-4cdb-9908-60220c8e939f",
              "OverallResult": "Succeeded",
              "CommonProcessData": {
                  "$type": "CFX.Structures.Depaneling.RouterToolParameters, CFX",
                  "ToolDataVersion": 9.00000,
                  "ToolDiameter_SetPoint": 2.00000,
                  "ToolBitStartTime" :2021-12-20TT 10:18:42,
                  "ToolBitEndTime":2021-12-20TT 10:21:52,
                  "ToolBitDistanceRouted":30000.00000,
                  "ToolBitChangeDistanceAlarmSet":80.00000,
                  "NumberOfBoardsRouted":1,
                  "FeedRate_SetPoint":0.00000,
                  "VacuumDistanceRouted":0.00000,
                  "VacuumFilterChangeDistanceAlarmSet":0.00000,
                  "ActualVacuumLevel":100000.00000,
                  "ActualIncomingPressure":7.60126,
                  "ActualMachinePower":1000.00000,
                  "ActualGripperForcePickAndPlace":0.00332,
                  "SpindleSpeed_SetPoint" :0.00000,
                  "MinSpindleRpm" : 0.00000,
                  "MaxSpindleRpm" : 0.00000,
                  "AxisDetails" :[
                   {
                        "AxisName":"X",
                        "ActualAxisSpeed" :393216.00000,
                        "AxisAcceleration_SetValue":8192000.00000,
                        "AxisDecceleration_SetValue" :8192000.00000,
                        "ActualMaxVelocity" :0.00000,
                  },
                  {
                        "AxisName":"Y",
                        "ActualAxisSpeed" :393216.00000,
                        "AxisAcceleration_SetValue":8192000.00000,
                        "AxisDecceleration_SetValue" :8192000.00000,
                        "ActualMaxVelocity" :0.00000,
                  }],
               },
               "UnitProcessData": []
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.Processing.UnitsProcessed.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.Production.Processing.UnitsProcessed.TransactionId">
            <summary>
            The id of the work transaction with which this message is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.Processing.UnitsProcessed.OverallResult">
            <summary>
            The overall result of the processing operation.
            </summary>
        </member>
        <member name="P:CFX.Production.Processing.UnitsProcessed.CommonProcessData">
            <summary>
            Dynamic structure containing data that is common to all production units processed
            by this work transaction.  Any data that is specfic to an individual production unit
            will instead be contained within the UnitProcessData property.
            </summary>
        </member>
        <member name="P:CFX.Production.Processing.UnitsProcessed.UnitProcessData">
            <summary>
            A list of structures containing the processing data for each 
            production units processed by this transaction.
            </summary>
        </member>
        <member name="T:CFX.Production.ReadingsRecorded">
            <summary>
            A process endpoint uses this message to send a data object that has been acquired
            for example from a sensor or a reading taken during processing of the unit. This
            data is typically used as a traceability record. Where no unit ID is provided, 
            the measurement is applicable to the process in terms of time only.
            </summary>
        </member>
        <member name="M:CFX.Production.ReadingsRecorded.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.ReadingsRecorded.TransactionId">
            <summary>
            If the readings related to this message are associated with a work transaction, this property
            contains the Id of the transaction.
            </summary>
        </member>
        <member name="P:CFX.Production.ReadingsRecorded.Readings">
            <summary>
            Dynamic structure providing a list of readings to be recorded.
            </summary>
        </member>
        <member name="T:CFX.Production.RecipeActivated">
            <summary>
            Sent by a process endpoint to indicate the activation of a recipe by its name
            <code language="none">
            {
              "RecipeName": "RECIPE3234",
              "Revision": "B",
              "Lane": 1,
              "Stage": null,
              "ExpectedCycleTime": 60,
              "ExpectedUnitsPerWorkTransaction": 1,
              "NumberOfComponentsPerUnit": 500,
              "WorkOrderIdentifier": {
                "WorkOrderId": "WO-1000-1000",
                "Batch": "WO-1000-1000-B1"
              },
              "TargetQuantity": 500.0,
              "RelevantSurface": "PrimarySurface",
              "RecipeStagesInformation”: [
              {
                "Stage": {
                  "StageSequence": 1,
                  "StageName": "STAGE1",
                  "StageType": "Work"
                }
                "ExpectedCycleTime": 80,
                "NumberOfComponentsPerUnit": 200
              },
              {
                "Stage": {
                  "StageSequence": 2,
                  "StageName": "STAGE2",
                  "StageType": "Work"
                }
                "ExpectedCycleTime": 120,
                "NumberOfComponentsPerUnit": 250
              }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.RecipeActivated.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.RecipeName">
            <summary>
            THe name of the recipe (may include full path, if applicable)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.Revision">
            <summary>
            Version number, e.g. “2.0” (Optional)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.Lane">
            <summary>
            Number of the production lane (if applicable)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.Stage">
            <summary>
            An optional stage
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.ExpectedCycleTime">
            <summary>
            The total amount of time (in ms) that is expected to process one unit or group of units (as in the case of a carrier or panelized PCB), 
            assuming no blocked or starved conditions at the station.  This includes both productive and non-productive time, such as transfer, 
            positioning, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.ExpectedWorkTime">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            The total amount of productive time (in ms) that is expected to process one unit or group of units (as in the case of a carrier or panelized PCB),
            assuming no blocked or starved conditions at the station. This does not include any non-productive time, such as transfer, positioning, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.ExpectedUnitsPerWorkTransaction">
            <summary>
            The number of units that are to be processed simulataneously by this recipe.  For example, in the case of a 2 x 2 panelized PCB, this
            property would be 4 because 4 units (PCBs) are procesed at one time per work transaction.  In the case that a station processes a
            variable number of units per transaction, this should represent the average number of units expected to be processed per transaction.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.NumberOfComponentsPerUnit">
            <summary>
            The number of components to install for each unit of a work.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.WorkOrderIdentifier">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Identifies the Work Order (or Batch) that will be executed by the newly activated recipe.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.TargetQuantity">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Identifies the target number of units to be produced by the newly activated recipe.
            This property is optional, but should be specified if known by the endpoint producing this message.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.RelevantSurface">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            For two-dimensional products, such as printed circuit assemblies, specifies the relevant
            surface that will be processed by the newly activated recipe.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeActivated.RecipeStagesInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            An optional list of information about the recipe for each stage of the machine
            </summary>
        </member>
        <member name="T:CFX.Production.RecipeDeactivated">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Sent by a process endpoint to indicate the deactivation of a recipe by its name
            <code language="none">
            {
              "RecipeName": "RECIPE3234",
              "Revision": "B",
              "Lane": 1,
              "Stage": null
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeDeactivated.RecipeName">
            <summary>
            The name of the recipe (may include full path, if applicable)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeDeactivated.Revision">
            <summary>
            Version number, e.g. “2.0” (Optional)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeDeactivated.Lane">
            <summary>
            Number of the production lane (if applicable)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeDeactivated.Stage">
            <summary>
            An optional stage
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeDeactivated.WorkOrderIdentifier">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            Identifies the Work Order (or Batch) that is related to the deactivated recipe.
            </summary>
        </member>
        <member name="T:CFX.Production.RecipeModified">
            <summary>
            Sent by a process endpoint to indicate that a change has been made to a specified named recipe.
            <code language="none">
            {
              "RecipeName": "RECIPE3234",
              "Revision": "D",
              "ModifiedBy": {
                "OperatorIdentifier": "95739c63-7e59-481b-a597-627cb843c8f4",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Bill",
                "LoginName": "bill.smith@domain1.com"
              },
              "Reason": "PositionalCorrection",
              "Notes": null
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.RecipeName">
            <summary>
            The name of the recipe (may include full path, if applicable)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.Revision">
            <summary>
            Version number, e.g. “2.0” (Optional)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.ModifiedBy">
            <summary>
            The operator who performed the modification. (optional)
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.Reason">
            <summary>
            The reason for the modification.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.Notes">
            <summary>
            Any additional notes provided by the user who performed the modification.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.WorkOrderIdentifier">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            Identifies the Work Order (or Batch) that is related to the modified recipe.
            </summary>
        </member>
        <member name="T:CFX.Production.ReworkAndRepair.NamespaceDoc">
            <summary>
            CFX Topic implemented by endpoints which are involved in the repair and rework of defective or 
            otherwise problematic production units discovered at any point in the production process, or later.
            </summary>
        </member>
        <member name="T:CFX.Production.ReworkAndRepair.UnitsRepaired">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Sent by a process endpoint when one or more units have been reworked or repaird.  Includes outcome information,
            as well as a detailed report of the repair(s) performed.  If defects or faulty test results (symptoms) were
            previously reported for these production unit(s), this message also relates the repairs performed back to these
            inspection/test results.
            <para>  </para>
            <code language="none">
            {
              "TransactionId": "080ff333-2577-45e4-8440-3ef38bb79945",
              "RepairOperator": {
                "OperatorIdentifier": "BADGE489499",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Joseph",
                "LoginName": "joseph.smith@abcdrepairs.com"
              },
              "RepairedUnits": [
                {
                  "UnitIdentifier": "FFSHkkskamJDHS",
                  "UnitPositionNumber": 1,
                  "OverallResult": "RepairSuccessful",
                  "Repairs": [
                    {
                      "UniqueIdentifier": "a604ed78-c314-48ab-b963-8111bf4d85ef",
                      "RepairName": "Joint Repair",
                      "RepairStartTime": "2021-06-23T15:39:23.0062167-04:00",
                      "RepairEndTime": "2021-06-23T15:40:03.0062167-04:00",
                      "Comments": "Repaired cold solder joint at U34, Pin 5",
                      "ComponentOfInterest": {
                        "ReferenceDesignator": "U34.5",
                        "UnitPosition": null,
                        "PartNumber": "SN74HCS30DR"
                      },
                      "RegionOfInterest": null,
                      "RelatedDefectIdentifiers": [
                        "b1031227-d911-4be2-ba74-7a3fe019e5fa"
                      ],
                      "ReclassifiedDefects": [],
                      "RelatedSymptomIdentifiers": [],
                      "ReclassifiedSymptoms": [],
                      "Result": "RepairSuccessful",
                      "Error": null
                    },
                    {
                      "UniqueIdentifier": "d9a6639d-2312-4f97-8494-e8adfdae19b3",
                      "RepairName": "Joint Repair",
                      "RepairStartTime": "2021-06-23T15:39:23.0062167-04:00",
                      "RepairEndTime": "2021-06-23T15:40:03.0062167-04:00",
                      "Comments": "Repaired solder bridge at U24, Pins 4-5",
                      "ComponentOfInterest": {
                        "ReferenceDesignator": "U24.4-5",
                        "UnitPosition": null,
                        "PartNumber": "SN74HCS50DR"
                      },
                      "RegionOfInterest": null,
                      "RelatedDefectIdentifiers": [
                        "e9c72d08-a0f0-450b-b5f4-49145edfca6b"
                      ],
                      "ReclassifiedDefects": [],
                      "RelatedSymptomIdentifiers": [],
                      "ReclassifiedSymptoms": [],
                      "Result": "RepairSuccessful",
                      "Error": null
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.ReworkAndRepair.UnitsRepaired.#ctor">
            <summary>
             Unit inspected default constructor, used to model all the different inspection options
             </summary>
        </member>
        <member name="P:CFX.Production.ReworkAndRepair.UnitsRepaired.TransactionId">
            <summary>
            The id of the work transaction with which this inspection session is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.ReworkAndRepair.UnitsRepaired.RepairOperator">
            <summary>
            Identifies the person who performed the repair(s), or operator of the automated equipment that performed the repairs (optional)
            </summary>
        </member>
        <member name="P:CFX.Production.ReworkAndRepair.UnitsRepaired.RepairedUnits">
            <summary>
            A list of the units that were repaired, along with the details of those repairs, 
            and the results.
            </summary>
        </member>
        <member name="T:CFX.Production.SetupRequirementsChanged">
            <summary>
            Sent whenever the setup requirement of materials, tools, etc. are changed for any reason at a process endpoint. 
            This message contains a detailed listing of the required items, and their designated positions. 
            This message is typically used for example, whenever a new recipe is activated which requires a different setup.
            If the Lane and Stage properties are left empty, the setup requirements of the entire Endpoint have been impacted.
            Otherwise, only the specified Lane and/or Stage is impacted.
            <code language="none">
            {
              "Lane": 1,
              "Stage": null
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.SetupRequirementsChanged.Lane">
            <summary>
            An optional property designating the affected Lane.
            </summary>
        </member>
        <member name="P:CFX.Production.SetupRequirementsChanged.Stage">
            <summary>
            An optional property designating the affected Stage.
            </summary>
        </member>
        <member name="T:CFX.Production.TestAndInspection.NamespaceDoc">
            <summary>
            Messages used when a production resource is performing any form of test or inspection of production units, including both automated and manual inspections, of all kinds.
            </summary>
        </member>
        <member name="T:CFX.Production.TestAndInspection.UnitsInspected">
            <summary>
            Sent by a process endpoint when one or more units have been inspected.  Includes pass/fail information,
            as well as a detailed report of the inspection, including the specific measurements and inspections
            that were made, and defects that were discovered during the process.
            <para>  </para>
            <para>Generic Inspection Example (2 Circuit PCB Panel inspected via AOI):</para>
            <para>  </para>
            <code language="none">
            {
              "TransactionId": "14d48338-09b7-4d20-acb9-bf951270793a",
              "InspectionMethod": "AOI",
              "SamplingInformation": {
                "SamplingMethod": "NoSampling",
                "LotSize": null,
                "SampleSize": null
              },
              "Inspector": {
                "OperatorIdentifier": "BADGE489499",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Joseph",
                "LoginName": "joseph.smith@abcdrepairs.com"
              },
              "InspectedUnits": [
                {
                  "UnitIdentifier": "PANEL34543535",
                  "UnitPositionNumber": 1,
                  "OverallResult": "Passed",
                  "Inspections": [
                    {
                      "UniqueIdentifier": "481f296f-d4b2-4d8e-8b05-a0a17ca33488",
                      "InspectionName": "INSPECT_R21",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": []
                    },
                    {
                      "UniqueIdentifier": "074c7aa5-8871-4629-b139-122b620bdc1b",
                      "InspectionName": "INSPECT_R22",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": []
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL34543535",
                  "UnitPositionNumber": 2,
                  "OverallResult": "Failed",
                  "Inspections": [
                    {
                      "UniqueIdentifier": "27e4a632-5670-4683-9b54-b67b7df98260",
                      "InspectionName": "INSPECT_R21",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": []
                    },
                    {
                      "UniqueIdentifier": "f7ed3609-ea35-4bcc-9170-cb5d540348d5",
                      "InspectionName": "INSPECT_R22",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Failed",
                      "Error": null,
                      "DefectsFound": [
                        {
                          "UniqueIdentifier": "53c7d9e7-e43f-4415-a3ff-8932f0437dde",
                          "DefectCode": "ISFSLD112",
                          "DefectCategory": "Solder Problems",
                          "Description": "Insuffiecient Solder on R22, Lead 1",
                          "Comments": null,
                          "ComponentOfInterest": {
                            "ReferenceDesignator": "R22.1",
                            "UnitPosition": null,
                            "PartNumber": "11123-8897"
                          },
                          "RegionOfInterest": {
                            "StartPointX": 0.0,
                            "StartPointY": 0.0,
                            "RegionSegments": []
                          },
                          "DefectImages": [
                            {
                              "MimeType": "image/jpg",
                              "ImageData": "rFRWd9iZ"
                            }
                          ],
                          "Priority": 1,
                          "ConfidenceLevel": 100.0,
                          "RelatedMeasurements": [],
                          "RelatedSymptoms": []
                        },
                        {
                          "UniqueIdentifier": "561d08c2-aac9-422a-8910-41a3528a8acc",
                          "DefectCode": "TMBSTN211",
                          "DefectCategory": "Solder Problems",
                          "Description": "Tombston on R22",
                          "Comments": null,
                          "ComponentOfInterest": {
                            "ReferenceDesignator": "R22",
                            "UnitPosition": null,
                            "PartNumber": "11123-8897"
                          },
                          "RegionOfInterest": {
                            "StartPointX": 0.0,
                            "StartPointY": 0.0,
                            "RegionSegments": []
                          },
                          "DefectImages": [
                            {
                              "MimeType": "image/jpg",
                              "ImageData": "XSjjh8i5"
                            }
                          ],
                          "Priority": 1,
                          "ConfidenceLevel": 100.0,
                          "RelatedMeasurements": [],
                          "RelatedSymptoms": []
                        }
                      ],
                      "Symptoms": null,
                      "Measurements": []
                    },
                    {
                      "UniqueIdentifier": "abcbe17f-9232-4005-87e0-98651e2967b5",
                      "InspectionName": "COSMETIC_INSPECTION",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Failed",
                      "Error": null,
                      "DefectsFound": [
                        {
                          "UniqueIdentifier": "8018a32b-ef92-494f-bb3d-5e0549bdea20",
                          "DefectCode": "SCR23443",
                          "DefectCategory": "Cosmetic Problems",
                          "Description": "Scratch Detected on PCB substrate",
                          "Comments": null,
                          "ComponentOfInterest": {
                            "ReferenceDesignator": null,
                            "UnitPosition": null,
                            "PartNumber": null
                          },
                          "RegionOfInterest": {
                            "StartPointX": 2.3,
                            "StartPointY": 4.0,
                            "RegionSegments": [
                              {
                                "X": 5.6,
                                "Y": 4.0
                              },
                              {
                                "X": 5.6,
                                "Y": 1.6
                              },
                              {
                                "X": 2.3,
                                "Y": 1.6
                              },
                              {
                                "X": 2.3,
                                "Y": 4.0
                              }
                            ]
                          },
                          "DefectImages": [],
                          "Priority": 1,
                          "ConfidenceLevel": 100.0,
                          "RelatedMeasurements": [],
                          "RelatedSymptoms": []
                        }
                      ],
                      "Symptoms": null,
                      "Measurements": []
                    }
                  ]
                }
              ]
            }
            </code>
            <para>Solder Paste Inspection Example:</para>
            <para>  </para>
            <code language="none">
            {
              "TransactionId": "493bdbe0-9c32-4ed1-b7bf-b25372386b99",
              "InspectionMethod": "SPI",
              "SamplingInformation": {
                "SamplingMethod": "NoSampling",
                "LotSize": null,
                "SampleSize": null
              },
              "Inspector": {
                "OperatorIdentifier": "BADGE489499",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Joseph",
                "LoginName": "joseph.smith@abcdrepairs.com"
              },
              "InspectedUnits": [
                {
                  "UnitIdentifier": "PANEL34543535",
                  "UnitPositionNumber": 1,
                  "OverallResult": "Passed",
                  "Inspections": [
                    {
                      "UniqueIdentifier": "09b88135-019d-44f0-b28d-1de766851fd1",
                      "InspectionName": "INSPECT_PASTE_DEPOSITIONS",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.SolderPasteInspection.SolderPasteMeasurement, CFX",
                          "X": 5.62,
                          "EX": 5.6,
                          "Y": 8.29,
                          "EY": 8.3,
                          "Z": 5.01,
                          "EZ": 5.0,
                          "DX": 0.02,
                          "DY": 0.03,
                          "Vol": 5.11,
                          "EVol": 5.1,
                          "Image": null,
                          "UniqueIdentifier": "9367a252-cd8b-4198-bd75-100a0ace2249",
                          "MeasurementName": "R1.1",
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R1.1"
                        },
                        {
                          "$type": "CFX.Structures.SolderPasteInspection.SolderPasteMeasurement, CFX",
                          "X": 5.62,
                          "EX": 5.6,
                          "Y": 8.29,
                          "EY": 8.3,
                          "Z": 5.01,
                          "EZ": 5.0,
                          "DX": 0.02,
                          "DY": 0.03,
                          "Vol": 5.11,
                          "EVol": 5.1,
                          "Image": null,
                          "UniqueIdentifier": "db0d3ac0-b6b8-40c2-8dd4-2ca426d3373a",
                          "MeasurementName": "R1.2",
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R1.1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL34543535",
                  "UnitPositionNumber": 2,
                  "OverallResult": "Failed",
                  "Inspections": [
                    {
                      "UniqueIdentifier": "6ae0a4c5-119c-4381-8d9d-eb193345445f",
                      "InspectionName": "INSPECT_PASTE_DEPOSITIONS",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.SolderPasteInspection.SolderPasteMeasurement, CFX",
                          "X": 5.62,
                          "EX": 5.6,
                          "Y": 8.29,
                          "EY": 8.3,
                          "Z": 5.01,
                          "EZ": 5.0,
                          "DX": 0.02,
                          "DY": 0.03,
                          "Vol": 5.11,
                          "EVol": 5.1,
                          "Image": null,
                          "UniqueIdentifier": "276b031b-69aa-47de-a087-bf4f1471ff0a",
                          "MeasurementName": "R1.1",
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R1.1"
                        },
                        {
                          "$type": "CFX.Structures.SolderPasteInspection.SolderPasteMeasurement, CFX",
                          "X": 5.62,
                          "EX": 5.6,
                          "Y": 8.29,
                          "EY": 8.3,
                          "Z": 5.01,
                          "EZ": 5.0,
                          "DX": 0.02,
                          "DY": 0.03,
                          "Vol": 5.11,
                          "EVol": 5.1,
                          "Image": null,
                          "UniqueIdentifier": "49e5f6cf-dd27-4ad7-aa77-469e1da576df",
                          "MeasurementName": "R1.2",
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R1.1"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
            </code>
            <para>AOI Measuring Component Offsets Example:</para>
            <para>  </para>
            <code language="none">
            {
              "TransactionId": "b8c5c639-2ba8-4371-8edb-f743c5a7e33e",
              "InspectionMethod": "SPI",
              "SamplingInformation": {
                "SamplingMethod": "NoSampling",
                "LotSize": null,
                "SampleSize": null
              },
              "Inspector": {
                "OperatorIdentifier": "BADGE489499",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Joseph",
                "LoginName": "joseph.smith@abcdrepairs.com"
              },
              "InspectedUnits": [
                {
                  "UnitIdentifier": "PANEL34543535",
                  "UnitPositionNumber": 1,
                  "OverallResult": "Passed",
                  "Inspections": [
                    {
                      "UniqueIdentifier": "c9b462e5-3e62-482f-9417-268def5bd059",
                      "InspectionName": "INSPECT_COMPONENT_OFFSETS",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.PCBInspection.OffsetMeasurement, CFX",
                          "DX": 0.02,
                          "DY": 0.01,
                          "DZ": 0.01,
                          "RXY": 0.01,
                          "RZX": 0.15,
                          "RZY": 0.15,
                          "UniqueIdentifier": "63e2821c-f735-4db9-b355-0b2da6be7040",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R1"
                        },
                        {
                          "$type": "CFX.Structures.PCBInspection.OffsetMeasurement, CFX",
                          "DX": 0.02,
                          "DY": 0.01,
                          "DZ": 0.01,
                          "RXY": 0.01,
                          "RZX": 0.15,
                          "RZY": 0.15,
                          "UniqueIdentifier": "dbd43fd9-de85-45c6-92fa-5ff271f9634b",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R2"
                        },
                        {
                          "$type": "CFX.Structures.PCBInspection.OffsetMeasurement, CFX",
                          "DX": 0.02,
                          "DY": 0.01,
                          "DZ": 0.01,
                          "RXY": 0.01,
                          "RZX": 0.15,
                          "RZY": 0.15,
                          "UniqueIdentifier": "ed8cabfb-4f69-4a64-a2dc-8b77f9690312",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R3"
                        },
                        {
                          "$type": "CFX.Structures.PCBInspection.OffsetMeasurement, CFX",
                          "DX": 0.02,
                          "DY": 0.01,
                          "DZ": 0.01,
                          "RXY": 0.01,
                          "RZX": 0.15,
                          "RZY": 0.15,
                          "UniqueIdentifier": "8212c29f-2498-4c30-b2c7-89a403b8f466",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL34543535",
                  "UnitPositionNumber": 2,
                  "OverallResult": "Failed",
                  "Inspections": [
                    {
                      "UniqueIdentifier": "92e9b1c1-e40b-41fb-ad41-74fba7668837",
                      "InspectionName": "INSPECT_COMPONENT_OFFSETS",
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.PCBInspection.OffsetMeasurement, CFX",
                          "DX": 0.02,
                          "DY": 0.01,
                          "DZ": 0.01,
                          "RXY": 0.01,
                          "RZX": 0.15,
                          "RZY": 0.15,
                          "UniqueIdentifier": "0c8f1340-1fef-4a32-9ff4-b44521723fe8",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R1"
                        },
                        {
                          "$type": "CFX.Structures.PCBInspection.OffsetMeasurement, CFX",
                          "DX": 0.02,
                          "DY": 0.01,
                          "DZ": 0.01,
                          "RXY": 0.01,
                          "RZX": 0.15,
                          "RZY": 0.15,
                          "UniqueIdentifier": "43e34985-0bc4-4a07-a702-2c1578f6f2c3",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R2"
                        },
                        {
                          "$type": "CFX.Structures.PCBInspection.OffsetMeasurement, CFX",
                          "DX": 0.02,
                          "DY": 0.01,
                          "DZ": 0.01,
                          "RXY": 0.01,
                          "RZX": 0.15,
                          "RZY": 0.15,
                          "UniqueIdentifier": "5d2df2b8-0444-481c-b888-d47c68d51924",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R3"
                        },
                        {
                          "$type": "CFX.Structures.PCBInspection.OffsetMeasurement, CFX",
                          "DX": 0.02,
                          "DY": 0.01,
                          "DZ": 0.01,
                          "RXY": 0.01,
                          "RZX": 0.15,
                          "RZY": 0.15,
                          "UniqueIdentifier": "fb0ab546-5f52-4a25-9a32-a4d52eedc373",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R4"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
            </code>
            <para>An example of SPI measurement result using the InspectionMeasurementLean option.
            This message is expected to contain an InspectionMeasurementLean object for each solder deposit
            </para>
            <para> </para>
            <code language="none">
            {
              "TransactionId": "00000000-0000-0000-0000-000000000000",
              "InspectionMethod": "Human",
              "SamplingInformation": {
                "SamplingMethod": "NoSampling",
                "LotSize": null,
                "SampleSize": null
              },
              "Inspector": {
                "OperatorIdentifier": null,
                "ActorType": "Human",
                "LastName": null,
                "FirstName": null,
                "LoginName": null
              },
              "RecipeName": "SolderRecipeXYZ_TextBoard1",
              "RecipeRevision": "1.3.3.33",
              "InspectedUnits": [
                {
                  "UnitIdentifier": "FFSHkkskamJDHS",
                  "UnitPositionNumber": 1,
                  "OverallResult": "Passed",
                  "Inspections": [
                    {
                      "UniqueIdentifier": "11122344567",
                      "InspectionName": null,
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Verification": "NotVerifiedYet",
                      "VerificationDetail": null,
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.SolderPasteInspection.InspectionMeasurementLean, CFX",
                          "X": 0.76,
                          "Y": 1.53,
                          "Z": 0.086,
                          "DX": 0.035,
                          "DY": 0.009,
                          "Vol": 7.8E-05,
                          "A": 1.234,
                          "Image": null,
                          "UniqueIdentifier": "4fb463d3-1faf-4dd8-9889-1fc49d62b011",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 1,
                          "Result": "Passed",
                          "CRDs": null
                        }
                      ],
                      "RefNo": 1
                    },
                    {
                      "UniqueIdentifier": "11122344568",
                      "InspectionName": null,
                      "InspectionStartTime": null,
                      "InspectionEndTime": null,
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Verification": "NotVerifiedYet",
                      "VerificationDetail": null,
                      "Error": null,
                      "DefectsFound": [],
                      "Symptoms": null,
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.SolderPasteInspection.InspectionMeasurementLean, CFX",
                          "X": 0.78,
                          "Y": 1.48,
                          "Z": 0.092,
                          "DX": 0.039,
                          "DY": 0.017,
                          "Vol": 7.4E-05,
                          "A": 1.226,
                          "Image": null,
                          "UniqueIdentifier": "4a1d502c-2cb9-498a-b299-21399b83b23d",
                          "MeasurementName": null,
                          "TimeRecorded": null,
                          "Sequence": 1,
                          "Result": "Passed",
                          "CRDs": null
                        }
                      ],
                      "RefNo": 2
                    }
                  ],
                  "Verification": "NotVerifiedYet"
                }
              ]
            }
            </code>    
            <para>An example of AOI inspection on a Panel
            </para>
            <para> </para>
            <code language="none">
            {
              "TransactionId": "436a38e9-fd94-447e-a4d2-db5cc3a4a902",
              "InspectionMethod": "AOI",
              "SamplingInformation": {
                "SamplingMethod": "NoSampling",
                "LotSize": null,
                "SampleSize": null
              },
              "Inspector": {
                "OperatorIdentifier": "BADGE489435",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Joseph",
                "LoginName": "joseph.smith@abcdrepairs.com"
              },
              "RecipeName": null,
              "RecipeRevision": null,
              "InspectedUnits": [],
              "InspectedPanel": {
                "UnitIdentifier": "PN123456789",
                "OverallResult": "Passed",
                "Inspections": [
                  {
                    "UniqueIdentifier": "29436eed-f82f-435a-b19c-7b66aa5cf6f6",
                    "InspectionName": "INSPECT_F1",
                    "InspectionStartTime": null,
                    "InspectionEndTime": null,
                    "TestProcedure": null,
                    "Comments": null,
                    "Result": "Passed",
                    "Verification": "NotVerifiedYet",
                    "VerificationDetail": null,
                    "Error": null,
                    "DefectsFound": [],
                    "Symptoms": [],
                    "Measurements": [],
                    "RefNo": null
                  },
                  {
                    "UniqueIdentifier": "5fda7d22-1775-4bee-a540-992394f3eccb",
                    "InspectionName": "INSPECT_F2",
                    "InspectionStartTime": null,
                    "InspectionEndTime": null,
                    "TestProcedure": null,
                    "Comments": null,
                    "Result": "Passed",
                    "Verification": "NotVerifiedYet",
                    "VerificationDetail": null,
                    "Error": null,
                    "DefectsFound": [],
                    "Symptoms": [],
                    "Measurements": [],
                    "RefNo": null
                  }
                ],
                "Verification": "NotVerifiedYet",
                "TotalInspectionCount": 2,
                "Stretch": 1.0,
                "RecognizedStrokeDirection": "forward",
                "Fiducials": [
                  {
                    "FiducialX": 0.12,
                    "FiducialY": 0.16,
                    "FiducialRXY": 0.0
                  },
                  {
                    "FiducialX": 0.12,
                    "FiducialY": 2.56,
                    "FiducialRXY": 0.0
                  }
                ]
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.TestAndInspection.UnitsInspected.#ctor">
            <summary>
             Unit inspected default constructor, used to model all the different inspection options
             </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsInspected.TransactionId">
            <summary>
            The id of the work transaction with which this inspection session is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsInspected.InspectionMethod">
            <summary>
            Describes how the inspections were performed
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsInspected.SamplingInformation">
            <summary>
            Describes the sampling method that was used during the inspections (if any)
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsInspected.Inspector">
            <summary>
            Identifies the person who performed the inspections, or operator of the automated equipment that performed the inspections (optional)
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsInspected.RecipeName">
            <summary>
            The name of the recipe used to perform the inspection(s) for this transaction (may include full path, if applicable).
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsInspected.RecipeRevision">
            <summary>
            An optional Revision Number of the recipe used to perform the inspection(s) for this transaction.
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsInspected.InspectedUnits">
            <summary>
            A list of the units that were inspected, along with the inspections made, 
            and inspection results.
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsInspected.InspectedPanel">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            Optional: this would represent the entire PCB panel that is undergoing the inspection process
            </summary>
        </member>
        <member name="T:CFX.Production.TestAndInspection.UnitsTested">
            <summary>
            Sent by a process endpoint when one or more units undergo a series of tests.  
            Tests can be of any form, including environmental testing, electrical testing, functional testing, etc.  
            Detail of each test performed is provided, including any measured values, and the results of each test (P/F).  
            For any failed tests, symptom detail is provided.
            <para>  </para>
            <para>Example 1 (In-Circuit Test of 2 Circuit PCB Panel):</para>
            <code language="none">
            {
              "TransactionId": "c16bb3f4-8088-4697-b789-80faec48ac5a",
              "TestMethod": "Automated",
              "Tester": {
                "OperatorIdentifier": "BADGE489499",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Joseph",
                "LoginName": "joseph.smith@abcdrepairs.com"
              },
              "SamplingInformation": {
                "SamplingMethod": "NoSampling",
                "LotSize": null,
                "SampleSize": null
              },
              "TestedUnits": [
                {
                  "UnitIdentifier": "PANEL34543535",
                  "UnitPositionNumber": 1,
                  "OverallResult": "Passed",
                  "Tests": [
                    {
                      "UniqueIdentifier": "01aed4e8-fd87-46a4-a62e-57b51f2ee20f",
                      "TestName": "RESISTANCE_CHECK_R21",
                      "TestStartTime": null,
                      "TestEndTime": null,
                      "TestConditions": [],
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "SymptomsFound": [],
                      "DefectsFound": [],
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.NumericMeasurement, CFX",
                          "MeasuredValue": {
                            "Value": 28300.0,
                            "ValueUnits": "Ohm",
                            "ExpectedValue": 28.2,
                            "ExpectedValueUnits": "kOhm",
                            "MinimumAcceptableValue": 28.0,
                            "MaximumAcceptableValue": 28.4
                          },
                          "UniqueIdentifier": "e7398b02-e649-4918-96b8-c426629b6762",
                          "MeasurementName": "RESISTANCE_MEASUREMENT_R21",
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R21"
                        }
                      ]
                    },
                    {
                      "UniqueIdentifier": "f0f075ab-baef-4a4d-9264-2d2f2948e0fe",
                      "TestName": "RESISTANCE_CHECK_R22",
                      "TestStartTime": null,
                      "TestEndTime": null,
                      "TestConditions": [],
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Failed",
                      "Error": null,
                      "SymptomsFound": [
                        {
                          "UniqueIdentifier": "4db5cb60-140c-41ba-9a27-116dfe3a12cd",
                          "SymptomCode": "RESFAIL2",
                          "SymptomCategory": "Electrical Tests",
                          "Description": "Resistance Value Out of Tolerance",
                          "Comments": null,
                          "ComponentsOfInterest": [
                            {
                              "ReferenceDesignator": "R22.1",
                              "UnitPosition": null,
                              "PartNumber": "41234-8897"
                            },
                            {
                              "ReferenceDesignator": "R22.2",
                              "UnitPosition": null,
                              "PartNumber": "41234-8897"
                            }
                          ],
                          "RegionOfInterest": null,
                          "Priority": 1,
                          "RelatedMeasurements": [
                            {
                              "$type": "CFX.Structures.NumericMeasurement, CFX",
                              "MeasuredValue": {
                                "Value": 28.52,
                                "ValueUnits": "kOhm",
                                "ExpectedValue": 28.2,
                                "ExpectedValueUnits": "kOhm",
                                "MinimumAcceptableValue": 28.0,
                                "MaximumAcceptableValue": 28.4
                              },
                              "UniqueIdentifier": "3092cb6b-2e90-4ede-b9de-c421e16ae18b",
                              "MeasurementName": "RESISTANCE_MEASUREMENT_R22",
                              "TimeRecorded": null,
                              "Sequence": 0,
                              "Result": "Passed",
                              "CRDs": "R22"
                            }
                          ]
                        }
                      ],
                      "DefectsFound": [],
                      "Measurements": []
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL34543535",
                  "UnitPositionNumber": 2,
                  "OverallResult": "Passed",
                  "Tests": [
                    {
                      "UniqueIdentifier": "f9127a3a-f349-40f1-9475-e87b83d46ed5",
                      "TestName": "RESISTANCE_CHECK_R21",
                      "TestStartTime": null,
                      "TestEndTime": null,
                      "TestConditions": [],
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "SymptomsFound": [],
                      "DefectsFound": [],
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.NumericMeasurement, CFX",
                          "MeasuredValue": {
                            "Value": 28300.0,
                            "ValueUnits": "Ohm",
                            "ExpectedValue": 28.2,
                            "ExpectedValueUnits": "kOhm",
                            "MinimumAcceptableValue": 28.0,
                            "MaximumAcceptableValue": 28.4
                          },
                          "UniqueIdentifier": "12d217c0-1a15-48dd-9b05-ed5cfaaa87f0",
                          "MeasurementName": "RESISTANCE_MEASUREMENT_R21",
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R21"
                        }
                      ]
                    },
                    {
                      "UniqueIdentifier": "8eebcda8-dbfa-40b3-b963-36c8c6f979b3",
                      "TestName": "RESISTANCE_CHECK_R22",
                      "TestStartTime": null,
                      "TestEndTime": null,
                      "TestConditions": [],
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "SymptomsFound": [],
                      "DefectsFound": [],
                      "Measurements": [
                        {
                          "$type": "CFX.Structures.NumericMeasurement, CFX",
                          "MeasuredValue": {
                            "Value": 28300.0,
                            "ValueUnits": "Ohm",
                            "ExpectedValue": 28.2,
                            "ExpectedValueUnits": "kOhm",
                            "MinimumAcceptableValue": 28.0,
                            "MaximumAcceptableValue": 28.4
                          },
                          "UniqueIdentifier": "787600e1-fd83-49c5-a2d5-8e3e6e4b3b28",
                          "MeasurementName": "RESISTANCE_MEASUREMENT_R22",
                          "TimeRecorded": null,
                          "Sequence": 0,
                          "Result": "Passed",
                          "CRDs": "R22"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
            </code>
            <para>Example 2 (Burn-in / Hot / Cold Test of Final Production Unit):</para>
            <code language="none">
            {
              "TransactionId": "1b3524e0-fd4f-4bd8-93a7-992d12bdb418",
              "TestMethod": "Automated",
              "Tester": {
                "OperatorIdentifier": "BADGE489499",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Joseph",
                "LoginName": "joseph.smith@abcdrepairs.com"
              },
              "SamplingInformation": {
                "SamplingMethod": "NoSampling",
                "LotSize": null,
                "SampleSize": null
              },
              "TestedUnits": [
                {
                  "UnitIdentifier": "UNIT123456789",
                  "UnitPositionNumber": 1,
                  "OverallResult": "Passed",
                  "Tests": [
                    {
                      "UniqueIdentifier": "5de9b7e9-9c7c-4e88-9d40-07c7618248a2",
                      "TestName": "HOT_TEST",
                      "TestStartTime": "2018-10-03T16:02:33.2831984-04:00",
                      "TestEndTime": "2018-10-03T16:03:05.2842009-04:00",
                      "TestConditions": [
                        {
                          "$type": "CFX.Structures.Temperature, CFX",
                          "StartTime": null,
                          "EndTime": null,
                          "MeanValue": 45.2,
                          "MedianValue": 0.0,
                          "MaxValue": 45.8,
                          "MinValue": 44.9
                        },
                        {
                          "$type": "CFX.Structures.Humidity, CFX",
                          "StartTime": null,
                          "EndTime": null,
                          "MeanValue": 85.5,
                          "MedianValue": 0.0,
                          "MaxValue": 85.7,
                          "MinValue": 85.4
                        }
                      ],
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "SymptomsFound": [],
                      "DefectsFound": [],
                      "Measurements": []
                    },
                    {
                      "UniqueIdentifier": "c2668251-aaba-4ceb-a584-55e8b10f0de1",
                      "TestName": "COLD_TEST",
                      "TestStartTime": "2018-10-03T16:02:33.2842009-04:00",
                      "TestEndTime": "2018-10-03T16:03:05.2842009-04:00",
                      "TestConditions": [
                        {
                          "$type": "CFX.Structures.Temperature, CFX",
                          "StartTime": null,
                          "EndTime": null,
                          "MeanValue": -6.5,
                          "MedianValue": 0.0,
                          "MaxValue": -6.4,
                          "MinValue": -6.7
                        },
                        {
                          "$type": "CFX.Structures.Humidity, CFX",
                          "StartTime": null,
                          "EndTime": null,
                          "MeanValue": 22.5,
                          "MedianValue": 0.0,
                          "MaxValue": 22.7,
                          "MinValue": 22.4
                        }
                      ],
                      "TestProcedure": null,
                      "Comments": null,
                      "Result": "Passed",
                      "Error": null,
                      "SymptomsFound": [],
                      "DefectsFound": [],
                      "Measurements": []
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.TestAndInspection.UnitsTested.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsTested.TransactionId">
            <summary>
            The id of the work transaction with which this testing session is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsTested.TestMethod">
            <summary>
            Describes how the tests were performed.  
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsTested.Tester">
            <summary>
            Identifies the person who performed the test, or operator of the automated equipment that performed the test. (optional)
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsTested.RecipeName">
            <summary>
            The name of the recipe used to perform the inspection(s) for this transaction.
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsTested.RecipeRevision">
            <summary>
            An optional Revision Number of the recipe used to perform the inspection(s) for this transaction.
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsTested.SamplingInformation">
            <summary>
            Describes the sampling method that was used during the test (if any).  
            </summary>
        </member>
        <member name="P:CFX.Production.TestAndInspection.UnitsTested.TestedUnits">
            <summary>
            A list of the units that were tested, along with the tests made, and test results.
            </summary>
        </member>
        <member name="T:CFX.Production.ToolsCleaned">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            This message is used when a tool such as stencil or squeegee is loaded into a cleaning machine
            <code language="none">
            {
              "TransactionID": "72b27f43-78ff-4804-bf5c-45582f6463e3",
              "Tools": [
                {
                  "$type": "CFX.Structures.SolderPastePrinting.SMTSqueegee, CFX",
                  "CleaningState": "Cleaned",
                  "UniqueIdentifier": "SQ1234567890",
                  "Name": "Squeegee name"
                },
                {
                  "$type": "CFX.Structures.SolderPastePrinting.SMTStencil, CFX",
                  "CleaningState": "Cleaned",
                  "UniqueIdentifier": "ST1234567890",
                  "Name": "Stencil name"
                }
              ],
              "CleaningSteps": [
                {
                  "CleaningStepType": "Wash",
                  "CleaningStepTime": 200.0,
                  "Readings": [
                    {
                      "ReadingType": "FlowRateAverage",
                      "ReadingValue": 12.0
                    },
                    {
                      "ReadingType": "FlowRateMax",
                      "ReadingValue": 20.0
                    },
                    {
                      "ReadingType": "FlowRateMin",
                      "ReadingValue": 4.0
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsCleaned.TransactionID">
            <summary>
            Related Transaction ID specified previously by <see cref="T:CFX.Production.ToolsLoaded"/> Message
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsCleaned.Tools">
            <summary>
            A list of the tools that were cleaned. It may contain
            <see cref="T:CFX.Structures.SolderPastePrinting.SMTSqueegee"/> or <see cref="T:CFX.Structures.SolderPastePrinting.SMTStencil"/>
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsCleaned.CleaningSteps">
            <summary>
            A list of cleaning steps
            </summary>
        </member>
        <member name="T:CFX.Production.ToolsLoaded">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            This message is used when a tool such as stencil or squeegee is loaded into a cleaning machine
            <code language="none">
            {
              "TransactionID": "d3e7fe9a-5e42-4121-9edd-a8b46d112ba9",
              "Tools": [
                {
                  "$type": "CFX.Structures.SolderPastePrinting.SMTSqueegee, CFX",
                  "CleaningState": "NotCleaned",
                  "UniqueIdentifier": "SQ1234567890",
                  "Name": "Squeegee name"
                },
                {
                  "$type": "CFX.Structures.SolderPastePrinting.SMTStencil, CFX",
                  "CleaningState": "Unknown",
                  "UniqueIdentifier": "ST1234567890",
                  "Name": "Stencil name"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.ToolsLoaded.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsLoaded.TransactionID">
            <summary>
            Transaction ID used to attach events and data during subsequent processing, until ToolsUnloaded
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsLoaded.Tools">
            <summary>
            A list of the tools that were loaded. It may contain
            <see cref="T:CFX.Structures.SolderPastePrinting.SMTSqueegee"/> or <see cref="T:CFX.Structures.SolderPastePrinting.SMTStencil"/>
            </summary>
        </member>
        <member name="T:CFX.Production.ToolsUnloaded">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            This message is used when a tool such as stencil or squeegee is unloaded from a cleaning machine
            <code language="none">
            {
              "TransactionID": "d3e7fe9a-5e42-4121-9edd-a8b46d112ba9",
              "Tools": [
                {
                  "$type": "CFX.Structures.SolderPastePrinting.SMTSqueegee, CFX",
                  "CleaningState": "Cleaned",
                  "UniqueIdentifier": "SQ1234567890",
                  "Name": "Squeegee name"
                },
                {
                  "$type": "CFX.Structures.SolderPastePrinting.SMTStencil, CFX",
                  "CleaningState": "Cleaned",
                  "UniqueIdentifier": "ST1234567890",
                  "Name": "Stencil name"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.ToolsUnloaded.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsUnloaded.TransactionID">
            <summary>
            Related Transaction ID specified previously by <see cref="T:CFX.Production.ToolsLoaded"/> Message
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsUnloaded.Tools">
            <summary>
            A list of the tools that were unloaded. It may contain
            <see cref="T:CFX.Structures.SolderPastePrinting.SMTSqueegee"/> or <see cref="T:CFX.Structures.SolderPastePrinting.SMTStencil"/>
            </summary>
        </member>
        <member name="T:CFX.Production.ToolsUsed">
            <summary>
            Sent by a process endpoint when one or more tools are used in the course of performing an assembly operation.
            <para>JSON Example - SMT Placement Machine</para>
            <code language="none">
            {
              "TransactionId": "ff199a2e-4b31-4321-8afe-eff177f1a860",
              "UsedTools": [
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 1,
                  "Tool": {
                    "$type": "CFX.Structures.SMTPlacement.SMTHeadAndNozzle, CFX",
                    "HeadId": "HEAD1",
                    "HeadNozzleNumber": 2,
                    "NozzleType": "409A",
                    "UniqueIdentifier": "UID234213421",
                    "Name": "Nozzle45"
                  },
                  "UsageCycles": 3,
                  "InstalledComponents": [
                    {
                      "ReferenceDesignator": "R1",
                      "InstallationTime": "2018-10-25T08:46:46.6320834-04:00"
                    },
                    {
                      "ReferenceDesignator": "R2",
                      "InstallationTime": "2018-10-25T08:46:46.6320834-04:00"
                    },
                    {
                      "ReferenceDesignator": "R3",
                      "InstallationTime": "2018-10-25T08:46:46.6320834-04:00"
                    }
                  ]
                },
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 2,
                  "Tool": {
                    "$type": "CFX.Structures.SMTPlacement.SMTHeadAndNozzle, CFX",
                    "HeadId": "HEAD2",
                    "HeadNozzleNumber": 3,
                    "NozzleType": "409A",
                    "UniqueIdentifier": "UID234223422",
                    "Name": "Nozzle47"
                  },
                  "UsageCycles": 3,
                  "InstalledComponents": [
                    {
                      "ReferenceDesignator": "R1",
                      "InstallationTime": "2018-10-25T08:46:46.6320834-04:00"
                    },
                    {
                      "ReferenceDesignator": "R2",
                      "InstallationTime": "2018-10-25T08:46:46.6320834-04:00"
                    },
                    {
                      "ReferenceDesignator": "R3",
                      "InstallationTime": "2018-10-25T08:46:46.6320834-04:00"
                    }
                  ]
                }
              ]
            }
            </code>
            <para>JSON Example - Hammer Used by Human in Manual Operation</para>
            <code language="none">
            {
              "TransactionId": "8561b98b-21ba-47e6-810d-0917b58a4415",
              "UsedTools": [
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 1,
                  "Tool": {
                    "UniqueIdentifier": "UID234228874",
                    "Name": "Hammer 45"
                  },
                  "UsageCycles": 3,
                  "InstalledComponents": []
                },
                {
                  "UnitIdentifier": "PANEL23423432",
                  "UnitPositionNumber": 2,
                  "Tool": {
                    "UniqueIdentifier": "UID234228874",
                    "Name": "Hammer 45"
                  },
                  "UsageCycles": 3,
                  "InstalledComponents": []
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.ToolsUsed.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsUsed.TransactionId">
            <summary>
            The id of the work transaction with which this installation is associated.
            </summary>
        </member>
        <member name="P:CFX.Production.ToolsUsed.UsedTools">
            <summary>
            A list of the tools that were used
            </summary>
        </member>
        <member name="T:CFX.Production.UnblockMaterialLocationsRequest">
            <summary>
            Sent to a process endpoint to release a material locations block which was put
            into place by a previously sent BlockMaterialLocationsRequest
            <code language="none">
            {
              "Locations": [
                {
                  "LocationIdentifier": "23143433",
                  "LocationName": "SLOT45",
                  "MaterialPackage": null,
                  "CarrierInformation": null
                },
                {
                  "LocationIdentifier": "23143454",
                  "LocationName": "SLOT46",
                  "MaterialPackage": null,
                  "CarrierInformation": null
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.UnblockMaterialLocationsRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.UnblockMaterialLocationsRequest.Locations">
            <summary>
            A list of locations to be unblocked
            </summary>
        </member>
        <member name="T:CFX.Production.UnblockMaterialLocationsResponse">
            <summary>
            Response to UnblockMaterialLocationsRequest
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "BLOCKED OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.UnblockMaterialLocationsResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.UnblockMaterialLocationsResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Production.UnitsArrived">
            <summary>
            Sent when production units physically arrives at a process endpoint, prior to any work or other activity commencing.
            <code language="none">
            {
              "UnitCount": 2,
              "Units": [
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 2,
                  "PositionName": "CIRCUIT2",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 90.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.UnitsArrived.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsArrived.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsArrived.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsArrived.UnitCount">
            <summary>
            The number of individual production units
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsArrived.Units">
            <summary>
            An optional list of structures that identify each specific instance of production unit that arrived (if known).
            Could be individual units, or within a carrier, panel, etc. 
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsArrived.Lane">
            <summary>
            Lane identifier.  Null if no specific lane
            </summary>
        </member>
        <member name="T:CFX.Production.UnitsDeparted">
            <summary>
            Sent by a process endpoint when units physically depart from a process endpoint. 
            This does not imply any information about any activity that may have taken place.
            <code language="none">
            {
              "UnitCount": 2,
              "Units": [
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 2,
                  "PositionName": "CIRCUIT2",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 90.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.UnitsDeparted.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDeparted.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDeparted.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDeparted.UnitCount">
            <summary>
            The number of individual production units
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDeparted.Units">
            <summary>
            An optional list of structures that identify each specific instance of production unit that arrived (if known).
            Could be individual units, or within a carrier, panel, etc. 
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDeparted.Lane">
            <summary>
            Lane identifier.  Null if no specific lane
            </summary>
        </member>
        <member name="T:CFX.Production.UnitsDisqualified">
            <summary>
            Sent by a process endpoint to identify that a specific production unit is disqualified or scrapped.
            This includes logical disqualification in the case that a unit is abandoned during manufacturing
            <code language="none">
            {
              "Reason": "DefectiveRepairNotPossible",
              "Comments": "The units were accidentally dropped, and irrepairably damaged",
              "Units": [
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 2,
                  "PositionName": "CIRCUIT2",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 90.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.UnitsDisqualified.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDisqualified.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDisqualified.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDisqualified.Reason">
            <summary>
            The reason why these units are being disqualified (scrapped).
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDisqualified.Comments">
            <summary>
            Additional free-form comments related to this disqualification.
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsDisqualified.Units">
            <summary>
            List of structures that identify each specific instance of production unit to be disqualified (could be within a carrier or panel). 
            </summary>
        </member>
        <member name="T:CFX.Production.UnitsInitialized">
            <summary>
            Sent when one or more production units are first introduced into the production process flow. 
            Unit initialization most often occurs when new production units are first labeled with unique identifiers (or laser marked)
            <code language="none">
            {
              "WorkOrderIdentifier": {
                "WorkOrderId": "WO45648798",
                "Batch": "BATCH45648798-1"
              },
              "TransactionID": null,
              "Units": [
                {
                  "UnitIdentifier": "UNIT5566687",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "UNIT5566688",
                  "PositionNumber": 2,
                  "PositionName": "CIRCUIT2",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 90.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.UnitsInitialized.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsInitialized.TransactionID">
            <summary>
            If units are being initialized as part of a Work transaction, the related Transaction ID specified previously by the WorkStarted Message.
            Only required if initialization is occurring as part of a Work transaction, such as in the case of a laser marking machine or labeler.
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsInitialized.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsInitialized.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsInitialized.WorkOrderIdentifier">
            <summary>
            The Work Order (and Batch, if applicable) to which these new production units are associated.
            </summary>
        </member>
        <member name="P:CFX.Production.UnitsInitialized.Units">
            <summary>
            A list of structures that identify each specific instance of production unit that have been initialized.
            Could be individual units, or within a carrier, panel, etc. 
            </summary>
        </member>
        <member name="T:CFX.Production.UnlockStationRequest">
            <summary>
            Request that a process endpoint resume production, following a previous lock. The response indicates that the lock has been removed.
            <code language="none">
            {
              "Lane": null,
              "Stage": null,
              "Requestor": {
                "OperatorIdentifier": "71926954-6b23-4f83-a5b4-ed7ef8cc226d",
                "ActorType": "Human",
                "LastName": "Smith",
                "FirstName": "Bill",
                "LoginName": "bill.smith@domain1.com"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.UnlockStationRequest.Lane">
            <summary>
            An optional production lane.  When specified, only that production lane shall be unlocked.
            </summary>
        </member>
        <member name="P:CFX.Production.UnlockStationRequest.Stage">
            <summary>
            An optional stage designating the particular production stage to be unlocked
            </summary>
        </member>
        <member name="P:CFX.Production.UnlockStationRequest.Requestor">
            <summary>
            Information about the operator who is requesting that the stage be unlocked. (optional)
            </summary>
        </member>
        <member name="T:CFX.Production.UnlockStationResponse">
            <summary>
            Response to a request for a process endpoint to resume production, following a previous lock.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.UnlockStationResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Production.UpdateRecipeRequest">
            <summary>
            This message is used to send a named recipe to a process endpoint. The message
            includes details of the recipe, depending on the classification of the process. 
            The response indicates whether the recipe has been received correctly or not.
            <para>UpdateRecipeRequest JSON example</para>
            <code language="none">
            {
              "Overwrite": true,
              "Recipe": {
                "Name": "RECIPE234324",
                "Revision": "C",
                "ExpectedCycleTime": 0.0,
                "ExpectedUnitsPerWorkTransaction": 0.0,
                "UnitLength": 22.46,
                "UnitWidth": 19.21,
                "UnitHeight": 0.85,
                "MimeType": "application/octet-stream",
                "RecipeData": "//w0"
              },
              "Reason": "NewRevision"
            }
            </code>
            <para>Load Printer Recipe / Modify Printer Recipe based on UpdateRecipeRequest and UpdateRecipeResponse </para>
            <code language="none">
            {
              "Overwrite": true,
              "Recipe": {
                "$type": "CFX.Structures.SolderPastePrinting.SolderPastePrintingRecipe, CFX",
                "Strokes": [
                  {
                    "PrintPressure": 1.0,
                    "PrintSpeed": 12.0
                  },
                  {
                    "PrintPressure": 2.0,
                    "PrintSpeed": 9.0
                  }
                ],
                "PrintGap": 1.2,
                "Separation": {
                  "Name": null,
                  "SeparationSpeed": 1.6,
                  "SeparationDistance": 1.2,
                  "SeparationDelay": null
                },
                "PeriodicCleanings": [
                  {
                    "CleanFrequency": 2,
                    "CleanMode": "W"
                  }
                ],
                "Name": "RECIPE234324",
                "Revision": "C",
                "ExpectedCycleTime": 46.25,
                "ExpectedUnitsPerWorkTransaction": 4.0,
                "UnitLength": 22.46,
                "UnitWidth": 19.21,
                "UnitHeight": 0.85,
                "MimeType": null,
                "RecipeData": null
              },
              "Reason": "NewRevision"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.UpdateRecipeRequest.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.UpdateRecipeRequest.Overwrite">
            <summary>
            If set to true, any existing Recipe at the Endpoint with the same name will be replaced by the Recipe
            provided in this request.  If set to False, the update request will not succeed if a Recipe with the same
            name exists at the Endpoint.
            </summary>
        </member>
        <member name="P:CFX.Production.UpdateRecipeRequest.Recipe">
            <summary>
            The new Recipe to be sent to the Endpoint.
            </summary>
        </member>
        <member name="P:CFX.Production.UpdateRecipeRequest.Reason">
            <summary>
            The reason for the update
            </summary>
        </member>
        <member name="T:CFX.Production.UpdateRecipeResponse">
            <summary>
            This message is used to send a named recipe to a process endpoint. The message
            includes details of the recipe, depending on the classification of the process. 
            The response indicates whether the recipe has been received correctly or not.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.UpdateRecipeResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.UpdateRecipeResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.Production.WorkCompleted">
            <summary>
            Sent by a process endpoint when all work has been completed at a process endpoint.
            <para>Generic example</para>
            <para>  </para>
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Result": "Completed",
              "PrimaryIdentifier": null,
              "HermesIdentifier": null,
              "UnitCount": 0,
              "Units": []
            }
            </code>
            <para>Example with PerformanceImpact empty - no performance impact</para>
            <para>  </para>
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              },
              "Result": "Completed",
              "PerformanceImpacts": []
            }
            </code>
            <para>Example with PerformanceImpact</para>
            <para>  </para>
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              },
              "Result": "Completed",
              "PerformanceImpacts": [
                {
                  "Cause": "LowFeederSpeed"
                },
                {
                  "Cause": "AlternativeTrackUsed"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.WorkCompleted.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.WorkCompleted.TransactionID">
            <summary>
            Related Transaction ID specified previously by WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.WorkCompleted.Result">
            <summary>
            An enumeration indicating the overall result of the work transaction.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkCompleted.PrimaryIdentifier">
            <summary>
            OPTIONAL.  Only required if the actual identifiers were not available at the time that the trasnaction was started (at the time 
            the WorkStarted message was transmitted).
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkCompleted.HermesIdentifier">
            <summary>
            OPTIONAL.  Only required if the actual identifiers were not available at the time that the trasnaction was started (at the time 
            the WorkStarted message was transmitted).
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Production.WorkCompleted.UnitCount">
            <summary>
            OPTIONAL.  Only required if the actual identifiers were not available at the time that the trasnaction was started (at the time 
            the WorkStarted message was transmitted).
            The number of individual production units associated with this transaction.  May be more than 1 in the case of a carrier or panel of multiple PCB’s.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkCompleted.Units">
            <summary>
            OPTIONAL.  Only required if the actual identifiers were not available at the time that the trasnaction was started (at the time 
            the WorkStarted message was transmitted).
            Data that identifies each specific instance of production unit with a carrier or panel. 
            </summary>
        </member>
        <member name="P:CFX.Production.WorkCompleted.PerformanceImpacts">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            The total amount of productive time (in ms) that is expected to process one unit or group of units (as in the case of a carrier or panelized PCB),
            assuming no blocked or starved conditions at the station. This does not include any non-productive time, such as transfer, positioning, etc.
            </summary>
        </member>
        <member name="T:CFX.Production.WorkOrderActionExecuted">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Sent when a non-added value action (out of production) relative to a work order is started, aborted or completed by a process endpoint.
            <code language="none">
            {
               "WorkOrderActionInstanceId": "dec7ca54-efc7-4519-a250-0bc7dbeae1d6",
               "WorkOrderIdentifier": {
                "WorkOrderId": "WO1122334455",
                "Batch": null
               },
               "TimeStamp": "2018-08-01T13:46:15.5391201-04:00",
               "Type": "PreProductionOperations",
               "State": "Started",
               "Comments": "Feeders loading",
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.WorkOrderActionExecuted.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.WorkOrderActionInstanceId">
            <summary>
            An id uniquely identfying a particular instance of work order action. If the same work order action occurs x times, each
            instance shall have a unique identifier.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.WorkOrderIdentifier">
            <summary>
            The identifer of the Work Order or Work Order sub-batch
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.TimeStamp">
            <summary>
            The time when the work order action transitioned to the state specified by the State property.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.Type">
            <summary>
            The type of action of the work order action.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.State">
            <summary>
            The current state of the work order action (started, completed, etc.).
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.Comments">
            <summary>
            Optional free-form comments associated with the work order action.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.RelevantSurface">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            For two-dimensional products, such as printed circuit assemblies,
            specifies the relevant surface that is concerned by the action. (optional)
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.RecipeName">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            The name of the recipe, when a particular surface and a particular machine
            are involved in the action (may include full path, if applicable) (optional)
            </summary>
        </member>
        <member name="P:CFX.Production.WorkOrderActionExecuted.RecipeRevision">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            Recipe version number, when a recipe name is defined (optional)
            </summary>
        </member>
        <member name="T:CFX.Production.WorkStageCompleted">
            <summary>
            Sent by a process endpoint to indicate that a stage has been completed.
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              },
              "Result": "Completed",
              "PerformanceImpacts": [
                {
                  "Cause": "LowFeederSpeed"
                },
                {
                  "Cause": "AlternativeTrackUsed"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStageCompleted.TransactionID">
            <summary>
            Related Transaction ID specified previously by WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStageCompleted.Stage">
            <summary>
            The stage name or number
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStageCompleted.Result">
            <summary>
            An enumeration indicating the overall result of the Work transaction
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStageCompleted.PerformanceImpacts">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            The total amount of productive time (in ms) that is expected to process one unit or group of units (as in the case of a carrier or panelized PCB),
            assuming no blocked or starved conditions at the station. This does not include any non-productive time, such as transfer, positioning, etc.
            </summary>
        </member>
        <member name="T:CFX.Production.WorkStagePaused">
            <summary>
            Sent when activity pauses for some reason at a stage of the process endpoint
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStagePaused.TransactionID">
            <summary>
            Related Transaction ID specified previously by WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStagePaused.Stage">
            <summary>
            The stage name or number
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStagePaused.PauseReason">
            <summary>
            The stage name or number
            </summary>
        </member>
        <member name="T:CFX.Production.WorkStageResumed">
            <summary>
            Sent when activity recommences at a stage within a process endpoint, following a WorkStagePaused message
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStageResumed.TransactionID">
            <summary>
            Related Transaction ID specified previously by WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStageResumed.Stage">
            <summary>
            The stage name or number
            </summary>
        </member>
        <member name="T:CFX.Production.WorkStageStarted">
            <summary>
            Sent by a process endpoint when the work-stage for a unit or group of units starts
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStageStarted.TransactionID">
            <summary>
            Related Transaction ID specified previously by WorkStarted Message
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStageStarted.Stage">
            <summary>
            The stage name or number
            </summary>
        </member>
        <member name="T:CFX.Production.WorkStarted">
            <summary>
            Sent by a process endpoint when the work-cycle for a unit or group of units starts
            <code language="none">
            {
              "TransactionID": "2c24590d-39c5-4039-96a5-91900cecedfa",
              "Lane": 1,
              "UnitCount": 2,
              "Units": [
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 2,
                  "PositionName": "CIRCUIT2",
                  "X": 70.45,
                  "Y": 80.66,
                  "Rotation": 90.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Production.WorkStarted.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStarted.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStarted.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStarted.TransactionID">
            <summary>
            Transaction ID used to attach events and data during subsequent processing, until WorkCompleted
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStarted.Lane">
            <summary>
            Lane identifier.  Null if no specific lane
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStarted.UnitCount">
            <summary>
            The number of individual production units associated with this transaction.  May be more than 1 in the case of a carrier or panel of multiple PCB’s.
            </summary>
        </member>
        <member name="P:CFX.Production.WorkStarted.Units">
            <summary>
            Data that identifies each specific instance of production unit with a carrier or panel. 
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.CalibrationPerformed">
            <summary>
            Sent when calibration of any sort has been performed at an endpoint.
            <code language="none">
            {
              "Calibration": {
                "CalibrationCode": "FID1",
                "CalibrationType": "UnitPosition",
                "Comments": "Position Check.  Fiducial FID1."
                "Status": "Ok"
                "CalibrationTime": null
              }
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.CalibrationPerformed.Calibration">
            <summary>
            A dynamic structure describing the calibration that was performed.
            The structure may varty depending on the native of the calibration.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.ChangeSleepStateRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            This request allows an external source to change the sleep state of a Stage or Station
            <see cref="T:CFX.ResourcePerformance.ChangeSleepStateResponse"/> message that it sends back to the requester.
            <code language="none">
            {
              "StageName": "Stage 1",
              "NewSleepState": "Awake"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.ChangeSleepStateRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ChangeSleepStateRequest.StageName">
            <summary>
            Name of the Stage requested to change sleep state.
            If omitted then the sleep state for the whole station is to be changed.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ChangeSleepStateRequest.NewSleepState">
            <summary>
            The new sleep state requested for the Stage/Station
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.ChangeSleepStateResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Response to an external source to modify a generic configuration parameter of a process endpoint.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "OldSleepState": "Hibernate",
              "NewSleepState": "Awake",
              "Stage": {
                "StageSequence": 2,
                "StageName": "Stage 1",
                "StageType": "Work"
              },
              "Lane": null,
              "TransitionTimeRemaining": "00:00:45"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.ChangeSleepStateResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CFX.ResourcePerformance.ChangeSleepStateResponse"/> class.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ChangeSleepStateResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ChangeSleepStateResponse.OldSleepState">
            <summary>
            An enumeration indicating the previous sleep state prior to this state change
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ChangeSleepStateResponse.NewSleepState">
            <summary>
            The new sleep state
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ChangeSleepStateResponse.Stage">
            <summary>
            The stage that has changed sleep state. If omitted then the sleep state for the whole station has been changed.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ChangeSleepStateResponse.Lane">
            <summary>
            The relevant production lane (if applicable)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ChangeSleepStateResponse.TransitionTimeRemaining">
            <summary>
            If the new sleep state requires less wake up time than the old, this indicates that the state is in the process of being changed.
            Time interval can be nullable (for example if there is no time remaining).
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.EnergyConsumed">
            <summary>
            Sent by a process endpoint on a sampled interval of between 1 minute and 1 hour
            to indicate the energy usage and power consumption.
            <code language="none">
            {
              "StartTime": "2018-04-05T09:33:06.1358356-04:00",
              "EndTime": "2018-04-05T09:38:06.1358356-04:00",
              "EnergyUsed": 0.012,
              "PeakPower": 125.6,
              "MinimumPower": 120.3,
              "MeanPower": 124.6,
              "PowerNow": 121.1,         
              "PowerFactorNow": 0.95,
              "PeakCurrent": 0.82,       
              "MinimumCurrent": 0.00,    
              "MeanCurrent": 0.68,       
              "CurrentNow": 0.69,       
              "PeakVoltage": 239.1,      
              "MinimumVoltage": 231.6,   
              "MeanVoltage": 232.9,      
              "VoltageNow": 212.1,       
              "PeakFrequency": 52,
              "MinimumFrequency": 50.5,
              "MeanFrequency": 50.6,
              “FrequencyNow": 50.6,
              "PeakPowerRYB": [ 125.6, 77.4, 10.2 ],
              "MinimumPowerRYB": [ 120.3, 68.5, 8.5 ],    
              "MeanPowerRYB": [ 124.6, 70.2, 9.8 ], 
              "PowerNowRYB": [ 121.1, 68.9, 10.1 ], 
              "PowerFactorNowRYB": [ 0.95, 0.92, 0.80 ],
              "PeakCurrentRYB": [ 0.82, 0.65, 0.33 ], 
              "MinimumCurrentRYB": [ 0.00, 0.01, 0.32 ], 
              "MeanCurrentRYB": [ 0.68, 0.58, 0.32 ],
              "CurrentNowRYB": [ 0.69, 0.57, 0.32 ], 
              "PeakVoltageRYB": [ 420.1, 413.7, 404.6 ], 
              "MinimumVoltageRYB": [ 393.6, 399.8, 397.4 ],
              "MeanVoltageRYB": [ 402.9, 400.1, 402.3 ],
              "VoltageNowRYB": [ 401.1, 401.5, 402.3 ], 
              "ThreePhaseNeutralCurrentNow": 0.06 
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.StartTime">
            <summary>
            The start time of the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.EndTime">
            <summary>
            The end time of the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.EnergyUsed">
            <summary>
            The total amount of energy consumed during the sample period
            (in kilowatt-hours)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PeakPower">
            <summary>
            The maximum amount of power recorded during the sample period
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MinimumPower">
            <summary>
            The lowest amount of power recorded during the sample period
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MeanPower">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The average amount of power consumed during the sample period
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PowerNow">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The instantaneous amount of power recorded at EndTime
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PowerFactorNow">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Description
            (Coefficient number between 0.0 and 1.0 )
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PeakCurrent">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The maximum amount of current recorded during the sample period
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MinimumCurrent">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The minimum amount of current recorded during the sample period
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MeanCurrent">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The average amount of current consumed during the sample period
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.CurrentNow">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The instantaneous amount of current recorded at EndTime
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PeakVoltage">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The maximum amount of voltage recorded during the sample period
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MinimumVoltage">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The minimum amount of voltage recorded during the sample period
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MeanVoltage">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The average value of voltage measured during the sample period
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.VoltageNow">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The instantaneous value of voltage recorded at EndTime
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PeakFrequency">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The maximum frequency value recorded during the sample period
            (in Hertz)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MinimumFrequency">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The minimum frequency value recorded during the sample period
            (in Hertz)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MeanFrequency">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The average frequency value recorded during the sample period
            (in Hertz)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.FrequencyNow">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The instantaneous frequency value recorded at EndTime
            (in Hertz)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PeakPowerRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The maximum amount of power recorded during the sample period on three phases
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MinimumPowerRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The lowest amount of power recorded during the sample period on three phases
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MeanPowerRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The average amount of power consumed during the sample period on three phases
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PowerNowRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The instantaneous amount of power recorded at EndTime on three phases
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PowerFactorNowRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Description
            (Coefficient number between 0.0 and 1.0 )
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PeakCurrentRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The maximum amount of current recorded during the sample period on three phases
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MinimumCurrentRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The minimum amount of current recorded during the sample period on three phases
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MeanCurrentRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The average amount of current consumed during the sample period on three phases
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.CurrentNowRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The instantaneous amount of current recorded at EndTime on three phases
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.PeakVoltageRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The maximum amount of voltage recorded during the sample period on three phases
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MinimumVoltageRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The minimum amount of voltage recorded during the sample period on three phases
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.MeanVoltageRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The average value of voltage measured during the sample period on three phases
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.VoltageNowRYB">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The instantaneous amount of voltage recorded at EndTime on three phases
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumed.ThreePhaseNeutralCurrentNow">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The instantanous amount of current on Neutral at EndTime 
            (in Ampere)
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.EnergyConsumptionRequest">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            This request allows an external source to inquire data regarding energy consumption of the endpoint
            <see cref="T:CFX.ResourcePerformance.EnergyConsumptionResponse"/> message that it sends back to the requester.
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.EnergyConsumptionRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.EnergyConsumptionResponse">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Response to an external source inquiring data regarding energy consumption of the endpoint.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "StartTime": "2018-04-05T09:33:06.1358356-04:00",
              "EndTime": "2018-04-05T09:38:06.1358356-04:00",
              "EnergyUsed": 0.012,
              "PeakPower": 125.6,
              "MinimumPower": 120.3,
              "MeanPower": 124.6,
              "PowerNow": 121.1,         
              "PowerFactorNow": 0.95,
              "PeakCurrent": 0.82,       
              "MinimumCurrent": 0.00,    
              "MeanCurrent": 0.68,       
              "CurrentNow": 0.69,       
              "PeakVoltage": 239.1,      
              "MinimumVoltage": 231.6,   
              "MeanVoltage": 232.9,      
              "VoltageNow": 212.1,       
              "PeakFrequency": 52,
              "MinimumFrequency": 50.5,
              "MeanFrequency": 50.6,
              “FrequencyNow": 50.6,
              "PeakPowerRYB": [ 125.6, 77.4, 10.2 ],
              "MinimumPowerRYB": [ 120.3, 68.5, 8.5 ],    
              "MeanPowerRYB": [ 124.6, 70.2, 9.8 ], 
              "PowerNowRYB": [ 121.1, 68.9, 10.1 ], 
              "PowerFactorNowRYB": [ 0.95, 0.92, 0.80 ],
              "PeakCurrentRYB": [ 0.82, 0.65, 0.33 ], 
              "MinimumCurrentRYB": [ 0.00, 0.01, 0.32 ], 
              "MeanCurrentRYB": [ 0.68, 0.58, 0.32 ],
              "CurrentNowRYB": [ 0.69, 0.57, 0.32 ], 
              "PeakVoltageRYB": [ 420.1, 413.7, 404.6 ], 
              "MinimumVoltageRYB": [ 393.6, 399.8, 397.4 ],
              "MeanVoltageRYB": [ 402.9, 400.1, 402.3 ],
              "VoltageNowRYB": [ 401.1, 401.5, 402.3 ], 
              "ThreePhaseNeutralCurrentNow": 0.06 
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.EnergyConsumptionResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CFX.ResourcePerformance.EnergyConsumptionResponse"/> class.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.StartTime">
            <summary>
            The start time of the sample period. 
            Start time is set as the start time of the immediately prior CFX.ResourcePerformance.EnergyConsumed message
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.EndTime">
            <summary>
            The end time of the sample period. Coincides with the time when request was received.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.EnergyUsed">
            <summary>
            The total amount of energy consumed during the sample period
            (in kilowatt-hours)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PeakPower">
            <summary>
            The maximum amount of power recorded during the sample period
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MinimumPower">
            <summary>
            The lowest amount of power recorded during the sample period
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MeanPower">
            <summary>
            The average amount of power consumed during the sample period
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PowerNow">
            <summary>
            The instantaneous amount of power recorded at EndTime
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PowerFactorNow">
            <summary>
            Description
            (Coefficient number between 0.0 and 1.0 )
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PeakCurrent">
            <summary>
            The maximum amount of current recorded during the sample period
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MinimumCurrent">
            <summary>
            The minimum amount of current recorded during the sample period
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MeanCurrent">
            <summary>
            The average amount of current consumed during the sample period
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.CurrentNow">
            <summary>
            The instantaneous amount of current recorded at EndTime
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PeakVoltage">
            <summary>
            The maximum amount of voltage recorded during the sample period
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MinimumVoltage">
            <summary>
            The minimum amount of voltage recorded during the sample period
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MeanVoltage">
            <summary>
            The average value of voltage measured during the sample period
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.VoltageNow">
            <summary>
            The instantaneous value of voltage recorded at EndTime
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PeakFrequency">
            <summary>
            The maximum frequency value recorded during the sample period
            (in Hertz)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MinimumFrequency">
            <summary>
            The minimum frequency value recorded during the sample period
            (in Hertz)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MeanFrequency">
            <summary>
            The average frequency value recorded during the sample period
            (in Hertz)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.FrequencyNow">
            <summary>
            The instantaneous frequency value recorded at EndTime
            (in Hertz)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PeakPowerRYB">
            <summary>
            The maximum amount of power recorded during the sample period on three phases
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MinimumPowerRYB">
            <summary>
            The lowest amount of power recorded during the sample period on three phases
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MeanPowerRYB">
            <summary>
            The average amount of power consumed during the sample period on three phases
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PowerNowRYB">
            <summary>
            The instantaneous amount of power recorded at EndTime on three phases
            (in watts)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PowerFactorNowRYB">
            <summary>
            Description
            (Coefficient number between 0.0 and 1.0 )
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PeakCurrentRYB">
            <summary>
            The maximum amount of current recorded during the sample period on three phases
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MinimumCurrentRYB">
            <summary>
            The minimum amount of current recorded during the sample period on three phases
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MeanCurrentRYB">
            <summary>
            The average amount of current consumed during the sample period on three phases
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.CurrentNowRYB">
            <summary>
            The instantaneous amount of current recorded at EndTime on three phases
            (in Ampere)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.PeakVoltageRYB">
            <summary>
            The maximum amount of voltage recorded during the sample period on three phases
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MinimumVoltageRYB">
            <summary>
            The minimum amount of voltage recorded during the sample period on three phases
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.MeanVoltageRYB">
            <summary>
            The average value of voltage measured during the sample period on three phases
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.VoltageNowRYB">
            <summary>
            The instantaneous amount of voltage recorded at EndTime on three phases
            (in Volts DC or AC (RMS))
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.EnergyConsumptionResponse.ThreePhaseNeutralCurrentNow">
            <summary>
            The instantanous amount of current on Neutral at EndTime 
            (in Ampere)
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.FaultAcknowledged">
            <summary>
            Sent when a fault has been acknowledged by the operator, but not yet corrected (cleared).
            A subsequent FaultCleared message will be sent once the operator addresses the issue.
            <code language="none">
            {
              "Operator": {
                "OperatorIdentifier": "BADGE4486",
                "ActorType": "Human",
                "LastName": "Doe",
                "FirstName": "John",
                "LoginName": "john.doe@domain1.com"
              },
              "FaultOccurrenceId": "5af7e56c-cfbf-4f1f-aa4c-79d94a7442bc"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.FaultAcknowledged.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.FaultAcknowledged.FaultOccurrenceId">
            <summary>
            A unique identifier of the instance of the related fault.  Corresponds with the
            FaultOccurrenceId property of the corresponding FaultOccurred message
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.FaultAcknowledged.Operator">
            <summary>
            The operator or entity who has acknowledged the fault (if known, otherwise null) (optional)
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.FaultCleared">
            <summary>
            Sent by a process endpoint when a fault is cleared as described in a FaultOccurred message  
            <code language="none">
            {
              "FaultOccurrenceId": "22ac3c8a-9e6d-42f8-85b2-f51bf2224ecc",
              "Operator": {
                "OperatorIdentifier": "BADGE4486",
                "ActorType": "Human",
                "LastName": "Doe",
                "FirstName": "John",
                "LoginName": "john.doe@domain1.com"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.FaultCleared.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.FaultCleared.FaultOccurrenceId">
            <summary>
            A unique identifier of the instance of the related fault.  Corresponds with the
            FaultOccurrenceId property of the corresponding FaultOccurred message
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.FaultCleared.Operator">
            <summary>
            The operator or entity who has cleared the fault (if known, otherwise null) (optional)
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.FaultOccurred">
            <summary>
            <para>Sent by a process endpoint whenever a fault is encountered. A data structure must be included in the message related to specific equipment type.</para>
            <para>Generic Fault Example:</para>
            <para></para>
            <code language="none">
            {
              "Fault": {
                "Cause": "MechanicalFailure",
                "Severity": "Error",
                "FaultCode": "ERROR 3943480",
                "FaultOccurrenceId": "ea170e0a-43fb-4b02-af2c-928a8401dd51",
                "Lane": null,
                "Stage": null,
                "SideLocation": "Unknown",
                "AccessType": "Unknown",
                "Description": null,
                "DescriptionTranslations": {},
                "OccurredAt": "2018-10-31T15:13:31.0083597-04:00",
                "DueDateTime": null
              }
            }
            </code>
            <para></para>
            <para>SMT Placement Fault Example:</para>
            <para></para>
            <code language="none">
            {
              "Fault": {
                "$type": "CFX.Structures.SMTPlacement.SMTPlacementFault, CFX",
                "PlacementFaultType": "PickupError",
                "ProgramStep": 56,
                "Designator": {
                  "ReferenceDesignator": "R31",
                  "UnitPosition": null,
                  "PartNumber": "PN123456"
                },
                "MaterialLocation": {
                  "LocationIdentifier": "UID23948348324",
                  "LocationName": "SLOT47",
                  "MaterialPackage": {
                    "UniqueIdentifier": "UID34280923084932849",
                    "InternalPartNumber": "IPN456465465465",
                    "Quantity": 854.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": null,
                    "BaseName": null,
                    "LaneNumber": 1,
                    "TapeWidth": 8.0,
                    "TapePitch": 8.0,
                    "UniqueIdentifier": "FDR2348934-32890",
                    "Name": "8MMFDR231"
                  }
                },
                "HeadAndNozzle": {
                  "HeadId": "HEAD1",
                  "HeadNozzleNumber": 3,
                  "NozzleType": "TYPE914",
                  "UniqueIdentifier": "UID2389432849",
                  "Name": "NOZZLE3243244"
                },
                "Cause": "MechanicalFailure",
                "Severity": "Error",
                "FaultCode": "ERROR 3943480",
                "FaultOccurrenceId": "a5c05bdc-41a3-4e50-b421-b084eb12ba2b",
                "Lane": 1,
                "Stage": {
                  "StageSequence": 2,
                  "StageName": "STAGE2",
                  "StageType": "Work"
                },
                "SideLocation": "Unknown",
                "AccessType": "Unknown",
                "Description": null,
                "DescriptionTranslations": {},
                "OccurredAt": "2018-10-31T15:13:31.0552292-04:00",
                "DueDateTime": null
              }
            }
            </code>
            <para>THT Insertion Fault Example:</para>
            <code language="none">
            {
              "Fault": {
                "$type": "CFX.Structures.THTInsertion.THTInsertionFault, CFX",
                "InsertionFaultType": "ClinchError",
                "ProgramStep": 56,
                "Designator": {
                  "ReferenceDesignator": "R31",
                  "UnitPosition": null,
                  "PartNumber": "PN123456"
                },
                "MaterialLocation": {
                  "LocationIdentifier": "UID23948348324",
                  "LocationName": "SLOT47",
                  "MaterialPackage": {
                    "UniqueIdentifier": "UID34280923084932849",
                    "InternalPartNumber": "IPN456465465465",
                    "Quantity": 854.0
                  },
                  "CarrierInformation": {
                    "$type": "CFX.Structures.SMTPlacement.SMDTapeFeeder, CFX",
                    "BaseUniqueIdentifier": null,
                    "BaseName": null,
                    "LaneNumber": 1,
                    "TapeWidth": 8.0,
                    "TapePitch": 8.0,
                    "UniqueIdentifier": "FDR2348934-32890",
                    "Name": "8MMFDR231"
                  }
                },
                "Cause": "MechanicalFailure",
                "Severity": "Error",
                "FaultCode": "ERROR 3943480",
                "FaultOccurrenceId": "cdc5d80e-bd0a-4b3b-9d85-9084b23f95e5",
                "Lane": 1,
                "Stage": {
                  "StageSequence": 1,
                  "StageName": "STAGE2",
                  "StageType": "Work"
                },
                "SideLocation": "Unknown",
                "AccessType": "Unknown",
                "Description": null,
                "DescriptionTranslations": {},
                "OccurredAt": "2018-10-31T15:13:31.0708549-04:00",
                "DueDateTime": null
              }
            }
            </code>
            <para></para>
            <para>Solder Paste Printing Fault Example:</para>
            <para></para>
            <code language="none">
            {
              "Fault": {
                "$type": "CFX.Structures.SolderPastePrinting.SMTSolderPastePrintingFault, CFX",
                "PrintingFaultType": "SqueegeeError",
                "Cause": "MechanicalFailure",
                "Severity": "Error",
                "FaultCode": "ERROR 234333",
                "FaultOccurrenceId": "1610b591-eba0-4d30-b56e-89fdc94f865e",
                "Lane": 1,
                "Stage": {
                  "StageSequence": 1,
                  "StageName": "PRINTSTAGE",
                  "StageType": "Work"
                },
                "SideLocation": "Unknown",
                "AccessType": "Unknown",
                "Description": null,
                "DescriptionTranslations": {},
                "OccurredAt": "2018-10-31T15:13:31.1021044-04:00",
                "DueDateTime": null
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.FaultOccurred.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.FaultOccurred.Fault">
            <summary>
            Dynamic structure providing detailed information about the fault that has occurred.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.GetActiveFaultsRequest">
            <summary>
            This request allows an external source to query the equipment for a list of active faults.
            <see cref="T:CFX.ResourcePerformance.GetActiveFaultsResponse"/> message that it sends back to the requester.
            <code language="none">
            {}
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.GetActiveFaultsRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.GetActiveFaultsResponse">
            <summary>
            Response to an external source to modify a generic configuration parameter of a process endpoint.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "ActiveFaults": [
                {
                  "Cause": "MechanicalFailure",
                  "Severity": "Error",
                  "FaultCode": "ERROR 3943480",
                  "FaultOccurrenceId": "85a0286a-622f-4f87-99d5-1f11c95806f3",
                  "Lane": null,
                  "Stage": null,
                  "SideLocation": "Right",
                  "AccessType": "Remote",
                  "Description": "PCB Transport is blocked",
                  "DescriptionTranslations": {
                    "de-DE": "Der Leiterplattentransport ist blockiert"
                  },
                  "OccurredAt": "2018-10-31T15:13:30.9146011-04:00",
                  "DueDateTime": "2018-10-31T18:13:30.9146011-04:00"
                },
                {
                  "Cause": "LoadError",
                  "Severity": "Error",
                  "FaultCode": "ERROR 3943555",
                  "FaultOccurrenceId": "bb1933c4-5c7f-4840-9261-72998d682b2f",
                  "Lane": null,
                  "Stage": null,
                  "SideLocation": "Right",
                  "AccessType": "Local",
                  "Description": "PCB Transport is blocked",
                  "DescriptionTranslations": {
                    "de-DE": "Der Leiterplattentransport ist blockiert"
                  },
                  "OccurredAt": "2018-10-31T15:13:30.9146011-04:00",
                  "DueDateTime": "2018-10-31T18:13:30.9146011-04:00"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.GetActiveFaultsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CFX.ResourcePerformance.GetActiveFaultsResponse"/> class.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.GetActiveFaultsResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.GetActiveFaultsResponse.ActiveFaults">
            <summary>
            A list of faults that are currently active at the endpoint
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.HandleFaultRequest">
            <summary>
            This request allows an external source to modify the behaviour for this dedicated fault in such a way that the
            equoipment itself is not indicating the operator to handle this fault.
            Basically the fault should be handled remotly and no  operator should be guided by the equipment itself to handle
            this fault locally on the equipment. 
            <see cref="T:CFX.ResourcePerformance.HandleFaultResponse"/> message that it sends back to the requester.
            <code language="none">
            {
              "FaultOccurrenceId": "5f643ff3-8928-4079-af7f-926bcafb13f8",
              "HandleRemote": true
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.HandleFaultRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.HandleFaultRequest.FaultOccurrenceId">
            <summary>
            A 128-bit unique identifier which uniquely identifier this specific 
            occurrence of the fault
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.HandleFaultRequest.HandleRemote">
            <summary>
            Gets or sets a value indicating whether the fault should be handled remotely or not.
            If handled remotely, the red light should be off on the equipment (at least for this fault)
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.HandleFaultResponse">
            <summary>
            Response to an external source to modify the behaviour for the equipment to guide the operator process endpoint.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.HandleFaultResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CFX.ResourcePerformance.HandleFaultResponse"/> class.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.HandleFaultResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.LogEntryRecorded">
            <summary>
            An informational message sent by a process endpoint regarding the something that has occurred at the station. 
            Information about the criticality of the information should also be given (information, warning, error etc.).
            <code language="none">
            {
              "InformationId": "INF21321321",
              "Message": "Beam 1 Zeroed and Homed",
              "Importance": "Information",
              "Lane": 1,
              "Stage": {
                "StageSequence": 1,
                "StageName": "STAGE1",
                "StageType": "Work"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.LogEntryRecorded.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.LogEntryRecorded.InformationId">
            <summary>
            An endpoint-specific string that defines the nature of the log entry
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.LogEntryRecorded.Message">
            <summary>
            A human-friendly description of the log entry
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.LogEntryRecorded.Importance">
            <summary>
            The relative importance of the log entry
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.LogEntryRecorded.Lane">
            <summary>
            The production lane related to the log entry (where applicable)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.LogEntryRecorded.Stage">
            The production stage related to the log entry (where applicable)
        </member>
        <member name="P:CFX.ResourcePerformance.LogEntryRecorded.AdditionalData">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Optional additional data depending on the machine type
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.MaintenancePerformed">
            <summary>
            Sent by an endpoint when maintenance has been performed.
            Information includes the type of maintenance, maintenance code, parts used, labor etc.
            <code language="none">
            {
              "MaintenanceType": "Preventive",
              "MaintenanceOrderNumber": "MO676578576",
              "MaintenanceJobCode": "MNT113334",
              "ConsumedMaterials": [
                {
                  "MaterialLocation": {
                    "LocationIdentifier": null,
                    "LocationName": null,
                    "MaterialPackage": {
                      "UniqueIdentifier": null,
                      "InternalPartNumber": "PN2343243",
                      "Quantity": 0.0
                    },
                    "CarrierInformation": null
                  },
                  "QuantityUsed": 3.0,
                  "QuantitySpoiled": 0.0,
                  "RemainingQuantity": 0.0
                },
                {
                  "MaterialLocation": {
                    "LocationIdentifier": null,
                    "LocationName": null,
                    "MaterialPackage": {
                      "UniqueIdentifier": "UID23849854385",
                      "InternalPartNumber": "PN4452",
                      "Quantity": 0.0
                    },
                    "CarrierInformation": null
                  },
                  "QuantityUsed": 3.0,
                  "QuantitySpoiled": 0.0,
                  "RemainingQuantity": 0.0
                }
              ],
              "Tasks": [
                {
                  "Task": "Changed hydraulic fluid in resovoir 1",
                  "TaskId": "HYD233432432",
                  "Operator": {
                    "OperatorIdentifier": "BADGE489435",
                    "ActorType": "Human",
                    "LastName": "Smith",
                    "FirstName": "Joseph",
                    "LoginName": "joseph.smith@abcdrepairs.com"
                  },
                  "ManHoursConsumed": 0.75
                },
                {
                  "Task": "Checked torque on main mount bolts",
                  "TaskId": "CHK3432434",
                  "Operator": {
                    "OperatorIdentifier": "BADGE489435",
                    "ActorType": "Human",
                    "LastName": "Smith",
                    "FirstName": "Joseph",
                    "LoginName": "joseph.smith@abcdrepairs.com"
                  },
                  "ManHoursConsumed": 0.25
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.MaintenancePerformed.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.MaintenancePerformed.MaintenanceType">
            <summary>
            An enumeration describing the type of maintenance that was performed
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.MaintenancePerformed.MaintenanceOrderNumber">
            <summary>
            The work order number related to this maintenance event
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.MaintenancePerformed.MaintenanceJobCode">
            <summary>
            An endpoint-specific code indicating the nature of the maintenance
            event that was conducted
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.MaintenancePerformed.ConsumedMaterials">
            <summary>
            A list of the specific parts and materials that were consumed while performing
            the maintenance event
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.MaintenancePerformed.Tasks">
            <summary>
            A list of the specific tasks that were performed while conducting this maintenance
            event
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.ModifyStationParametersRequest">
            <summary>
            This request allows an external source to modify a generic configuration parameter of a process endpoint.
            Upon successful processing of this request, the endpoint should publish a <see cref="T:CFX.ResourcePerformance.StationParametersModified"/> message in addition to the 
            <see cref="T:CFX.ResourcePerformance.ModifyStationParametersResponse"/> message that it sends back to the requester.
            <code language="none">
            {
              "NewParameters": [
                {
                  "$type": "CFX.Structures.GenericParameter, CFX",
                  "Name": "Torque1",
                  "Value": "35.6"
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.ModifyStationParametersRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ModifyStationParametersRequest.NewParameters">
            <summary>
            A list of the paramters to be modified.  The Parameter structure is a dynamic structure, 
            and may be of differing types depending on the type of endpoint.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.ModifyStationParametersResponse">
            <summary>
            Response to an external source to modify a generic configuration parameter of a process endpoint.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.ModifyStationParametersResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ModifyStationParametersResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.NamespaceDoc">
            <summary>
            CFX Topic related to the performance of an endpoint (speed, OEE, fault rates, etc).
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.PressInsertion.ComponentsPressed">
            <summary>
            Sent periodically by a Press Fit machine to indicate the number of presses which were
            successfully or unsuccessfully completed during the sample time window.
            <code language="none">
            {
              "StartTime": "2018-04-06T08:06:46.4471059-04:00",
              "EndTime": "2018-04-06T08:16:46.4471059-04:00",
              "TotalComponentsPressed": 10,
              "TotalComponentsNotPressed": 2
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.PressInsertion.ComponentsPressed.StartTime">
            <summary>
            The start of the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.PressInsertion.ComponentsPressed.EndTime">
            <summary>
            The end of the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.PressInsertion.ComponentsPressed.TotalComponentsPressed">
            <summary>
            The total number of components that were successfully pressed during the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.PressInsertion.ComponentsPressed.TotalComponentsNotPressed">
            <summary>
            The total number of components that were not successfully pressed during the sample period
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.PressInsertion.NamespaceDoc">
            <summary>
            Specialized messages related to the performance of press fit equipment
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.ProcessDataRecorded">
             <summary>
             <para>** NOTE: ADDED in CFX 1.5 **</para>
            Cleaning Agent needs to report the status of the cleaning liquid regularly 
            as well as an alarm if certain values go out of the allowable range
             <code language="none">
             {
               "ProcessData": {
                 "$type": "CFX.Structures.Cleaning.CleaningManagementData, CFX",
                 "Readings": [
                   {
                     "ReadingType": "TemperatureAverage",
                     "ReadingValue": 25.0
                   },
                   {
                     "ReadingType": "DIWaterVolumeAdd",
                     "ReadingValue": 1.5
                   }
                 ]
               }
             }
             </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ProcessDataRecorded.ProcessData">
            <summary>
            Process data recorded
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SleepStateChanged">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Sent by a process endpoint when the sleep state transitions
            from one state to another. 
            <para>Example 1 (Sleep State change to deeper sleep state):</para>
            <code language="none">
            {
              "OldSleepState": "Awake",
              "NewSleepState": "Shallow",
              "TransitionTimeRemaining": null
            }
            </code>
            <para></para>
            <para>Example 2 (Sleep State change to shallower sleep state):</para>
            <code language="none">
            {
              "OldSleepState": "Hibernate",
              "NewSleepState": "Awake", 
              "Stage": {
                "StageSequence": 2,
                "StageName": "Stage 1",
                "StageType": "Work"
              },
              "Lane": null,    
              "TransitionTimeRemaining": "00:00:45"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.SleepStateChanged.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SleepStateChanged.OldSleepState">
            <summary>
            An enumeration indicating the previous sleep state prior to this state change
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SleepStateChanged.NewSleepState">
            <summary>
            The new sleep state
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SleepStateChanged.Stage">
            <summary>
            The stage that has changed sleep state. If omitted then the sleep state for the whole station has been changed.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SleepStateChanged.Lane">
            <summary>
            The relevant production lane (if applicable)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SleepStateChanged.TransitionTimeRemaining">
            <summary>
            If the new sleep state requires less wake up time than the old, this indicates that the state is in the process of being changed.
            Time interval can be nullable (for example if there is no time remaining).
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SMTPlacement.ComponentsPlaced">
            <summary>
            Sent periodically by an SMT placement machine to indicate the number of placements which were
            successfully or unsuccessfully completed during the sample time window.
            This sample time window shall not exceed 10 minutes.
            <code language="none">
            {
              "StartTime": "2018-04-05T09:28:06.161835-04:00",
              "EndTime": "2018-04-05T09:38:06.161835-04:00",
              "TotalComponentsPlaced": 875,
              "TotalComponentsNotPlaced": 45
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SMTPlacement.ComponentsPlaced.StartTime">
            <summary>
            The start of the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SMTPlacement.ComponentsPlaced.EndTime">
            <summary>
            The end of the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SMTPlacement.ComponentsPlaced.TotalComponentsPlaced">
            <summary>
            The total number of components that were successfully placed during the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SMTPlacement.ComponentsPlaced.TotalComponentsNotPlaced">
            <summary>
            The total number of components that were not successfully placed during the sample period
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SMTPlacement.NamespaceDoc">
            <summary>
            Messages related to the performance of resources where SMT placement takes place (SMT placement equipment). 
            This includes specialized faults, placement rates, and other information related to the performance
            of an SMT placement machine.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SolderPastePrinting.CleanSqueegeeRequest">
            <summary>
            Allows an external source to direct a request to a stencil printer
            to perform a squeegee clean operation
            <code language="none">
            {
              "CleanTypeRequested": "Deep"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.CleanSqueegeeRequest.CleanTypeRequested">
            <summary>
            An enumeration indicating the type of clean operation that is
            being requested
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SolderPastePrinting.CleanSqueegeeResponse">
            <summary>
            Response to a request from an external source for a squeegee clean
            operation to be performed
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.SolderPastePrinting.CleanSqueegeeResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.CleanSqueegeeResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SolderPastePrinting.CleanStencilRequest">
            <summary>
            Allows an external source to direct a request to a stencil printer
            to perform a stencil clean operation
            <code language="none">
            {
              "CleanTypeRequested": "D"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.CleanStencilRequest.CleanTypeRequested">
            <summary>
            An enumeration indicating the type of clean operation that is
            being requested
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SolderPastePrinting.CleanStencilResponse">
            <summary>
            A response to a request by a remote party for a stencil printer to perform a
            stencil clean operation
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.SolderPastePrinting.CleanStencilResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.CleanStencilResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SolderPastePrinting.NamespaceDoc">
            <summary>
            Specialized messages related to the performance of solder paste printers.  This might include
            information related to stencil or squeegee cleaning rates, etc.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SolderPastePrinting.SqueegeeCleaned">
            <summary>
            Indicates that a squeegee clean operation has been performed
            <code language="none">
            {
              "Squeegee": {
                "UniqueIdentifier": "UID23432434",
                "Name": "STENCIL234343"
              },
              "SqueegeeCleanType": "Normal",
              "TimeSinceLastClean": "00:33:00",
              "CyclesSinceLastClean": 35,
              "SqueegeeCleanCycles": 2,
              "SqueegeeCleanTime": "00:00:38"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.SqueegeeCleaned.Squeegee">
            <summary>
            Identifies the squeegee that has been cleaned
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.SqueegeeCleaned.SqueegeeCleanType">
            <summary>
            An enumeration indicating the type of clean that was performed
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.SqueegeeCleaned.TimeSinceLastClean">
            <summary>
            Indicates the length of time that has ellapsed since the last time
            the squeegee was cleaned
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.SqueegeeCleaned.CyclesSinceLastClean">
            <summary>
            Indicates how many printing cycles have been completed since the last
            time the squeegee was cleaned
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.SqueegeeCleaned.SqueegeeCleanCycles">
            <summary>
            Indicates the total number of squeegee cleaning cycles that
            have been performed since this squeegee was loaded.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.SqueegeeCleaned.SqueegeeCleanTime">
            <summary>
            Indicates the total amount of time that it took to perform this squeegee clean operation
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.SolderPastePrinting.StencilCleaned">
            <summary>
            Indicates that a stencil clean operation has been performed
            <code language="none">
            {
              "Stencil": {
                "UniqueIdentifier": "UID23432434",
                "Name": "STENCIL234343"
              },
              "StencilCleanMode": "V",
              "TimeSinceLastClean": "00:33:00",
              "CyclesSinceLastClean": 35,
              "StencilCleanCycles": 2,
              "StencilCleanTime": "00:00:38"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.StencilCleaned.Stencil">
            <summary>
            Identifies the stencil that has been cleaned
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.StencilCleaned.StencilCleanMode">
            <summary>
            Indicates that cleaning mode for the stencil clean operation
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.StencilCleaned.TimeSinceLastClean">
            <summary>
            Indicates the length of time that has ellapsed since the last time
            the stencil was cleaned
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.StencilCleaned.CyclesSinceLastClean">
            <summary>
            Indicates how many printing cycles have been completed since the last
            time the stencil was cleaned
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.StencilCleaned.StencilCleanCycles">
            <summary>
            Indicates the total number of stencil cleaning cycles that
            have been performed since this squeegee was loaded.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.SolderPastePrinting.StencilCleaned.StencilCleanTime">
            <summary>
            Indicates the total amount of time that it took to perform this stencil clean operation
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.StageStateChanged">
            <summary>
            Sent by a process endpoint when the production state of one of its
            stages transitions from one state to another per its state model. 
            <code language="none">
            {
              "Stage": {
                "StageSequence": 2,
                "StageName": "STAGE2",
                "StageType": "Work"
              },
              "Lane": null,
              "OldState": 2200,
              "OldStateDuration": "00:01:25",
              "NewState": 1100,
              "RelatedFault": null
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.StageStateChanged.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StageStateChanged.Stage">
            <summary>
            The name of the stage that has changed state
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StageStateChanged.Lane">
            <summary>
            The relevant production lane (if applicable)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StageStateChanged.OldState">
            <summary>
            The previous state prior to this state change
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StageStateChanged.OldE58State">
            <summary>
            Exposes vendor specific old state code (like 3312, for example) as its equivalent
            Semi E58 enumerated value.
            READ-ONLY HELPER PROPERTY, NOT A DATA PROPERTY.  WILL NOT APPEAR IN JSON DATA.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StageStateChanged.OldStateDuration">
            <summary>
            The amount of time spent in the previous state.  Note:  There may be certain circumstances
            where it is impossible to provide this duration (as in the case of an unexpected power faillure or other extreme events).
            In this case it is acceptable to report a duration of "null", which will be interpreted as "unknown" by the receiver
            of this event.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StageStateChanged.NewState">
            <summary>
            The new state
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StageStateChanged.NewE58State">
            <summary>
            Exposes vendor specific new state code (like 3312, for example), as its equivalent
            Semi E58 enumerated value.
            READ-ONLY HELPER PROPERTY, NOT A DATA PROPERTY.  WILL NOT APPEAR IN JSON DATA.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StageStateChanged.RelatedFault">
            <summary>
            In the case of a stoppage, information about the Fault which caused the stoppage.
            Otherwise null.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.StationOffline">
            <summary>
            Sent by a process endpoint when it is about to transition to a state where it is not 
            possible for further communication, for example when the endpoint is powered down, 
            reset, put into maintenance mode, or simply set off-line.
            <code language="none">
            {}
            </code>
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.StationOnline">
            <summary>
            Sent by a process endpoint when it is ready for communication to resume, for example, powered up, maintenance over, etc. 
            <code language="none">
            {
              "OfflineDuration": "00:23:00"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StationOnline.OfflineDuration">
            <summary>
            The total amount of time the endpoint was offline prior to this notification.  Note:  There may be certain circumstances
            where it is impossible to provide this duration (as in the case of an unexpected power faillure or other extreme events).
            In this case it is acceptable to report a duration of "null", which will be interpreted as "unknown" by the receiver
            of this event.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.StationParametersModified">
            <summary>
            Sent by a process endpoint to indicate that an operator has modified a generic
            parameter or configuration setting. This does not apply to settings related to
            recipes, which are handled by the RecipeModified event. 
            <para></para>
            <para>Generic Example</para>
            <para></para>
            <code language="none">
            {
              "ModifiedParameters": [
                {
                  "$type": "CFX.Structures.GenericParameter, CFX",
                  "Name": "Torque1",
                  "Value": "35.6"
                }
              ]
            }
            </code>
            <para></para>
            <para>Example fore Solder Reflow Oven</para>
            <para></para>
            <code language="none">
            {
              "ModifiedParameters": [
                {
                  "$type": "CFX.Structures.SolderReflow.ReflowOvenParameter, CFX",
                  "ConveyorSpeedSetpoint": 50.0,
                  "ConveyorWidth": 25.0,
                  "ZoneParameters": [
                    {
                      "Zone": {
                        "ReflowZoneType": "PreHeat",
                        "StageSequence": 1,
                        "StageName": "Zone1",
                        "StageType": "Work"
                      },
                      "Setpoints": [
                        {
                          "SubZone": "Top",
                          "SetpointType": "Temperature",
                          "Setpoint": 220.0
                        },
                        {
                          "SubZone": "Bottom",
                          "SetpointType": "Temperature",
                          "Setpoint": 220.0
                        }
                      ]
                    },
                    {
                      "Zone": {
                        "ReflowZoneType": "Soak",
                        "StageSequence": 2,
                        "StageName": "Zone2",
                        "StageType": "Work"
                      },
                      "Setpoints": [
                        {
                          "SubZone": "Top",
                          "SetpointType": "Temperature",
                          "Setpoint": 200.0
                        },
                        {
                          "SubZone": "Bottom",
                          "SetpointType": "Temperature",
                          "Setpoint": 220.0
                        }
                      ]
                    },
                    {
                      "Zone": {
                        "ReflowZoneType": "Reflow",
                        "StageSequence": 3,
                        "StageName": "Zone3",
                        "StageType": "Work"
                      },
                      "Setpoints": [
                        {
                          "SubZone": "Top",
                          "SetpointType": "Temperature",
                          "Setpoint": 200.0
                        },
                        {
                          "SubZone": "Bottom",
                          "SetpointType": "Temperature",
                          "Setpoint": 220.0
                        },
                        {
                          "SubZone": "WholeZone",
                          "SetpointType": "O2",
                          "Setpoint": 500.0
                        },
                        {
                          "SubZone": "WholeZone",
                          "SetpointType": "Vacuum",
                          "Setpoint": 2.0
                        },
                        {
                          "SubZone": "WholeZone",
                          "SetpointType": "VacuumHoldTime",
                          "Setpoint": 5.0
                        }
                      ]
                    },
                    {
                      "Zone": {
                        "ReflowZoneType": "Cool",
                        "StageSequence": 4,
                        "StageName": "Zone4",
                        "StageType": "Work"
                      },
                      "Setpoints": [
                        {
                          "SubZone": "Top",
                          "SetpointType": "Temperature",
                          "Setpoint": 105.0
                        },
                        {
                          "SubZone": "Bottom",
                          "SetpointType": "Temperature",
                          "Setpoint": 105.0
                        }
                      ]
                    }
                  ]
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.StationParametersModified.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StationParametersModified.ModifiedParameters">
            <summary>
            A list of the paramters that have been modified, along with their new values.
            The Parameter structure is a dynamic structure, and may be of differing types depending on the type of endpoint.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.StationStateChanged">
            <summary>
            Sent by a process endpoint when the production state transitions
            from one state to another per its state model. 
            <para>Example 1 (State change with no related fault):</para>
            <code language="none">
            {
              "OldState": 2200,
              "OldStateDuration": "00:01:25",
              "NewState": 1100,
              "RelatedFault": null
            }
            </code>
            <para></para>
            <para>Example 2 (State change with related fault):</para>
            <code language="none">
            {
              "OldState": 1100,
              "OldStateDuration": "00:00:25",
              "NewState": 5500,
              "RelatedFault": {
                "Cause": "MechanicalFailure",
                "Severity": "Error",
                "FaultCode": "ERROR 3943480",
                "FaultOccurrenceId": "3de0cfce-42f4-4302-982b-96dba4ec3de0",
                "Lane": null,
                "Stage": null,
                "SideLocation": "Unknown",
                "AccessType": "Unknown"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.StationStateChanged.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StationStateChanged.OldState">
            <summary>
            An enumeration indicating the previous state prior to this state change
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StationStateChanged.OldE58State">
            <summary>
            Exposes vendor specific old state code (like 3312, for example) as its equivalent
            Semi E58 enumerated value.
            READ-ONLY HELPER PROPERTY, NOT A DATA PROPERTY.  WILL NOT APPEAR IN JSON DATA.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StationStateChanged.OldStateDuration">
            <summary>
            The amount of time spent in the previous state.  Note:  There may be certain circumstances
            where it is impossible to provide this duration (as in the case of an unexpected power faillure or other extreme events).
            In this case it is acceptable to report a duration of "null", which will be interpreted as "unknown" by the receiver
            of this event.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StationStateChanged.NewState">
            <summary>
            The new state
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StationStateChanged.NewE58State">
            <summary>
            Exposes vendor specific new state code (like 3312, for example), as its equivalent
            Semi E58 enumerated value.
            READ-ONLY HELPER PROPERTY, NOT A DATA PROPERTY.  WILL NOT APPEAR IN JSON DATA.
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.StationStateChanged.RelatedFault">
            <summary>
            In the case of a stoppage, information about the Fault which caused the stoppage.
            Otherwise null.
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.THTInsertion.ComponentsInserted">
            <summary>
            Sent periodically by an THT inserter to indicate the number of insertions which were
            successfully or unsuccessfully completed during the sample time window.
            This sample time window shall not exceed 10 minutes.
            <code language="none">
            {
              "StartTime": "2018-04-06T08:06:46.4471059-04:00",
              "EndTime": "2018-04-06T08:16:46.4471059-04:00",
              "TotalComponentsInserted": 875,
              "TotalComponentsNotInserted": 45
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.THTInsertion.ComponentsInserted.StartTime">
            <summary>
            The start of the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.THTInsertion.ComponentsInserted.EndTime">
            <summary>
            The end of the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.THTInsertion.ComponentsInserted.TotalComponentsInserted">
            <summary>
            The total number of components that were successfully inserted during the sample period
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.THTInsertion.ComponentsInserted.TotalComponentsNotInserted">
            <summary>
            The total number of components that were not successfully inserted during the sample period
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.THTInsertion.NamespaceDoc">
            <summary>
            Specialized messages related to the performance of through-hole insertion equipment
            </summary>
        </member>
        <member name="T:CFX.ResourcePerformance.ToolChanged">
            <summary>
            Sent when a new tool is selected for active use at a production endpoint
            <para>Example 1 (Generic tool change):</para>
            <code language="none">
            {
              "OldTool": null,
              "ReturnedToHolder": null,
              "NewTool": {
                "UniqueIdentifier": "UID23890430",
                "Name": "TorqueWrench_123"
              },
              "LoadedFromHolder": {
                "LocationUniqueIdentifier": "UID238943243243",
                "LocationName": "BIN45",
                "BaseName": null
              }
            }
            </code>
            <para>Example 2 (Nozzle change on SMT placement machine):</para>
            <code language="none">
            {
              "OldTool": null,
              "ReturnedToHolder": null,
              "NewTool": {
                "$type": "CFX.Structures.SMTPlacement.SMTHeadAndNozzle, CFX",
                "HeadId": "HEAD1",
                "HeadNozzleNumber": 1,
                "NozzleType": "TYPE914",
                "UniqueIdentifier": "UID23890430",
                "Name": "NOZZLE234324"
              },
              "LoadedFromHolder": {
                "LocationUniqueIdentifier": "UID238943243243",
                "LocationName": "HOLDER14",
                "BaseName": "NEST2"
              }
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.ResourcePerformance.ToolChanged.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ToolChanged.OldTool">
            <summary>
            The tool that was previously in active use (if any) 
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ToolChanged.ReturnedToHolder">
            <summary>
            The location on the endpoint where the old tool was returned (if any)
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ToolChanged.NewTool">
            <summary>
            The new active tool
            </summary>
        </member>
        <member name="P:CFX.ResourcePerformance.ToolChanged.LoadedFromHolder">
            <summary>
            The location on the endpoint from which the newly active tool was selected 
            </summary>
        </member>
        <member name="T:CFX.Sensor.Identification.IdentifiersNotRead">
            <summary>
            Sent by an identification device (barcode scanner, RFID reader, etc.) when the device attempts to read or interpret
            an identifier, but is unable to do so.
            <para></para>
            <para>Example 1 (Simple, single barcode read)</para>
            <para></para>
            <code language="none">
            {
              "PositionsNotRead": []
            }
            </code>
            <para>Example 2 (Camera system capable of reading all barcodes on a multi-circuit PCB panel)</para>
            <code language="none">
            {
              "PositionsNotRead": [
                2,
                8
              ]
            }
            </code>
            <para></para>
            </summary>
        </member>
        <member name="M:CFX.Sensor.Identification.IdentifiersNotRead.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifiersNotRead.PositionsNotRead">
            <summary>
            And optional property indicated the position that cannot be read.  Used in the case that multiple 
            production units are moving through the process, and the sensor is capable if reading multiple identifiers.
            </summary>
        </member>
        <member name="T:CFX.Sensor.Identification.IdentifiersRead">
            <summary>
            Sent by an identification device (barcode scanner, RFID reader, etc.) when the device has identified one or more items
            <para>Example 1 (Simple, single barcode read)</para>
            <code language="none">
            {
              "PrimaryIdentifier": "CARRIER21342",
              "Units": null
            }
            </code>
            <para>Example 2 (Camera system capable of reading all barcodes on a multi-circuit PCB panel)</para>
            <code language="none">
            {
              "PrimaryIdentifier": "CARRIER21342",
              "Units": [
                {
                  "UnitIdentifier": "CARRIER21342",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "CARRIER21342",
                  "PositionNumber": 2,
                  "PositionName": "CIRCUIT2",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 90.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifiersRead.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifiersRead.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifiersRead.Units">
            <summary>
            An optional list of actual production unit identifiers, in the case that multiple production units are moving through the 
            process, and the sensor is capable if reading multiple identifiers. 
            </summary>
        </member>
        <member name="T:CFX.Sensor.Identification.IdentifyUnitsRequest">
            <summary>
            Sent by a process endpoint to a unit identification device (such as a barcode scanner or RFID reader)
            to request the most recently scanned unit identifiers.
            <code language="none">
            {}
            </code>
            </summary>
        </member>
        <member name="T:CFX.Sensor.Identification.IdentifyUnitsResponse">
            <summary>
            Response from a unit identification device (such as a barcode scanner or RFID reader)
            to a process endpoint which contains the most recently scanned unit identifiers.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": "OK"
              },
              "PrimaryIdentifier": "CARRIER21342",
              "Units": [
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT1",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 0.0,
                  "FlipX": false,
                  "FlipY": false
                },
                {
                  "UnitIdentifier": "CARRIER5566",
                  "PositionNumber": 1,
                  "PositionName": "CIRCUIT2",
                  "X": 50.45,
                  "Y": 80.66,
                  "Rotation": 90.0,
                  "FlipX": false,
                  "FlipY": false
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.Sensor.Identification.IdentifyUnitsResponse.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifyUnitsResponse.Result">
            <summary>
            The result of the request
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifyUnitsResponse.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifyUnitsResponse.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifyUnitsResponse.Units">
            <summary>
            An optional list of actual production unit identifiers, in the case that multiple production units are moving through the 
            process, and the sensor is capable if reading multiple identifiers. 
            </summary>
        </member>
        <member name="T:CFX.Sensor.Identification.NamespaceDoc">
            <summary>
            Messages for devices that are responsible to reading or scanning identification labels or tags (barcodes, RFID’s, machine vision systems, etc.).
            </summary>
        </member>
        <member name="T:CFX.Sensor.NamespaceDoc">
            <summary>
            CFX Topic related to endpoints which measure or detect conditions
            </summary>
        </member>
        <member name="T:CFX.Structures.AccessType">
            <summary>
            The Access Type is giving an indication for the line engineer if the fault, error or warning messages in the fault object
            can be handled via a remote terminal session to the equipment
            </summary>
        </member>
        <member name="F:CFX.Structures.AccessType.Unknown">
            <summary>
            Access Type for this fault is unknown 
            </summary>
        </member>
        <member name="F:CFX.Structures.AccessType.Ignore">
            <summary>
            Ignore Assist access type. This is typically an assist which is shown on the station GUI when the operator is working
            physically on the machine. These Assists can be ignored by the external system. They are sent anyways exterbal system
            can decide to redefine the access type to local or remote. 
            </summary>
        </member>
        <member name="F:CFX.Structures.AccessType.Local">
            <summary>
            Local assist (somebody needs to go physically to the location) 
            </summary>
        </member>
        <member name="F:CFX.Structures.AccessType.Remote">
            <summary>
            Remote assist (issue can be resolved by remote terminal session on the station GUI) 
            </summary>
        </member>
        <member name="T:CFX.Structures.Activity">
            <summary>
            Dynamic structure base class.  Describes an activity that was performed in the course of processing one or more
            production units.  Different endpoints may produce more specific structures derived from this generic Activity structure.
            </summary>
        </member>
        <member name="M:CFX.Structures.Activity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Activity.TimeStamp">
            <summary>
            The time when the activity transitioned to the state specified by the
            ActivityState property.
            </summary>
        </member>
        <member name="P:CFX.Structures.Activity.ActivityInstanceId">
            <summary>
            An id uniquely identfying a particular instance of an activity.  If the same activity occurs x times, each
            instance shall have a unique identifier.
            </summary>
        </member>
        <member name="P:CFX.Structures.Activity.ActivityState">
            <summary>
            The current state of the activity (started, completed, etc.).
            </summary>
        </member>
        <member name="P:CFX.Structures.Activity.ActivityName">
            <summary>
            The name of the activity.
            </summary>
        </member>
        <member name="P:CFX.Structures.Activity.Comments">
            <summary>
            Optional free-form comments associated with the activity.
            </summary>
        </member>
        <member name="P:CFX.Structures.Activity.ValueAddType">
            <summary>
            An enumeration describing the value-add nature of an activity or process.
            </summary>
        </member>
        <member name="T:CFX.Structures.ActivityState">
            <summary>
            Describes the state of an activity.
            </summary>
        </member>
        <member name="F:CFX.Structures.ActivityState.Started">
            <summary>
            The activity has started, but is not yet complete.
            </summary>
        </member>
        <member name="F:CFX.Structures.ActivityState.Aborted">
            <summary>
            The activity was aborted.
            </summary>
        </member>
        <member name="F:CFX.Structures.ActivityState.Completed">
            <summary>
            The activity successfullly completed.
            </summary>
        </member>
        <member name="F:CFX.Structures.ActivityState.On">
            <summary>
            The item/activity has switched ON
            </summary>
        </member>
        <member name="F:CFX.Structures.ActivityState.Off">
            <summary>
            The item/activity has switched OFF
            </summary>
        </member>
        <member name="T:CFX.Structures.ActorType">
            <summary>
            Types of Operators
            </summary>
        </member>
        <member name="F:CFX.Structures.ActorType.Human">
            <summary>
            A human being is performing the operation
            </summary>
        </member>
        <member name="F:CFX.Structures.ActorType.Robot">
            <summary>
            A robotic / automated device is performing the operation
            </summary>
        </member>
        <member name="F:CFX.Structures.ActorType.RemoteSystem">
            <summary>
            A remote system or artificial intelligence entity is performing the operation
            </summary>
        </member>
        <member name="T:CFX.Structures.BadElectricalTestRejectionDetails">
            <summary>
            Describes details on an bad electrical test of a component
            </summary>
        </member>
        <member name="M:CFX.Structures.BadElectricalTestRejectionDetails.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:CFX.Structures.BadOpticalTestRejectionDetails">
            <summary>
            Describes details on a bad optical test
            </summary>
        </member>
        <member name="M:CFX.Structures.BadOpticalTestRejectionDetails.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:CFX.Structures.BadPressureTestRejectionDetails">
            <summary>
            Describes details on a bad pressure test
            </summary>
        </member>
        <member name="M:CFX.Structures.BadPressureTestRejectionDetails.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:CFX.Structures.BadVisionTestRejectionDetails">
            <summary>
            Describes details on a bad vision test
            </summary>
        </member>
        <member name="M:CFX.Structures.BadVisionTestRejectionDetails.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:CFX.Structures.BlockReason">
            <summary>
            Reasons why a unit is blocked
            </summary>
        </member>
        <member name="F:CFX.Structures.BlockReason.Unspecified">
            <summary>
            No reason specified
            </summary>
        </member>
        <member name="F:CFX.Structures.BlockReason.SuspectedProblem">
            <summary>
            There exists suspicion that the material or unit may be defective or otherwise problematic
            </summary>
        </member>
        <member name="F:CFX.Structures.BlockReason.Defective">
            <summary>
            The material or unit is known to be defective.
            </summary>
        </member>
        <member name="F:CFX.Structures.BlockReason.ExpiredMaterial">
            <summary>
            A material has expired, and can no longer be utilized.
            </summary>
        </member>
        <member name="F:CFX.Structures.BlockReason.ExpiredTool">
            <summary>
            A tool has expired, and can no longer be utilized.
            </summary>
        </member>
        <member name="T:CFX.Structures.BooleanMeasurement">
            <summary>
            Describes a measurement that was made by a human or by automated equipment
            in the course of inspecting or testing a production unit in which the result
            of the measurement is a boolean (true / fales) value.
            </summary> 
        </member>
        <member name="P:CFX.Structures.BooleanMeasurement.Value">
            <summary>
            The actual resulting value of this measurement
            </summary>
        </member>
        <member name="P:CFX.Structures.BooleanMeasurement.ExpectedValue">
            <summary>
            The expected value of this measurement
            </summary>
        </member>
        <member name="T:CFX.Structures.Calibration">
            <summary>
            A dynamic structure describing a calibration event.
            </summary>
        </member>
        <member name="P:CFX.Structures.Calibration.CalibrationCode">
            <summary>
            A vendor-specific string based code identifying the specific calibration performed
            </summary>
        </member>
        <member name="P:CFX.Structures.Calibration.CalibrationType">
            <summary>
            An enumeration indicated the type of calibration that was performed
            </summary>
        </member>
        <member name="P:CFX.Structures.Calibration.Comments">
            <summary>
            Free form comments related to this particular calibration
            </summary>
        </member>
        <member name="P:CFX.Structures.Calibration.Status">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Describes the status of the calibration that was performed (e.g. Undefined, Failed, Ok)
            </summary>
        </member>
        <member name="P:CFX.Structures.Calibration.CalibrationTime">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Optional, when the calibration was performed
            </summary>
        </member>
        <member name="T:CFX.Structures.CalibrationType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Types of calibrations
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.Unkwnown">
            <summary>
            Unknown calibration type
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.General">
            <summary>
            Specified when the calibration cannot be characterized by one of the other
            options of this enumeration
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.XAxis">
            <summary>
            The X Axis of a robotic / automated device has been calibrated
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.YAxis">
            <summary>
            The Y Axis of a robotic / automated device has been calibrated
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.ZAxis">
            <summary>
            The Z Axis of a robotic / automated device has been calibrated
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.UnitPosition">
            <summary>
            The robotic / automated device has calibrated the location of a 
            production unit (typically using reference/fiducial marks, but also
            potentially by other means)
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.TravelRange">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The robotic / automated device has calibrated the travel range
            of a part (typically head)
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.SystemIdentification">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The robotic / automated device has calibrated the identification system
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.ZeroPointOffset">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The robotic / automated device has calibrated the zero reference position
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.BoardCamera">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Camera reading the board
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.FeedUnitsTable">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Unit feed table
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.NozzleChanger">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Changer of the nozzle
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.BoardReferenceCorner">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Corner reference for the vboard
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.ComponentSensorCamera">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Component sensor camera
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.SegmentOffset">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Offset
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.ComponentSensorLightBarrier">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Barrier for the light sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.ZeroPressure">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Pressure
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.BoardMapping">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Mapping of the board 
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.HeadMapping">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Mapping of the head
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.HeadsAndCameras">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Head and camera
            </summary>
        </member>
        <member name="F:CFX.Structures.CalibrationType.VacuumTooling">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Vacuum tool
            </summary>
        </member>
        <member name="T:CFX.Structures.Camera">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Camera resource in an Endpoint. It may have a lifecycle independent
            from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.Characteristic">
            <summary>
            A singular characteristic that has been applied to a production unit
            </summary>
        </member>
        <member name="P:CFX.Structures.Characteristic.Name">
            <summary>
            The name of the characteristic
            </summary>
        </member>
        <member name="P:CFX.Structures.Characteristic.Value">
            <summary>
            The value of the characteristic
            </summary>
        </member>
        <member name="T:CFX.Structures.Cleaning.CleaningManagementData">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Data for dome legacy cleaning equipment, which cannot be equipped with a messaging interface.
            However, such equipment can be extended with a stand-alone Cleaning Agent Concentration Management System 
            to take care of controlling and monitoring of the cleaning liquids.
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningManagementData.Readings">
            <summary>
            A list of readings / measurements that have been taken for this cleaning step
            </summary>
        </member>
        <member name="T:CFX.Structures.Cleaning.CleaningProcessData">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Data for the cleaning process, applied to production units – this is the defluxing process – and tools, e.g. squeegees, stencils, etc.
            The defluxing process removes flux-deposits after reflow and takes care of cleaning 
            a production unit or a batch of production units. Cleaning of tools removes deposits, 
            e.g.solder paste, from tools, so that they can continued to be used.
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningProcessData.ConveyorSpeed">
            <summary>
            The speed (in cm / minute) of the conveyor
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningProcessData.CleaningTimeSet">
            <summary>
            Cleaning time as specified in recipe expressed in seconds (s)
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningProcessData.CleaningTimeActual">
            <summary>
            Actual cleaning time expressed in seconds (s)
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningProcessData.CleaningSteps">
            <summary>
            A list of cleaning steps
            </summary>
        </member>
        <member name="T:CFX.Structures.Cleaning.CleaningReading">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Cleaning readings / measurements that have been taken during the cleaning process
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningReading.ReadingType">
            <summary>
            The type of reading 
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningReading.ReadingValue">
            <summary>
            The value of the reading (expressed in the appropriate units for the ReadingType)
            </summary>
        </member>
        <member name="T:CFX.Structures.Cleaning.CleaningReadingType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            An enumeration indicating the type of cleaning reading
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.BottomSprayBarsPressure">
            <summary>
            Bottom spray bars pressure reading, expressed in Pascals (Pa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.BottomWaterKnifePressure">
            <summary>
            Bottom water knife pressure reading, expressed in Pascals (Pa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.CleaningChemistryVolumeAdd">
            <summary>
            Volume of cleaning chemistry added by the system, expressed in liter (l)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.ConcentrationMin">
            <summary>
            min concentration reading, as a percentage from 0.0 to 100.0 (%)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.ConcentrationMax">
            <summary>
            max concentration reading, as a percentage from 0.0 to 100.0 (%)
            </summary>    
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.ConcentrationAverage">
            <summary>
            average concentration reading, as a percentage from 0.0 to 100.0 (%)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.ConductivityMin">
            <summary>
            min conductivity reading, expressed in (uS/cm)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.ConductivityMax">
            <summary>
            max conductivity reading, expressed in (uS/cm)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.ConductivityAverage">
            <summary>
            average conductivity reading, expressed in (uS/cm)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.DIWaterVolumeAdd">
            <summary>
            Volume of DI water added by the system, expressed in liter (l)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.FlowRateMin">
            <summary>
            min flow rate reading, expressed in liter per minute (l/min)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.FlowRateMax">
            <summary>
            max flow rate reading, expressed in liter per minute (l/min)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.FlowRateAverage">
            <summary>
            average flow rate reading, expressed in liter per minute (l/min)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.LiquidConductivityMin">
            <summary>
            min liquid conductivity reading, expressed in (uS/cm)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.LiquidConductivityMax">
            <summary>
            max liquid conductivity reading, expressed in (uS/cm)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.LiquidConductivityAverage">
            <summary>
            average liquid conductivity reading, expressed in (uS/cm)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.LiquidSaturationMin">
            <summary>
            min liquid saturation reading, as a percentage from 0.0 to 100.0 (%)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.LiquidSaturationMax">
            <summary>
            max liquid saturation reading, as a percentage from 0.0 to 100.0 (%)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.LiquidSaturationAverage">
            <summary>
            average liquid saturation reading, as a percentage from 0.0 to 100.0 (%)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.PressureMin">
            <summary>
            min liquid pressure reading, expressed in Pascals (Pa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.PressureMax">
            <summary>
            max liquid pressure reading, expressed in Pascals (Pa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.PressureAverage">
            <summary>
            average liquid pressure reading, expressed in Pascals (Pa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.RefreshWaterAmount">
            <summary>
            amount of refresh water, expressed in liter (l)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.TemperatureMin">
            <summary>
            min temperature reading, expressed in degrees Celsius (C)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.TemperatureMax">
            <summary>
            max temperature reading, expressed in degrees Celsius (C)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.TemperatureAverage">
            <summary>
            average temperature reading, expressed in degrees Celsius (C)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.TopSprayBarsPressure">
            <summary>
            Top spray bars pressure reading, expressed in Pascals (Pa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.TopWaterKnifePressure">
            <summary>
            Top water knife pressure reading, expressed in Pascals (Pa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.UltrasonicPowerMin">
            <summary>
            min ultrasonic power reading, expressed in Watt (W)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.UltrasonicPowerMax">
            <summary>
            max ultrasonic power reading, expressed in Watt (W) 
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.UltrasonicPowerAverage">
            <summary>
            average ultrasonic power reading, expressed in Watt (W)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.Vacuum">
            <summary>
            vacuum reading, expressed in Pascals (Pa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningReadingType.VFDFrequency">
            <summary>
            frequency of Variable Frequency Drive, expressed in Hertz (Hz)
            </summary>
        </member>
        <member name="T:CFX.Structures.Cleaning.CleaningState">
            <summary>
            Cleaning states (e.g., used by stencil, squeegee)
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningState.Unknown">
            <summary>
            Unknown cleaning status
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningState.Cleaned">
            <summary>
            Tool cleaned
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningState.NotCleaned">
            <summary>
            Tool not cleaned
            </summary>
        </member>
        <member name="T:CFX.Structures.Cleaning.CleaningStep">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Cleaning step of the cleaning process
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningStep.CleaningStepType">
            <summary>
            Cleaning step type
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningStep.CleaningStepTime">
            <summary>
            Elapsed time for cleaning step expressed in seconds (s)
            </summary>
        </member>
        <member name="P:CFX.Structures.Cleaning.CleaningStep.Readings">
            <summary>
            A list of readings / measurements that have been taken for this cleaning step
            </summary>
        </member>
        <member name="T:CFX.Structures.Cleaning.CleaningStepType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            An enumeration indicating the type of cleaning step
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningStepType.PreWash">
            <summary>
            Cleaning step pre-wash
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningStepType.Wash">
            <summary>
            Cleaning step wash
            </summary>    
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningStepType.PreRinse">
            <summary>
            Cleaning step pre-rinse
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningStepType.Rinse">
            <summary>
            Cleaning step rinse
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningStepType.FinalRinse">
            <summary>
            Cleaning step final rinse
            </summary>
        </member>
        <member name="F:CFX.Structures.Cleaning.CleaningStepType.Dry">
            <summary>
            Cleaning step dry
            </summary>
        </member>
        <member name="T:CFX.Structures.Coating.CoatingMeasurement">
            <summary>
            Structure that describes the a particular measurement / reading that was taken by a coating or encapsulation
            endpoint in the course of dispensing.
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingMeasurement.MeasurementType">
            <summary>
            The type of reading
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingMeasurement.ActualValue">
            <summary>
            The value of the reading (expressed in the appropriate units for the ReadingType).
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingMeasurement.ExpectedValue">
            <summary>
            The nominal or expected value for this reading (expressed in the appropriate units for the ReadingType).
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingMeasurement.MinAcceptableValue">
            <summary>
            The minimum accecptable value for this reading (expressed in the appropriate units for the ReadingType).
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingMeasurement.MaxAcceptableValue">
            <summary>
            The maximum acceptable value for this reading (expressed in the appropriate units for the ReadingType).
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingMeasurement.Axis">
            <summary>
            An optional axis position describing the direction in which the coating or encapsulation nozzle displaced.
            Examples:  AxisX, AxisY,AxisZ.
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingMeasurement.FluidPressure">
            <summary>
            An optional  positive integer for Fluidpressure measurement type of the coating or encapsulation nozzle in case of second pressure pump is used
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            /// </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingMeasurement.NozzleWidth">
            <summary>
            An optional  NozzleWidth measurement type of the coating or encapsulation nozzle
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            /// </summary>
        </member>
        <member name="T:CFX.Structures.Coating.CoatingMeasurementType">
            <summary>
            An enumeration indicating the type of measurement made within a coating or encapsulation machine.
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingMeasurementType.FluidPressure">
            <summary>
            The pressure of the coating or encapsulation nozzle, expressed in kilo Pascals (kPa)
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingMeasurementType.FluidVolume">
            <summary>
            The total volume of fluid dispensed, expressed in cubic centimeters (cc)
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingMeasurementType.Heater">
            <summary>
            The Heating value of the coating or encapsulation nozzle, expressed in grad
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingMeasurementType.Monitor">
            <summary>
            The Heating value of the coating or encapsulation nozzle measured through sensor, expressed in grad
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingMeasurementType.Axis">
            <summary>
            The axis position describing the direction in which the coating or encapsulation nozzle displaced, expressed in millimeter(mm)
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingMeasurementType.Fluidweight">
            <summary>
            The total volume of fluid tested after n number of units processed, expressed in grams (g)
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingMeasurementType.MaterialLevel">
            <summary>
            The level of fluid tested from the container or Beaker, expressed in millimeter(mm)
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingMeasurementType.NozzleWidth">
            <summary>
            The Width of adjustable Nozzle Eg. Curtain Nozzle, expressed in millimeter(mm)
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.Coating.CoatingNozzle">
            <summary>
            A specialized type of Stage that represents a Nozzle within a Coating Machine.
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="M:CFX.Structures.Coating.CoatingNozzle.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingNozzle.CoatingNozzleType">
            <summary>
            The type/purpose of this Nozzle.
            </summary>
        </member>
        <member name="T:CFX.Structures.Coating.CoatingNozzleData">
            <summary>
            Provides information about the conditions of a particular Nozzle of a Coating machine at a given point in time.
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="M:CFX.Structures.Coating.CoatingNozzleData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingNozzleData.Nozzle">
            <summary>
            Coating Nozzle to which this coating data is related.
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingNozzleData.NozzleReadings">
            <summary>
             A list of readings / measurements that have been taken for this Nozzle.
            </summary>
        </member>
        <member name="T:CFX.Structures.Coating.CoatingNozzleType">
            <summary>
            An enumeration indicating the nature of a Nozzle within a Coating Machine
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingNozzleType.Jetter">
            <summary>
            This is a Jetter Nozzle.
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingNozzleType.Dispensing">
            <summary>
            The is a Dispensing Nozzle.
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingNozzleType.Curtain">
            <summary>
            The is a Type of Film Coater.
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingNozzleType.Spray">
            <summary>
            The is a Type of Film Coater.
            </summary>
        </member>
        <member name="F:CFX.Structures.Coating.CoatingNozzleType.Doser">
            <summary>
            The is a Type of Film Coater.
            </summary>
        </member>
        <member name="T:CFX.Structures.Coating.CoatingProcessData">
            <summary>
            A dynamic data structure representing data that was collected during a coating process.
            </summary>
        </member>
        <member name="M:CFX.Structures.Coating.CoatingProcessData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingProcessData.Readings">
            <summary>
            A list of measurements that were taken in the course of the coating or encapsulation operation.
            </summary>
        </member>
        <member name="P:CFX.Structures.Coating.CoatingProcessData.Nozzle">
            <summary>
            Process data (temperatures, etc.) for each Nozzle of the Coating machine at the 
            time when this transaction tool place.
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.Coating.EncapsulationProcessData">
            <summary>
            A dynamic data structure representing data that was collected during an encapsulation process.
            </summary>
        </member>
        <member name="M:CFX.Structures.Coating.EncapsulationProcessData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:CFX.Structures.ComponentDesignator">
            <summary>
            Represents and identifies a particular component (instance of a part) on a production unit, or a particular aspect
            of a particular component, such as an individual pin of an electronic component.
            </summary>
        </member>
        <member name="M:CFX.Structures.ComponentDesignator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentDesignator.ReferenceDesignator">
            <summary>
            A dot (".") and comma (",") delimeted string identifying a particular component on a production unit.  
            
            Examples:
            
            C34
            U2.11  (component U2, Pin 11)
            U2.1-45 (component U2, Pins 1 to 45)
            U2.1,2 (component U2, Pins 1 and 2)
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentDesignator.UnitPosition">
            <summary>
            Identifies the related production unit
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentDesignator.PartNumber">
            <summary>
            The internal part number of the designated component.
            </summary>
        </member>
        <member name="T:CFX.Structures.ComponentElectricalTest">
            <summary>
            Describes details on an electrical test of a component
            </summary>
        </member>
        <member name="M:CFX.Structures.ComponentElectricalTest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentElectricalTest.TesterSerialNumber">
            <summary>
            Serial number of the electrical tester
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentElectricalTest.Frequency">
            <summary>
            Frequency used for the measure (Hertz)
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentElectricalTest.ExpectedValue">
            <summary>
            Electrical expected value
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentElectricalTest.MeasuredValue">
            <summary>
            Electrical measured value
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentElectricalTest.ToleranceMin">
            <summary>
            Minimum electrical measure tolerance
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentElectricalTest.ToleranceMax">
            <summary>
            Maximum electrical measure tolerance
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentElectricalTest.Unit">
            <summary>
            Unit used for the Expected value, the Mesasured value, and the Tolerances
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentElectricalTest.Result">
            <summary>
            Result of the electrical test (true if OK)
            </summary>
        </member>
        <member name="T:CFX.Structures.ComponentElectricalTestUnit">
            <summary>
            Unit used for an electrical test
            </summary>
        </member>
        <member name="F:CFX.Structures.ComponentElectricalTestUnit.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:CFX.Structures.ComponentElectricalTestUnit.Ohm">
            <summary>
            Ohm (for resistors)
            </summary>
        </member>
        <member name="F:CFX.Structures.ComponentElectricalTestUnit.Farad">
            <summary>
            Farad (for capacitors)
            </summary>
        </member>
        <member name="F:CFX.Structures.ComponentElectricalTestUnit.Henry">
            <summary>
            Henry (for inductors)
            </summary>
        </member>
        <member name="F:CFX.Structures.ComponentElectricalTestUnit.Volt">
            <summary>
            Volt (for diodes)
            </summary>
        </member>
        <member name="F:CFX.Structures.ComponentElectricalTestUnit.Hertz">
            <summary>
            Hertz
            </summary>
        </member>
        <member name="F:CFX.Structures.ComponentElectricalTestUnit.Watt">
            <summary>
            Watt
            </summary>
        </member>
        <member name="T:CFX.Structures.ComponentOpticalTest">
            <summary>
            Describes details on an optical test of a component
            </summary>
        </member>
        <member name="M:CFX.Structures.ComponentOpticalTest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentOpticalTest.ExpectedValue">
            <summary>
            Optical expected value
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentOpticalTest.MeasuredValue">
            <summary>
            Optical measured value
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentOpticalTest.ToleranceMin">
            <summary>
            Minimum optical measure tolerance
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentOpticalTest.ToleranceMax">
            <summary>
            Maximum optical measure tolerance
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentOpticalTest.Unit">
            <summary>
            Unit used for the Expected value, the Mesasured value, and the Tolerances
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentOpticalTest.Result">
            <summary>
            Result of the optical test (true if OK)
            </summary>
        </member>
        <member name="T:CFX.Structures.ComponentPressureTest">
            <summary>
            Describes details on a pressure test of a component
            </summary>
        </member>
        <member name="M:CFX.Structures.ComponentPressureTest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentPressureTest.ExpectedValue">
            <summary>
            Pressure expected value
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentPressureTest.MeasuredValue">
            <summary>
            Pressure measured value
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentPressureTest.ToleranceMin">
            <summary>
            Minimum pressure measure tolerance
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentPressureTest.ToleranceMax">
            <summary>
            Maximum pressure measure tolerance
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentPressureTest.Unit">
            <summary>
            Unit used for the Expected value, the Mesasured value, and the Tolerances
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentPressureTest.Result">
            <summary>
            Result of the pressure test (true if OK)
            </summary>
        </member>
        <member name="T:CFX.Structures.ComponentVisionTest">
            <summary>
            Describes details on a vision test of a component
            </summary>
        </member>
        <member name="M:CFX.Structures.ComponentVisionTest.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentVisionTest.InformationId">
            <summary>
            If of the measured information
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentVisionTest.ExpectedValue">
            <summary>
            Vision expected value
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentVisionTest.MeasuredValue">
            <summary>
            Vision measured value
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentVisionTest.ToleranceMin">
            <summary>
            Minimum vision measure tolerance
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentVisionTest.ToleranceMax">
            <summary>
            Maximum vision measure tolerance
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentVisionTest.Unit">
            <summary>
            Unit used for the Expected value, the Mesasured value, and the Tolerances
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentVisionTest.Result">
            <summary>
            Result of the vision test (true if OK)
            </summary>
        </member>
        <member name="T:CFX.Structures.ConsumedMaterial">
            <summary>
            Describes an event where material is consumed in the course of production.
            </summary>
        </member>
        <member name="M:CFX.Structures.ConsumedMaterial.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ConsumedMaterial.MaterialLocation">
            <summary>
            The location on the process endpoint from which the material was consumed.
            Also identifies the specific material package from which the material was 
            consumed (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.ConsumedMaterial.QuantityUsed">
            <summary>
            The quantity of material that was consumed for value-added purposes
            </summary>
        </member>
        <member name="P:CFX.Structures.ConsumedMaterial.QuantitySpoiled">
            <summary>
            The quantity of material that was spoiled (consumed, but not for value-added purposes)
            </summary>
        </member>
        <member name="P:CFX.Structures.ConsumedMaterial.RemainingQuantity">
            <summary>
            The quantity of material remaining in the material package after the consumption event
            </summary>
        </member>
        <member name="T:CFX.Structures.Conveyor">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Conveyor resource in an Endpoint. It may have a lifecycle independent
            from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.DataType">
            <summary>
            Types of data
            </summary>
        </member>
        <member name="F:CFX.Structures.DataType.String">
            <summary>
            Text based data
            </summary>
        </member>
        <member name="F:CFX.Structures.DataType.StringList">
            <summary>
            A list of text based data
            </summary>
        </member>
        <member name="F:CFX.Structures.DataType.Numeric">
            <summary>
            Numeric data (floating point)
            </summary>
        </member>
        <member name="F:CFX.Structures.DataType.Integer">
            <summary>
            Numeric data (integer / non-floating point)
            </summary>
        </member>
        <member name="F:CFX.Structures.DataType.Boolean">
            <summary>
            True or False data
            </summary>
        </member>
        <member name="F:CFX.Structures.DataType.Enumeration">
            <summary>
            A single value selected from a list of possibilities
            </summary>
        </member>
        <member name="F:CFX.Structures.DataType.Binary">
            <summary>
            An array of bytes
            </summary>
        </member>
        <member name="F:CFX.Structures.DataType.Guid">
            <summary>
            A 128-bit globallyt unique integer based numeric value
            </summary>
        </member>
        <member name="T:CFX.Structures.Defect">
            <summary>
            Describes a defect that was discovered on a production unit
            </summary>
        </member>
        <member name="M:CFX.Structures.Defect.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.UniqueIdentifier">
            <summary>
            A unique identifier for this particular defect instance
            (new and unique each time a new defect is discovered).
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.DefectCode">
            <summary>
            A code identifying the type of defect
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.DefectCategory">
            <summary>
            An optional defect category for this particular type of defect
              The defect that led to the faulty feature, determined manually during verification.
              Suggested values are:
              - ClearenceSurfaceError
              - ComponentDefective
              - ComponentMissing
              - ComponentRotated
              - ComponentShifted
              - ComponentTilted
              - ConformalCoatingError
              - Contamination
              - ExcessiveSolder
              - FaceDownComponent
              - InsufficientSolder
              - LiftedLead
              - Miscellaneous
              - PasteShort
              - PinMissing
              - PinShifted
              - ReferencePlaneError
              - ShiftedPaste
              - Short
              - Solderball
              - SolderDefect
              - SolderPasteDefect
              - Tombstone
              - WrongCode
              - WrongComponent
              - WrongComponentHeight
              - WrongPasteArea
              - WrongPasteHeight
              - WrongPasteVolume
              - WrongPinHeight
              - WrongPolarity
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.Description">
            <summary>
            A human friendly description of the defect
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.Comments">
            <summary>
            Optional comments from the inspector who discovered this defect
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.ComponentOfInterest">
            <summary>
            An optional component or specific component pins related to this defect.
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.RegionOfInterest">
            <summary>
            An optional location or area on the production unit where the defect is located 
            (for cases where there is no specific component related, such as a scratch or 
            cosmetic defect).
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.DefectImages">
            <summary>
            One of more pictures/images of the defect
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.Priority">
            <summary>
            The priority of this defect as compared to other defects discovered for this unit.
            A priority of 1 indicates the highest priority.
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.ConfidenceLevel">
            <summary>
            A floating-point number from 1 to 100 indicating the level of confidence
            in the validity of this defect.  Intended to be used by humans that screen
            the results of inspections made by automated inspection equipment, 
            which may produce false defects from time to time.
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.RelatedMeasurements">
            <summary>
            A list of measurements that were taken in the course of discovering this defect
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.RelatedSymptoms">
            <summary>
            A list of symptoms that were discovered in the course of identifying this defect.
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.Verification">
            <summary>
            The overall result of the verification of the measurement
            </summary>
        </member>
        <member name="P:CFX.Structures.Defect.VerificationDetail">
            <summary>
            When a verification took place, the VerificationDetail will contain a classification or more detailed description
            of the root cause of the defect or why the defect is a false fail.
            This description is typically maintained by the customer and the operator will choose from a predefined list.
            </summary>
        </member>
        <member name="T:CFX.Structures.Depaneling.Axis">
            <summary>
            Represents an axis on a depaneling / router type machine.
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="M:CFX.Structures.Depaneling.Axis.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.Axis.AxisName">
            <summary>
            Name of the Axis 
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.Axis.ActualAxisSpeed">
            <summary>
            Max axis speed in mm/s
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.Axis.AxisAcceleration_SetValue">
            <summary>
            Set value in (mm/s2)
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.Axis.AxisDecceleration_SetValue">
            <summary>
            Set value in (mm/s2)
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.Axis.ActualMaxVelocity">
            <summary>
            Operating at Maximum speed.
            </summary>
        </member>
        <member name="T:CFX.Structures.Depaneling.RouterToolProcessData">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Provides information about the processing conditions for a depaneling machine at the time when a unit was processed.
            </summary>
        </member>
        <member name="M:CFX.Structures.Depaneling.RouterToolProcessData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ToolDataVersion">
            <summary>
            Tool Data -Version
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ToolDiameter_SetPoint">
            <summary>
            Machine set point Value- tool bit diameter (in mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ToolBitStartTime">
            <summary>
            Tool bit start used time
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ToolBitEndTime">
            <summary>
            Last Tool bit stop used time
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ToolBitDistanceRouted">
            <summary>
            Distance of ALL tabs cut since last Bit Change 
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ToolBitChangeDistanceAlarmSet">
            <summary>
            Alarm set to optimal distance for bit change
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.NumberOfBoardsRouted">
            <summary>
            Panel count for batch/period routed
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.FeedRate_SetPoint">
            <summary>
            Machine set point - feed rate routing program (in mm/s)
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.VacuumDistanceRouted">
            <summary>
            Distance of ALL tabs cut since last bag/filter change in (in Meter).
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.VacuumFilterChangeDistanceAlarmSet">
            <summary>
            Alarm set to optimal distance for filter change in (Meter).
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ActualVacuumLevel">
            <summary>
            Vacuum or Negative Pressure Level
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ActualIncomingPressure">
            <summary>
            Incoming Air Pressure Level
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ActualMachinePower">
            <summary>
            Electric Power consumption of Machine
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.ActualGripperForcePickAndPlace">
            <summary>
            Max gripper force applied to PCB. (N)(Optional only-Applicable for gripper hardware equipment type)
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.SpindleSpeed_SetPoint">
            <summary>
            Machine set point – Spindle Speed (in mm/s)
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.MinSpindleRpm">
            <summary>
            Min Speed at which the Spindle operates - RPM (Revolutions per minute)
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.MaxSpindleRpm">
            <summary>
            Max Speed at which the Spindle operates - RPM (Revolutions per minute)
            </summary>
        </member>
        <member name="P:CFX.Structures.Depaneling.RouterToolProcessData.AxisDetails">
            <summary>
            List of Axis for Router
            </summary>
        </member>
        <member name="T:CFX.Structures.DimensionalConstraints">
            <summary>
            Describes the maximum and mininum dimensions and weight that a production unit is permitted
            to be in order to be processed at a particular endpoint.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MinimumLength">
            <summary>
            The minimum dimension that a unit may be in the X axis,
            that is in the direction of flow of the conveyor.  Expressed in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MaximumLength">
            <summary>
            The maximum dimension that a unit may be in the X axis,
            that is in the direction of flow of the conveyor.  Expressed in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MinimumWidth">
            <summary>
            The minimum dimension that a unit may be in the Y axis,
            that is perpendicular to the direction of flow of the conveyor. Expressed in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MaximumWidth">
            <summary>
            The maximum dimension that a unit may be in the Y axis,
            that is perpendicular to the direction of flow of the conveyor. Expressed in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MinimumHeight">
            <summary>
            The minimum height (Z dimension) that a unit may be to be processed by this endpoint.
            Expressed in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MaximumHeight">
            <summary>
            The maximum height (Z dimension) that a unit may be to be processed by this endpoint.
            Expressed in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MinimumWeight">
            <summary>
            The minimum weight that a unit may be to be processed by this endpoint.
            Expressed in grams.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MaximumWeight">
            <summary>
            The maximum weight that a unit may be to be processed by this endpoint.
            Expressed in grams.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MinimumThickness">
            <summary>
            The minimum thickness that a unit may be to be processed by this endpoint.
            Expressed in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.DimensionalConstraints.MaximumThickness">
            <summary>
            The maximum thickness that a unit may be to be processed by this endpoint.
            Expressed in mm.
            </summary>
        </member>
        <member name="T:CFX.Structures.DisqualificationReason">
            <summary>
            Describes the reason why a production units was disqualified (scrapped)
            </summary>
        </member>
        <member name="F:CFX.Structures.DisqualificationReason.DefectiveRepairNotPossible">
            <summary>
            The unit is defective and cannot be repaired.
            </summary>
        </member>
        <member name="F:CFX.Structures.DisqualificationReason.DefectiveRepairNotFeasible">
            <summary>
            The unit is defective, and a repair is not feasible (for economic or business reasons)
            </summary>
        </member>
        <member name="F:CFX.Structures.DisqualificationReason.DefectiveMaterials">
            <summary>
            The unit contains defective materials.
            </summary>
        </member>
        <member name="T:CFX.Structures.ElectricCard">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Electric card resource in an Endpoint. It may have a lifecycle independent
            from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.Endpoint">
            <summary>
            Describes the details of a particular Endpoint that is participating in a CFX network.
            This is a dynamic structure.
            </summary>
        </member>
        <member name="M:CFX.Structures.Endpoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.CFXHandle">
            <summary>
            The handle of the endpoint that is responding
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.CFXVersion">
            <summary>
            The version of CFX supported / utilized by this endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.RequestNetworkUri">
            <summary>
            The network address / Uri to be used for requests to this endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.RequestTargetAddress">
            <summary>
            The AMQP 1.0 target address to be used for requests to this endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.UniqueIdentifier">
            <summary>
            The barcode, RFID, or other unique identifier that is used to identify this machine / endpoint.
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.FriendlyName">
            <summary>
            The name of the endpoint to be used in GUIs or reporting
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.Vendor">
            <summary>
            The name of the vendor of the endpoint.
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.ModelNumber">
            <summary>
            The model number of the endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.SerialNumber">
            <summary>
            The serial number of the endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.SoftwareVersion">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            The software version of the endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.FirmwareVersion">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            The firmware version of the endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.OperatingSystem">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            The operating system in place at this endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.OperatingSystemPlatform">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            The platform of the operating system in place at this endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.OperatingSystemVersion">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            The firmware version of the endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.Stages">
            <summary>
            Describes the stages (zones) of the endpoint, including buffer stages.
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.NumberOfLanes">
            <summary>
            The number of production lanes of the endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.HermesInformation">
            <summary>
            Contains information related to the Endpoint's support for the Hermes standard.
            If null, the Endpoint does not support Hermes.
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.OperatingRequirements">
            <summary>
            Specifies the operating requirements (environmental, etc.) of a given endpoint.
            May be null if not applicable.
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.SupportedTopics">
            <summary>
            A list of the <see cref="T:CFX.Structures.SupportedTopic"/> structures describing the level of support for this endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.SupportedPCBDimensions">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3  -Previously was in derived class SMTPlacementEndpoint. **</para>
            The maximum and minimum dimensions that a PCB panel or fixture must conform
            to in order to be processed by this SMT Placement machine.
            May be overridden for each lane (see <see cref="T:CFX.Structures.SMTPlacement.SMTLaneInformation"/>).
            </summary>
        </member>
        <member name="P:CFX.Structures.Endpoint.SleepStates">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Contains information related to the Endpoint's sleep states.
            </summary>
        </member>
        <member name="T:CFX.Structures.OperatingSystem">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            An enumeration indicating a computer operating system
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.Other">
            <summary>
            Other Operating System (not listed here)
            </summary>    
        </member>
        <member name="F:CFX.Structures.OperatingSystem.OtherEmbedded">
            <summary>
            Other Embedded Operating System (not listed here)
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsXP">
            <summary>
            Windows XP
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.Windows7">
            <summary>
            Windows 7
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsVista">
            <summary>
            Windows Vista
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.Windows8">
            <summary>
            Windows 8
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.Windows10">
            <summary>
            Windows 10
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsServer2008">
            <summary>
            Windows Server 2008
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsServer2008R2">
            <summary>
            Windows Server 2008 R2
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsServer2012">
            <summary>
            Windows Server 2012
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsServer2016">
            <summary>
            Windows Server 2016
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsCE">
            <summary>
            Windows CD
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsEmbedded">
            <summary>
            Windows Embedded
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsCompact">
            <summary>
            Windows Compact
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.WindowsIoTCore">
            <summary>
            Windows IoT Core
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.UbuntuLinux">
            <summary>
            Ubuntu Linux Distro
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.FedoraLinux">
            <summary>
            Fedora Linux Distro
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.LinuxMint">
            <summary>
            Linux Mint Distro
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.openSUSELinux">
            <summary>
            openSUSE Linux Distro
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.PCLinuxOS">
            <summary>
            PC Linux Distro
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.DebianLinux">
            <summary>
            Debian Linux Distro
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.OtherLinux">
            <summary>
            Other Linux Distro
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.AppleMacOS">
            <summary>
            Apple MacOS
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.AppleIOS">
            <summary>
            Apple IOS or sub-variant
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.Raspbian">
            <summary>
            Raspberry Pi Operating System
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystem.Windows11">
            <summary>
            Windows 11
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.OperatingSystemPlatform">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            An enumeration indicating the platform of a computer operating system
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystemPlatform.Other">
            <summary>
            Other Platform (not listed here)
            </summary>    
        </member>
        <member name="F:CFX.Structures.OperatingSystemPlatform.Platform32bit">
            <summary>
            32-bit Platform
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystemPlatform.Platform64bit">
            <summary>
            64-bit Platform
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystemPlatform.ARM32">
            <summary>
            32-bit ARM Platform
            </summary>
        </member>
        <member name="F:CFX.Structures.OperatingSystemPlatform.ARM64">
            <summary>
            64-bit ARM Platform
            </summary>
        </member>
        <member name="T:CFX.Structures.EnvironmentalCondition">
            <summary>
            Describes an environmental condition that was in place when an action was performed.
            </summary>
        </member>
        <member name="P:CFX.Structures.EnvironmentalCondition.StartTime">
            <summary>
            The start time for the sample period
            </summary>
        </member>
        <member name="P:CFX.Structures.EnvironmentalCondition.EndTime">
            <summary>
            The end time for the sample period
            </summary>
        </member>
        <member name="P:CFX.Structures.EnvironmentalCondition.MeanValue">
            <summary>
            The average value during the sample period
            </summary>
        </member>
        <member name="P:CFX.Structures.EnvironmentalCondition.MedianValue">
            <summary>
            The median value during the sample period
            </summary>
        </member>
        <member name="P:CFX.Structures.EnvironmentalCondition.MaxValue">
            <summary>
            The maximum value during the sample period
            </summary>
        </member>
        <member name="P:CFX.Structures.EnvironmentalCondition.MinValue">
            <summary>
            The minimum value during the sample period
            </summary>
        </member>
        <member name="T:CFX.Structures.Fault">
            <summary>
            A dynamic structure which describes a fault that has occurred in the course of production.
            May be one of:  <see cref="T:CFX.Structures.Fault"/>, <see cref = "T:CFX.Structures.SMTPlacement.SMTPlacementFault" />,
            <see cref="T:CFX.Structures.SolderPastePrinting.SMTSolderPastePrintingFault"/>, or <see cref="T:CFX.Structures.THTInsertion.THTInsertionFault"/>
            </summary>
        </member>
        <member name="M:CFX.Structures.Fault.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CFX.Structures.Fault"/> class.
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.TransactionID">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            If the fault related to this message is associated with a work transaction, this property
            contains the Id of the transaction.
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.Cause">
            <summary>
            The cause of this fault.
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.Severity">
            <summary>
            The severity of the fault
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.FaultCode">
            <summary>
            An endpoint specific code indicating the nature of the fault
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.FaultOccurrenceId">
            <summary>
            A 128-bit unique identifier which uniquely identifier this specific 
            occurrence of the fault
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.Lane">
            <summary>
            The production lane related to this fault (if applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.Stage">
            <summary>
            The production stage related to this fualt (if applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.SideLocation">
            <summary>
            The Side location is giving an indication for the operator from which side in transport direction of the PCB unit
            the fault or error can be accessed and fixed.
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.AccessType">
            The Access Type is giving an indication for the line engineer if the fault, error or warning messages in the fault object
            can be handled via a remote terminal session to the equipment
        </member>
        <member name="P:CFX.Structures.Fault.Description">
            <summary>
             Gets or sets the description of the fault in English.
             Max length of value is 1024 characters which might include multi-line text.
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.DescriptionTranslations">
            <summary>
            Gets or sets the description translations for other languages than English.
            This is a dictionary of language tags and the corresponding translation in that language.
            The key values are either Cultures or Locales as defined in
            <a href="https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo(v=vs.110).aspx#CultureNames">
            Culture
            names and identifiers
            </a>
            .
            <remarks>
            Max length of key is 10 characters.
            <para />
            Max length of value is 1024 characters which might include multi-line text.
            <para />
            Filling this collection is optional.
            The CultureInfo class specifies a unique name for each culture, based on RFC 4646.
            The name is a combination of an ISO 639 two-letter lowercase culture code associated with a language and an
            ISO 3166 two-letter uppercase subculture code associated with a country or region.
            </remarks>
            <example>
            The language needs to be associated with the particular region where it is spoken,
            and this is done by using locale (language + location). For example: fr is the code for French language.
            fr-FR means French language in France. So, fr specifies only the language whereas fr-FR is the locale
            </example>
            </summary>
            <value>
            The description translations.
            </value>
        </member>
        <member name="P:CFX.Structures.Fault.OccurredAt">
            <summary>
            The date / time when this fault occurred created on the equipment
            </summary>
        </member>
        <member name="P:CFX.Structures.Fault.DueDateTime">
            <summary>
            Gets or sets the due date time.
            If this is set, the fault must be resolved until the specified due time which is calculated by the equipment.
            Any fault which requires immediate attention must have a due date which is before Now time stamp.
            <remarks>This value is optional</remarks>
            </summary>
            <value>
            The due date time.
            </value>
        </member>
        <member name="T:CFX.Structures.FaultCause">
            <summary>
            Possible causes of a fault that may causes a stoppage in production
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.LoadError">
            <summary>
            A problem occurred loading a unit
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.UnloadError">
            <summary>
            A problem occurred unloading a unit
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.AutoSafetyStop">
            <summary>
            A safety stop was automatically triggered by automation
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.SafetyStop">
            <summary>
            A safety stop was manually triggered by a human being
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.QualityCheck">
            <summary>
            A stop was triggered due to a quality related problem
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.RemoteStop">
            <summary>
            A stop was triggered remotely
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.MechanicalFailure">
            <summary>
            A stop was induced by a mechanical failure
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.SoftwareFailure">
            <summary>
            A stop was induced by a software failure
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.PowerFailure">
            <summary>
            A stop was induced by a power failure
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.MissingDocumentation">
            <summary>
            A stop was induced because required documentation was missing
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.Refill">
            <summary>
            A stop was induced because material requires a refill of an empty consumable material 
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.MsdExpired">
            <summary>
            A stop was induced because required material moisture sensitive  status has been expired
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.MaterialExpired">
            <summary>
            A stop was induced because required consumable material due date status has been expired
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.MissingComponent">
            <summary>
            A stop was induced because required consumable material is missing 
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.ElectricalFailure">
            <summary>
            A stop was triggered by an electrical device failure (i.e. Sensor failed) 
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.ServicesFailure">
            <summary>
            A stop was triggered by a services failure (i.e. Lack of air pressure)
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.ProcessError">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            A stop was triggered due to process error.
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultCause.RejectedComponent">
            <summary>
            A stop was induced because a consumable material has been rejected
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.FaultSeverity">
            <summary>
            The severity of a fault
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultSeverity.Information">
            <summary>
            Informational purposes.  No stoppage.
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultSeverity.Warning">
            <summary>
            Warning.  No stoppage
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultSeverity.Error">
            <summary>
            Error.  Stoppage.
            </summary>
        </member>
        <member name="F:CFX.Structures.FaultSeverity.Alarm">
            <summary>
            Safety related Error.  Stoppage.
            </summary>
        </member>
        <member name="T:CFX.Structures.FiducialInfo">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            This structure represents a Fiducial element. It is used to enrich the Unit information (e.g., CFX.Structures.UnitInfo) 
            <code language="none">
            {
                "FiducialX": "10.2",
                "FiducialY": 1.3,
                "FiducialRXY": "0.5",
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Structures.FiducialInfo.FiducialX">
            <summary>
            X coordinate of Fiducial on Production Unit
            </summary>
        </member>
        <member name="P:CFX.Structures.FiducialInfo.FiducialY">
            <summary>
            Y coordinate of Fiducial on Production Unit
            </summary>
        </member>
        <member name="P:CFX.Structures.FiducialInfo.FiducialRXY">
            <summary>
            Rotational offset of Fiducial on Production Unit relative to Fiducial X, Y location
            </summary>
        </member>
        <member name="P:CFX.Structures.FiducialInfo.UniqueIdentifier">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            An unique identifier for the fiducial (optional)
            </summary>
        </member>
        <member name="T:CFX.Structures.File">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            A data structure that represents a data file of any type.
            The file may be of a known MIME type, or a specialized type defined by CFX (like IPC-2581 / DPMX, for example).
            </summary>
        </member>
        <member name="M:CFX.Structures.File.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.File.FileType">
            <summary>
            An enumeration that descibes the type of file to be transferred.  This may be a generic, well-known file format
            (MIME content types), or a specialized format defined specifically by the CFX standard, such as an IPC-2581 DPMX
            design file.
            </summary>
        </member>
        <member name="P:CFX.Structures.File.MimeType">
            <summary>
            For data files of type FileType.GenericMimeType, this property specifies the MIME content-type.
            For other file types, such as IPC-2581 DPMX, this property should be NULL.
            To learn more about MIME content types, [CLICK HERE](https://en.wikipedia.org/wiki/Media_type)
            </summary>
        </member>
        <member name="P:CFX.Structures.File.FileData">
            <summary>
            For file tokens of type FileTransferMode.InBand, this property contains the binary file payload data.
            For FileTransferMode.OutOfBand, this property should be NULL.
            </summary>
        </member>
        <member name="P:CFX.Structures.File.FileURL">
            <summary>
            For transfers using type FileTransferMode.OutOfBand, this property contains a secure hyperlink
            (URL) that may be used to download the file payload data.  Only encrypted, secure protocols,
            (eg. https:// , sftp:// , etc) should be used for out of band transfers.  The CFX standard
            does not define any specific protcol for out of band transfers, so end-users are free to use
            a secure protocol of their choosing.  URL's may contain authentication information using industry
            standard URL formatting (eg. https://[username]:[password]@server.domain.com/DataFiles/DataFile1.json ).
            Other forms of authentication, such as file access tokens and keys as URL parameters, are also acceptable.
            CFX is flexible, and supports any encryption scheme, protocol, and authentication mechanism where all
            data information necessary to access the data file securely can be contained in standard URL format.
            </summary>
        </member>
        <member name="T:CFX.Structures.FileTransferDirection">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Specifies the mode of file transfer.
            </summary>
        </member>
        <member name="F:CFX.Structures.FileTransferDirection.Push">
            <summary>
            Data transfer will proceed from the initiator of the request (the source) to the receiver of the request (the destination).
            In this mode, the file information is contained within the request itself.
            </summary>
        </member>
        <member name="F:CFX.Structures.FileTransferDirection.Pull">
            <summary>
            Data is transfer will proceed from the receiver of the request (the source) to the initiator of the request (the destination).
            In this mode, the file information is contained within the response message.
            </summary>
        </member>
        <member name="T:CFX.Structures.FileTransferMode">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Specifies the method of file transfer.  [CLICK HERE](https://en.wikipedia.org/wiki/Out-of-band_data) for more information on transfer modes
            </summary>
        </member>
        <member name="F:CFX.Structures.FileTransferMode.InBand">
            <summary>
            Data is transfered directly within the CFX message structure / AMQP protocol channel.
            Direct, in-band file transfer is not recommended for larger data files.  Many AMQP message broker platforms
            limit the maximum total message size of an AMQP message.  Microsoft's Azure message bus, for example, limits messages
            to 256KB for a standard subscription, and 1MB for a premium subscription.  RabbitMQ recommends limiting messages to 128MB or less.
            Use OutOfBand transfer for larger file sizes.
            </summary>
        </member>
        <member name="F:CFX.Structures.FileTransferMode.OutOfBand">
            <summary>
            Data is transferred indirectly, outside the AMQP message stream, via the use of a secure URL.
            </summary>
        </member>
        <member name="T:CFX.Structures.FileType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Specifies the type of a file.  
            </summary>
        </member>
        <member name="F:CFX.Structures.FileType.GenericMimeType">
            <summary>
            Specifies a file that is of a known MIME content-type, such as text, XML, JSON, a variety of images types like JPEG, PNG, etc., etc.
            To learn more about MIME content types, [CLICK HERE](https://en.wikipedia.org/wiki/Media_type).
            </summary>
        </member>
        <member name="F:CFX.Structures.FileType.DPMX">
            <summary>
            Specifies an IPC-2581 formatted DPMX file.
            </summary>
        </member>
        <member name="T:CFX.Structures.Gantry">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Gantry resource in an Endpoint. It may have a lifecycle independent
            from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.GenericParameter">
            <summary>
            Structure that represents a generic named value parameter.
            </summary>
        </member>
        <member name="P:CFX.Structures.GenericParameter.Name">
            <summary>
            The name of the parameter
            </summary>
        </member>
        <member name="P:CFX.Structures.GenericParameter.Value">
            <summary>
            The new value for the parameter
            </summary>
        </member>
        <member name="T:CFX.Structures.Geometry.Matrix44">
            <summary>
            Represents the right-handed 4x4 floating point matrix, which can store translation, scale and rotation information.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Matrix44.Backward">
            <summary>
            The backward vector formed from the third row M31, M32, M33 elements.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Matrix44.Down">
            <summary>
            The down vector formed from the second row -M21, -M22, -M23 elements.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Matrix44.Forward">
            <summary>
            The forward vector formed from the third row -M31, -M32, -M33 elements.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Matrix44.Identity">
            <summary>
            Returns the identity matrix.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Matrix44.Left">
            <summary>
            The left vector formed from the first row -M11, -M12, -M13 elements.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Matrix44.Right">
            <summary>
            The right vector formed from the first row M11, M12, M13 elements.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Matrix44.Translation">
            <summary>
            Position stored in this matrix.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Matrix44.Up">
            <summary>
            The upper vector formed from the second row M21, M22, M23 elements.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M11">
            <summary>
            A first row and first column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M12">
            <summary>
            A first row and second column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M13">
            <summary>
            A first row and third column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M14">
            <summary>
            A first row and fourth column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M21">
            <summary>
            A second row and first column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M22">
            <summary>
            A second row and second column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M23">
            <summary>
            A second row and third column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M24">
            <summary>
            A second row and fourth column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M31">
            <summary>
            A third row and first column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M32">
            <summary>
            A third row and second column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M33">
            <summary>
            A third row and third column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M34">
            <summary>
            A third row and fourth column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M41">
            <summary>
            A fourth row and first column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M42">
            <summary>
            A fourth row and second column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M43">
            <summary>
            A fourth row and third column value.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Matrix44.M44">
            <summary>
            A fourth row and fourth column value.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a matrix.
            </summary>
            <param name="m11">A first row and first column value.</param>
            <param name="m12">A first row and second column value.</param>
            <param name="m13">A first row and third column value.</param>
            <param name="m14">A first row and fourth column value.</param>
            <param name="m21">A second row and first column value.</param>
            <param name="m22">A second row and second column value.</param>
            <param name="m23">A second row and third column value.</param>
            <param name="m24">A second row and fourth column value.</param>
            <param name="m31">A third row and first column value.</param>
            <param name="m32">A third row and second column value.</param>
            <param name="m33">A third row and third column value.</param>
            <param name="m34">A third row and fourth column value.</param>
            <param name="m41">A fourth row and first column value.</param>
            <param name="m42">A fourth row and second column value.</param>
            <param name="m43">A fourth row and third column value.</param>
            <param name="m44">A fourth row and fourth column value.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Decompose(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Decomposes this matrix to translation, rotation and scale elements. Returns <c>true</c> if matrix can be decomposed; <c>false</c> otherwise.
            </summary>
            <param name="scale">Scale vector as an output parameter.</param>
            <param name="rotation">Rotation quaternion as an output parameter.</param>
            <param name="translation">Translation vector as an output parameter.</param>
            <returns><c>true</c> if matrix can be decomposed; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Determinant">
            <summary>
            Returns a determinant of this <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <returns>Determinant of this <see cref="T:CFX.Structures.Geometry.Matrix44"/></returns>
            <remarks>See more about determinant here - http://en.wikipedia.org/wiki/Determinant.
            </remarks>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Equals(CFX.Structures.Geometry.Matrix44)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> without any tolerance.
            </summary>
            <param name="other">The <see cref="T:CFX.Structures.Geometry.Matrix44"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/> without any tolerance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CFX.Structures.Geometry.Matrix44"/> in the format:
            {M11:[<see cref="F:CFX.Structures.Geometry.Matrix44.M11"/>] M12:[<see cref="F:CFX.Structures.Geometry.Matrix44.M12"/>] M13:[<see cref="F:CFX.Structures.Geometry.Matrix44.M13"/>] M14:[<see cref="F:CFX.Structures.Geometry.Matrix44.M14"/>]}
            {M21:[<see cref="F:CFX.Structures.Geometry.Matrix44.M21"/>] M12:[<see cref="F:CFX.Structures.Geometry.Matrix44.M22"/>] M13:[<see cref="F:CFX.Structures.Geometry.Matrix44.M23"/>] M14:[<see cref="F:CFX.Structures.Geometry.Matrix44.M24"/>]}
            {M31:[<see cref="F:CFX.Structures.Geometry.Matrix44.M31"/>] M32:[<see cref="F:CFX.Structures.Geometry.Matrix44.M32"/>] M33:[<see cref="F:CFX.Structures.Geometry.Matrix44.M33"/>] M34:[<see cref="F:CFX.Structures.Geometry.Matrix44.M34"/>]}
            {M41:[<see cref="F:CFX.Structures.Geometry.Matrix44.M41"/>] M42:[<see cref="F:CFX.Structures.Geometry.Matrix44.M42"/>] M43:[<see cref="F:CFX.Structures.Geometry.Matrix44.M43"/>] M44:[<see cref="F:CFX.Structures.Geometry.Matrix44.M44"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Add(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <returns>The result of the matrix addition.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Add(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> which contains sum of two matrixes.
            </summary>
            <param name="matrix1">The first matrix to add.</param>
            <param name="matrix2">The second matrix to add.</param>
            <param name="result">The result of the matrix addition as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateBillboard(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,System.Nullable{CFX.Structures.Geometry.Vector3})">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <returns>The <see cref="T:CFX.Structures.Geometry.Matrix44"/> for spherical billboarding.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateBillboard(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Nullable{CFX.Structures.Geometry.Vector3},CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> for spherical billboarding that rotates around specified object position.
            </summary>
            <param name="objectPosition">Position of billboard object. It will rotate around that vector.</param>
            <param name="cameraPosition">The camera position.</param>
            <param name="cameraUpVector">The camera up vector.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="result">The <see cref="T:CFX.Structures.Geometry.Matrix44"/> for spherical billboarding as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateConstrainedBillboard(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,System.Nullable{CFX.Structures.Geometry.Vector3},System.Nullable{CFX.Structures.Geometry.Vector3})">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <returns>The <see cref="T:CFX.Structures.Geometry.Matrix44"/> for cylindrical billboarding.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateConstrainedBillboard(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Nullable{CFX.Structures.Geometry.Vector3},System.Nullable{CFX.Structures.Geometry.Vector3},CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> for cylindrical billboarding that rotates around specified axis.
            </summary>
            <param name="objectPosition">Object position the billboard will rotate around.</param>
            <param name="cameraPosition">Camera position.</param>
            <param name="rotateAxis">Axis of billboard for rotation.</param>
            <param name="cameraForwardVector">Optional camera forward vector.</param>
            <param name="objectForwardVector">Optional object forward vector.</param>
            <param name="result">The <see cref="T:CFX.Structures.Geometry.Matrix44"/> for cylindrical billboarding as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateFromAxisAngle(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <returns>The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateFromAxisAngle(CFX.Structures.Geometry.Vector3@,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> which contains the rotation moment around specified axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <param name="result">The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateFromQuaternion(CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> from a <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:CFX.Structures.Geometry.Quaternion"/> of rotation moment.</param>
            <returns>The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateFromQuaternion(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> from a <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="quaternion"><see cref="T:CFX.Structures.Geometry.Quaternion"/> of rotation moment.</param>
            <param name="result">The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateFromYawPitchRoll(System.Double,System.Double,System.Double)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <returns>The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateFromYawPitchRoll(System.Double,System.Double,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> from the specified yaw, pitch and roll values.
            </summary>
            <param name="yaw">The yaw rotation value in radians.</param>
            <param name="pitch">The pitch rotation value in radians.</param>
            <param name="roll">The roll rotation value in radians.</param>
            <param name="result">The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
            <remarks>For more information about yaw, pitch and roll visit http://en.wikipedia.org/wiki/Euler_angles.
            </remarks>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateLookAt(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new viewing <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <returns>The viewing <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateLookAt(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new viewing <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraTarget">Lookup vector of the camera.</param>
            <param name="cameraUpVector">The direction of the upper edge of the camera.</param>
            <param name="result">The viewing <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateOrthographic(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for orthographic view.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateOrthographic(System.Double,System.Double,System.Double,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for orthographic view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for orthographic view as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateOrthographicOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <returns>The new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for customized orthographic view.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateOrthographicOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for customized orthographic view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="zNearPlane">Depth of the near plane.</param>
            <param name="zFarPlane">Depth of the far plane.</param>
            <param name="result">The new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for customized orthographic view as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreatePerspective(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for perspective view.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreatePerspective(System.Double,System.Double,System.Double,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for perspective view.
            </summary>
            <param name="width">Width of the viewing volume.</param>
            <param name="height">Height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for perspective view as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreatePerspectiveFieldOfView(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for perspective view with FOV.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreatePerspectiveFieldOfView(System.Double,System.Double,System.Double,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for perspective view with field of view.
            </summary>
            <param name="fieldOfView">Field of view in the y direction in radians.</param>
            <param name="aspectRatio">Width divided by height of the viewing volume.</param>
            <param name="nearPlaneDistance">Distance of the near plane.</param>
            <param name="farPlaneDistance">Distance of the far plane.</param>
            <param name="result">The new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for perspective view with FOV as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreatePerspectiveOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <returns>The new <see cref="T:CFX.Structures.Geometry.Matrix44"/> for customized perspective view.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreatePerspectiveOffCenter(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new projection <see cref="T:CFX.Structures.Geometry.Matrix44"/> for customized perspective view.
            </summary>
            <param name="left">Lower x-value at the near plane.</param>
            <param name="right">Upper x-value at the near plane.</param>
            <param name="bottom">Lower y-coordinate at the near plane.</param>
            <param name="top">Upper y-value at the near plane.</param>
            <param name="nearPlaneDistance">Distance to the near plane.</param>
            <param name="farPlaneDistance">Distance to the far plane.</param>
            <param name="result">The new <see cref="T:CFX.Structures.Geometry.Matrix44"/> for customized perspective view as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateRotationX(System.Double)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around X axis.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateRotationX(System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around X axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around X axis as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateRotationY(System.Double)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around Y axis.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateRotationY(System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around Y axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around Y axis as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateRotationZ(System.Double)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <returns>The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around Z axis.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateRotationZ(System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around Z axis.
            </summary>
            <param name="radians">Angle in radians.</param>
            <param name="result">The rotation <see cref="T:CFX.Structures.Geometry.Matrix44"/> around Z axis as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateScale(System.Double)">
            <summary>
            Creates a new scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <returns>The scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateScale(System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="scale">Scale value for all three axises.</param>
            <param name="result">The scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateScale(System.Double,System.Double,System.Double)">
            <summary>
            Creates a new scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <returns>The scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateScale(System.Double,System.Double,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="xScale">Scale value for X axis.</param>
            <param name="yScale">Scale value for Y axis.</param>
            <param name="zScale">Scale value for Z axis.</param>
            <param name="result">The scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateScale(CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="scales"><see cref="T:CFX.Structures.Geometry.Vector3"/> representing x,y and z scale values.</param>
            <returns>The scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateScale(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="scales"><see cref="T:CFX.Structures.Geometry.Vector3"/> representing x,y and z scale values.</param>
            <param name="result">The scaling <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateTranslation(System.Double,System.Double,System.Double)">
            <summary>
            Creates a new translation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <returns>The translation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateTranslation(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new translation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <param name="result">The translation <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateTranslation(CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new translation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">X,Y and Z coordinates of translation.</param>
            <returns>The translation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateTranslation(System.Double,System.Double,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new translation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="xPosition">X coordinate of translation.</param>
            <param name="yPosition">Y coordinate of translation.</param>
            <param name="zPosition">Z coordinate of translation.</param>
            <param name="result">The translation <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateWorld(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new world <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:CFX.Structures.Geometry.Vector3.Up"/>.</param>
            <returns>The world <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.CreateWorld(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new world <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">The position vector.</param>
            <param name="forward">The forward direction vector.</param>
            <param name="up">The upward direction vector. Usually <see cref="P:CFX.Structures.Geometry.Vector3.Up"/>.</param>
            <param name="result">The world <see cref="T:CFX.Structures.Geometry.Matrix44"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Divide(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Divides the elements of a <see cref="T:CFX.Structures.Geometry.Matrix44"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="matrix2">Divisor <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>The result of dividing the matrix.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Divide(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Divides the elements of a <see cref="T:CFX.Structures.Geometry.Matrix44"/> by the elements of another matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="matrix2">Divisor <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">The result of dividing the matrix as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Divide(CFX.Structures.Geometry.Matrix44,System.Double)">
            <summary>
            Divides the elements of a <see cref="T:CFX.Structures.Geometry.Matrix44"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Divide(CFX.Structures.Geometry.Matrix44@,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Divides the elements of a <see cref="T:CFX.Structures.Geometry.Matrix44"/> by a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a matrix by a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Invert(CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> which contains inversion of the specified matrix.
            </summary>
            <param name="matrix">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>The inverted matrix.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Invert(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> which contains inversion of the specified matrix.
            </summary>
            <param name="matrix">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">The inverted matrix as output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Lerp(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="matrix2">The second <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>>The result of linear interpolation of the specified matrixes.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Lerp(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> that contains linear interpolation of the values in specified matrixes.
            </summary>
            <param name="matrix1">The first <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="matrix2">The second <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified matrixes as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Multiply(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="matrix2">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Result of the matrix multiplication.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Multiply(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> that contains a multiplication of two matrix.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="matrix2">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Result of the matrix multiplication as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Multiply(CFX.Structures.Geometry.Matrix44,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Matrix44"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Multiply(CFX.Structures.Geometry.Matrix44@,System.Double,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Matrix44"/> and a scalar.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">Result of the matrix multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Negate(CFX.Structures.Geometry.Matrix44)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Result of the matrix negation.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Negate(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Returns a matrix with the all values negated.
            </summary>
            <param name="matrix">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Result of the matrix negation as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Subtract(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="matrix2">The second <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>The result of the matrix subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Subtract(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Matrix44"/> that contains subtraction of one matrix from another.
            </summary>
            <param name="matrix1">The first <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="matrix2">The second <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">The result of the matrix subtraction as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Transpose(CFX.Structures.Geometry.Matrix44)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <returns>The new <see cref="T:CFX.Structures.Geometry.Matrix44"/> which contains the transposing result.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Transpose(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Swap the matrix rows and columns.
            </summary>
            <param name="matrix">The matrix for transposing operation.</param>
            <param name="result">The new <see cref="T:CFX.Structures.Geometry.Matrix44"/> which contains the transposing result as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Transform(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Applies a rotational transformation to a matrix
            </summary>
            <param name="value">The source matrix</param>
            <param name="rotation">The rotation to be applied</param>
            <returns>The resultant matrix</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.Transform(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Matrix44@)">
            <summary>
            Applies a rotational transformation to a matrix
            </summary>
            <param name="value">The source matrix</param>
            <param name="rotation">The rotation to be applied</param>
            <param name="result">The resultant matrix</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_Addition(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Adds two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the left of the add sign.</param>
            <param name="matrix2">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the right of the add sign.</param>
            <returns>Sum of the matrixes.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_Division(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Divides the elements of a <see cref="T:CFX.Structures.Geometry.Matrix44"/> by the elements of another <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the left of the div sign.</param>
            <param name="matrix2">Divisor <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the right of the div sign.</param>
            <returns>The result of dividing the matrixes.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_Division(CFX.Structures.Geometry.Matrix44,System.Double)">
            <summary>
            Divides the elements of a <see cref="T:CFX.Structures.Geometry.Matrix44"/> by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a matrix by a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_Equality(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Compares whether two <see cref="T:CFX.Structures.Geometry.Matrix44"/> instances are equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the left of the equal sign.</param>
            <param name="matrix2">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_Inequality(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Compares whether two <see cref="T:CFX.Structures.Geometry.Matrix44"/> instances are not equal without any tolerance.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the left of the not equal sign.</param>
            <param name="matrix2">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_Multiply(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Multiplies two matrixes.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the left of the mul sign.</param>
            <param name="matrix2">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication.</returns>
            <remarks>
            Using matrix multiplication algorithm - see http://en.wikipedia.org/wiki/Matrix_multiplication.
            </remarks>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_Multiply(CFX.Structures.Geometry.Matrix44,System.Double)">
            <summary>
            Multiplies the elements of matrix by a scalar.
            </summary>
            <param name="matrix">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the matrix multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_Subtraction(CFX.Structures.Geometry.Matrix44,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Subtracts the values of one <see cref="T:CFX.Structures.Geometry.Matrix44"/> from another <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="matrix1">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the left of the sub sign.</param>
            <param name="matrix2">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the right of the sub sign.</param>
            <returns>Result of the matrix subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Matrix44.op_UnaryNegation(CFX.Structures.Geometry.Matrix44)">
            <summary>
            Inverts values in the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="matrix">Source <see cref="T:CFX.Structures.Geometry.Matrix44"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="T:CFX.Structures.Geometry.NamespaceDoc">
            <summary>
              A collection of classes for geometric calculations
              ("linear algebra", but 2D, 3D, and 4D for homogeneous coordinates only).
              
              Taken from the open source library "FNA-XNA", see https://github.com/FNA-XNA/FNA,
              and modified to use _double_ precision instead of single precision _float_.
              Added the modulo-operator ("%") for Vector3.
            </summary>
        </member>
        <member name="T:CFX.Structures.Geometry.Quaternion">
            <summary>
            An efficient mathematical representation for three dimensional rotations.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Quaternion.Identity">
            <summary>
            Returns a quaternion representing no rotation.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Quaternion.X">
            <summary>
            The x coordinate of this <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Quaternion.Y">
            <summary>
            The y coordinate of this <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Quaternion.Z">
            <summary>
            The z coordinate of this <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Quaternion.W">
            <summary>
            The rotation component of this <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a quaternion with X, Y, Z and W from four values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
            <param name="w">The rotation component.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.#ctor(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Constructs a quaternion with X, Y, Z from <see cref="T:CFX.Structures.Geometry.Vector3"/> and rotation component from a scalar.
            </summary>
            <param name="vectorPart">The x, y, z coordinates in 3d-space.</param>
            <param name="scalarPart">The rotation component.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Conjugate">
            <summary>
            Transforms this quaternion into its conjugated version.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Equals(CFX.Structures.Geometry.Quaternion)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="other">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Length">
            <summary>
            Returns the magnitude of the quaternion components.
            </summary>
            <returns>The magnitude of the quaternion components.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.LengthSquared">
            <summary>
            Returns the squared magnitude of the quaternion components.
            </summary>
            <returns>The squared magnitude of the quaternion components.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Normalize">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CFX.Structures.Geometry.Quaternion"/> in the format:
            {X:[<see cref="F:CFX.Structures.Geometry.Quaternion.X"/>] Y:[<see cref="F:CFX.Structures.Geometry.Quaternion.Y"/>] Z:[<see cref="F:CFX.Structures.Geometry.Quaternion.Z"/>] W:[<see cref="F:CFX.Structures.Geometry.Quaternion.W"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Add(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains the sum of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <returns>The result of the quaternion addition.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Add(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains the sum of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="result">The result of the quaternion addition as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Concatenate(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains concatenation between two quaternion.
            </summary>
            <param name="value1">The first <see cref="T:CFX.Structures.Geometry.Quaternion"/> to concatenate.</param>
            <param name="value2">The second <see cref="T:CFX.Structures.Geometry.Quaternion"/> to concatenate.</param>
            <returns>The result of rotation of <paramref name="value1"/> followed by <paramref name="value2"/> rotation.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Concatenate(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains concatenation between two quaternion.
            </summary>
            <param name="value1">The first <see cref="T:CFX.Structures.Geometry.Quaternion"/> to concatenate.</param>
            <param name="value2">The second <see cref="T:CFX.Structures.Geometry.Quaternion"/> to concatenate.</param>
            <param name="result">The result of rotation of <paramref name="value1"/> followed by <paramref name="value2"/> rotation as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Conjugate(CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains conjugated version of the specified quaternion.
            </summary>
            <param name="value">The quaternion which values will be used to create the conjugated version.</param>
            <returns>The conjugate version of the specified quaternion.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Conjugate(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains conjugated version of the specified quaternion.
            </summary>
            <param name="value">The quaternion which values will be used to create the conjugated version.</param>
            <param name="result">The conjugated version of the specified quaternion as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.CreateFromAxisAngle(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> from the specified axis and angle.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle in radians.</param>
            <returns>The new quaternion builded from axis and angle.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.CreateFromAxisAngle(CFX.Structures.Geometry.Vector3@,System.Double,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> from the specified axis and angle.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle in radians.</param>
            <param name="result">The new quaternion builded from axis and angle as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.CreateFromRotationMatrix(CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> from the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>A quaternion composed from the rotation part of the matrix.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.CreateFromRotationMatrix(CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> from the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <param name="result">A quaternion composed from the rotation part of the matrix as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.CreateFromYawPitchRoll(System.Double,System.Double,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> from the specified yaw, pitch and roll angles.
            </summary>
            <param name="yaw">Yaw around the y axis in radians.</param>
            <param name="pitch">Pitch around the x axis in radians.</param>
            <param name="roll">Roll around the z axis in radians.</param>
            <returns>A new quaternion from the concatenated yaw, pitch, and roll angles.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.CreateFromYawPitchRoll(System.Double,System.Double,System.Double,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> from the specified yaw, pitch and roll angles.
            </summary>
            <param name="yaw">Yaw around the y axis in radians.</param>
            <param name="pitch">Pitch around the x axis in radians.</param>
            <param name="roll">Roll around the z axis in radians.</param>
            <param name="result">A new quaternion from the concatenated yaw, pitch, and roll angles as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Divide(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Divides a <see cref="T:CFX.Structures.Geometry.Quaternion"/> by the other <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Divisor <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <returns>The result of dividing the quaternions.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Divide(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Divides a <see cref="T:CFX.Structures.Geometry.Quaternion"/> by the other <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Divisor <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="result">The result of dividing the quaternions as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Dot(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Returns a dot product of two quaternions.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <returns>The dot product of two quaternions.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Dot(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@,System.Double@)">
            <summary>
            Returns a dot product of two quaternions.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <param name="result">The dot product of two quaternions as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Inverse(CFX.Structures.Geometry.Quaternion)">
            <summary>
            Returns the inverse quaternion which represents the opposite rotation.
            </summary>
            <param name="quaternion">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <returns>The inverse quaternion.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Inverse(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Returns the inverse quaternion which represents the opposite rotation.
            </summary>
            <param name="quaternion">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="result">The inverse quaternion as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Lerp(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion,System.Double)">
            <summary>
            Performs a linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <returns>The result of linear blending between two quaternions.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Lerp(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@,System.Double,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Performs a linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <param name="result">The result of linear blending between two quaternions as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Slerp(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion,System.Double)">
            <summary>
            Performs a spherical linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <returns>The result of spherical linear blending between two quaternions.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Slerp(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@,System.Double,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Performs a spherical linear blend between two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="amount">The blend amount where 0 returns <paramref name="quaternion1"/> and 1 <paramref name="quaternion2"/>.</param>
            <param name="result">The result of spherical linear blending between two quaternions as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Subtract(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains subtraction of one <see cref="T:CFX.Structures.Geometry.Quaternion"/> from another.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <returns>The result of the quaternion subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Subtract(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains subtraction of one <see cref="T:CFX.Structures.Geometry.Quaternion"/> from another.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="result">The result of the quaternion subtraction as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Multiply(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains a multiplication of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <returns>The result of the quaternion multiplication.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Multiply(CFX.Structures.Geometry.Quaternion,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Quaternion"/> and a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the quaternion multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Multiply(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains a multiplication of two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="result">The result of the quaternion multiplication as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Multiply(CFX.Structures.Geometry.Quaternion@,System.Double,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Quaternion"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Quaternion"/> and a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the quaternion multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Negate(CFX.Structures.Geometry.Quaternion)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <returns>The result of the quaternion negation.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Negate(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="result">The result of the quaternion negation as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Normalize(CFX.Structures.Geometry.Quaternion)">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
            <param name="quaternion">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <returns>The unit length quaternion.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.Normalize(CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Quaternion@)">
            <summary>
            Scales the quaternion magnitude to unit length.
            </summary>
            <param name="quaternion">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/>.</param>
            <param name="result">The unit length quaternion an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.op_Addition(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/> on the left of the add sign.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.op_Division(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Divides a <see cref="T:CFX.Structures.Geometry.Quaternion"/> by the other <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/> on the left of the div sign.</param>
            <param name="quaternion2">Divisor <see cref="T:CFX.Structures.Geometry.Quaternion"/> on the right of the div sign.</param>
            <returns>The result of dividing the quaternions.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.op_Equality(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Compares whether two <see cref="T:CFX.Structures.Geometry.Quaternion"/> instances are equal.
            </summary>
            <param name="quaternion1"><see cref="T:CFX.Structures.Geometry.Quaternion"/> instance on the left of the equal sign.</param>
            <param name="quaternion2"><see cref="T:CFX.Structures.Geometry.Quaternion"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.op_Inequality(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Compares whether two <see cref="T:CFX.Structures.Geometry.Quaternion"/> instances are not equal.
            </summary>
            <param name="quaternion1"><see cref="T:CFX.Structures.Geometry.Quaternion"/> instance on the left of the not equal sign.</param>
            <param name="quaternion2"><see cref="T:CFX.Structures.Geometry.Quaternion"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.op_Multiply(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Multiplies two quaternions.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/> on the left of the mul sign.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/> on the right of the mul sign.</param>
            <returns>Result of the quaternions multiplication.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.op_Multiply(CFX.Structures.Geometry.Quaternion,System.Double)">
            <summary>
            Multiplies the components of quaternion by a scalar.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the quaternion multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.op_Subtraction(CFX.Structures.Geometry.Quaternion,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Subtracts a <see cref="T:CFX.Structures.Geometry.Quaternion"/> from a <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="quaternion1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the left of the sub sign.</param>
            <param name="quaternion2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the quaternion subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Quaternion.op_UnaryNegation(CFX.Structures.Geometry.Quaternion)">
            <summary>
            Flips the sign of the all the quaternion components.
            </summary>
            <param name="quaternion">Source <see cref="T:CFX.Structures.Geometry.Quaternion"/> on the right of the sub sign.</param>
            <returns>The result of the quaternion negation.</returns>
        </member>
        <member name="T:CFX.Structures.Geometry.Vector2">
            <summary>
            Describes a 2D-vector.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector2.Zero">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector2"/> with components 0, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector2.One">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector2"/> with components 1, 1.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector2.UnitX">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector2"/> with components 1, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector2.UnitY">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector2"/> with components 0, 1.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector2.X">
            <summary>
            The x coordinate of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector2.Y">
            <summary>
            The y coordinate of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a 2d vector with X and Y from two values.
            </summary>
            <param name="x">The x coordinate in 2d-space.</param>
            <param name="y">The y coordinate in 2d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.#ctor(System.Double)">
            <summary>
            Constructs a 2d vector with X and Y set to the same value.
            </summary>
            <param name="value">The x and y coordinates in 2d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Equals(CFX.Structures.Geometry.Vector2)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <param name="other">The <see cref="T:CFX.Structures.Geometry.Vector2"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Length">
            <summary>
            Returns the length of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <returns>The length of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <returns>The squared length of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Normalize">
            <summary>
            Turns this <see cref="T:CFX.Structures.Geometry.Vector2"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CFX.Structures.Geometry.Vector2"/> in the format:
            {X:[<see cref="F:CFX.Structures.Geometry.Vector2.X"/>] Y:[<see cref="F:CFX.Structures.Geometry.Vector2.Y"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:CFX.Structures.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Add(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Add(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Barycentric(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,System.Double,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Barycentric(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,System.Double,System.Double,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 2d-triangle.
            </summary>
            <param name="value1">The first vector of 2d-triangle.</param>
            <param name="value2">The second vector of 2d-triangle.</param>
            <param name="value3">The third vector of 2d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 2d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 2d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.CatmullRom(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.CatmullRom(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,System.Double,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Clamp(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Clamp(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Distance(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Distance(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,System.Double@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.DistanceSquared(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.DistanceSquared(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,System.Double@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Divide(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector2"/> by the components of another <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Divide(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector2"/> by the components of another <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="value2">Divisor <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Divide(CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Divide(CFX.Structures.Geometry.Vector2@,System.Double,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Dot(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Dot(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,System.Double@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Hermite(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Hermite(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,System.Double,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Lerp(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Lerp(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,System.Double,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Max(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CFX.Structures.Geometry.Vector2"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Max(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CFX.Structures.Geometry.Vector2"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Min(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CFX.Structures.Geometry.Vector2"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Min(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CFX.Structures.Geometry.Vector2"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Multiply(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Multiply(CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Multiply(CFX.Structures.Geometry.Vector2@,System.Double,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Vector2"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Multiply(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Negate(CFX.Structures.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains the specified vector inversion.
            direction of <paramref name="value"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Negate(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains the specified vector inversion.
            direction of <paramref name="value"/> in <paramref name="result"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Normalize(CFX.Structures.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Normalize(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Reflect(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Reflect(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.SmoothStep(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.SmoothStep(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,System.Double,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Subtract(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains subtraction of on <see cref="T:CFX.Structures.Geometry.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Subtract(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains subtraction of on <see cref="T:CFX.Structures.Geometry.Vector2"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Transform(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Transform(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Transform(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector2"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Transform(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a transformation of 2d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector2"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Transform(CFX.Structures.Geometry.Vector2[],CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CFX.Structures.Geometry.Vector2"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Transform(CFX.Structures.Geometry.Vector2[],System.Int32,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CFX.Structures.Geometry.Vector2"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CFX.Structures.Geometry.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Transform(CFX.Structures.Geometry.Vector2[],CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector2[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CFX.Structures.Geometry.Vector2"/> by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.Transform(CFX.Structures.Geometry.Vector2[],System.Int32,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CFX.Structures.Geometry.Vector2"/> by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CFX.Structures.Geometry.Vector2"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.TransformNormal(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="normal">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.TransformNormal(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector2@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector2"/> that contains a transformation of the specified normal by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="normal">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.TransformNormal(CFX.Structures.Geometry.Vector2[],CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector2[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:CFX.Structures.Geometry.Vector2"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.TransformNormal(CFX.Structures.Geometry.Vector2[],System.Int32,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector2[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:CFX.Structures.Geometry.Vector2"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CFX.Structures.Geometry.Vector2"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_UnaryNegation(CFX.Structures.Geometry.Vector2)">
            <summary>
            Inverts values in the specified <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Equality(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Compares whether two <see cref="T:CFX.Structures.Geometry.Vector2"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:CFX.Structures.Geometry.Vector2"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:CFX.Structures.Geometry.Vector2"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Inequality(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Compares whether two <see cref="T:CFX.Structures.Geometry.Vector2"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:CFX.Structures.Geometry.Vector2"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:CFX.Structures.Geometry.Vector2"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Addition(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Subtraction(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Subtracts a <see cref="T:CFX.Structures.Geometry.Vector2"/> from a <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Multiply(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Multiply(CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Multiply(System.Double,CFX.Structures.Geometry.Vector2)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Division(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Vector2)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector2"/> by the components of another <see cref="T:CFX.Structures.Geometry.Vector2"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:CFX.Structures.Geometry.Vector2"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector2.op_Division(CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector2"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector2"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="T:CFX.Structures.Geometry.Vector3">
            <summary>
            Describes a 3D-vector.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.Zero">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 0, 0, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.One">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 1, 1, 1.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.UnitX">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.UnitY">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.UnitZ">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.Up">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 0, 1, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.Down">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 0, -1, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.Right">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 1, 0, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.Left">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components -1, 0, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.Forward">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 0, 0, -1.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector3.Backward">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector3"/> with components 0, 0, 1.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector3.X">
            <summary>
            The x coordinate of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector3.Y">
            <summary>
            The y coordinate of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector3.Z">
            <summary>
            The z coordinate of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Constructs a 3d vector with X, Y and Z from three values.
            </summary>
            <param name="x">The x coordinate in 3d-space.</param>
            <param name="y">The y coordinate in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.#ctor(System.Double)">
            <summary>
            Constructs a 3d vector with X, Y and Z set to the same value.
            </summary>
            <param name="value">The x, y and z coordinates in 3d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.#ctor(CFX.Structures.Geometry.Vector2,System.Double)">
            <summary>
            Constructs a 3d vector with X, Y from <see cref="T:CFX.Structures.Geometry.Vector2"/> and Z from a scalar.
            </summary>
            <param name="value">The x and y coordinates in 3d-space.</param>
            <param name="z">The z coordinate in 3d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Equals(CFX.Structures.Geometry.Vector3)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <param name="other">The <see cref="T:CFX.Structures.Geometry.Vector3"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Length">
            <summary>
            Returns the length of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <returns>The length of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <returns>The squared length of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Normalize">
            <summary>
            Turns this <see cref="T:CFX.Structures.Geometry.Vector3"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representation of this <see cref="T:CFX.Structures.Geometry.Vector3"/> in the format:
            {X:[<see cref="F:CFX.Structures.Geometry.Vector3.X"/>] Y:[<see cref="F:CFX.Structures.Geometry.Vector3.Y"/>] Z:[<see cref="F:CFX.Structures.Geometry.Vector3.Z"/>]}
            </summary>
            <returns>A <see cref="T:System.String"/> representation of this <see cref="T:CFX.Structures.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Add(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Add(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Barycentric(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,System.Double,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Barycentric(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Double,System.Double,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 3d-triangle.
            </summary>
            <param name="value1">The first vector of 3d-triangle.</param>
            <param name="value2">The second vector of 3d-triangle.</param>
            <param name="value3">The third vector of 3d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 3d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 3d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.CatmullRom(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.CatmullRom(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Double,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Clamp(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Clamp(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Cross(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product of two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Cross(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Computes the cross product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="result">The cross product of two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Distance(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Distance(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Double@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.DistanceSquared(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.DistanceSquared(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Double@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Divide(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector3"/> by the components of another <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Divide(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector3"/> by the components of another <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Divisor <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Divide(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Divide(CFX.Structures.Geometry.Vector3@,System.Double,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector3"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Dot(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Dot(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Double@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Hermite(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Hermite(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Double,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Lerp(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Lerp(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Double,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Max(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CFX.Structures.Geometry.Vector3"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Max(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CFX.Structures.Geometry.Vector3"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Min(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CFX.Structures.Geometry.Vector3"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Min(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CFX.Structures.Geometry.Vector3"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Multiply(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Multiply(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Multiply(CFX.Structures.Geometry.Vector3@,System.Double,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Vector3"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Multiply(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Negate(CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Negate(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Normalize(CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Normalize(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a normalized values from another vector.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Reflect(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <returns>Reflected vector.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Reflect(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="normal">Reflection normal.</param>
            <param name="result">Reflected vector as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.SmoothStep(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.SmoothStep(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,System.Double,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Subtract(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains subtraction of on <see cref="T:CFX.Structures.Geometry.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Subtract(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains subtraction of on <see cref="T:CFX.Structures.Geometry.Vector3"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Transform(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Transform(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Transform(CFX.Structures.Geometry.Vector3[],CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CFX.Structures.Geometry.Vector3"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Transform(CFX.Structures.Geometry.Vector3[],System.Int32,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CFX.Structures.Geometry.Vector3"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CFX.Structures.Geometry.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Transform(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector3"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Transform(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a transformation of 3d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>, representing the rotation.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector3"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Transform(CFX.Structures.Geometry.Vector3[],CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector3[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CFX.Structures.Geometry.Vector3"/> by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.Transform(CFX.Structures.Geometry.Vector3[],System.Int32,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CFX.Structures.Geometry.Vector3"/> by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/> and places the results in an another array.
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CFX.Structures.Geometry.Vector3"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.TransformNormal(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="normal">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Transformed normal.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.TransformNormal(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector3@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector3"/> that contains a transformation of the specified normal by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="normal">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> which represents a normal vector.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Transformed normal as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.TransformNormal(CFX.Structures.Geometry.Vector3[],CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector3[])">
            <summary>
            Apply transformation on all normals within array of <see cref="T:CFX.Structures.Geometry.Vector3"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.TransformNormal(CFX.Structures.Geometry.Vector3[],System.Int32,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector3[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on normals within array of <see cref="T:CFX.Structures.Geometry.Vector3"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CFX.Structures.Geometry.Vector3"/> should be written.</param>
            <param name="length">The number of normals to be transformed.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Equality(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Compares whether two <see cref="T:CFX.Structures.Geometry.Vector3"/> instances are equal.
            </summary>
            <param name="value1"><see cref="T:CFX.Structures.Geometry.Vector3"/> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:CFX.Structures.Geometry.Vector3"/> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Inequality(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Compares whether two <see cref="T:CFX.Structures.Geometry.Vector3"/> instances are not equal.
            </summary>
            <param name="value1"><see cref="T:CFX.Structures.Geometry.Vector3"/> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:CFX.Structures.Geometry.Vector3"/> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Addition(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the left of the add sign.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the right of the add sign.</param>
            <returns>Sum of the vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_UnaryNegation(CFX.Structures.Geometry.Vector3)">
            <summary>
            Inverts values in the specified <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the inversion.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Subtraction(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Subtracts a <see cref="T:CFX.Structures.Geometry.Vector3"/> from a <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the left of the sub sign.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the right of the sub sign.</param>
            <returns>Result of the vector subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Multiply(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the left of the mul sign.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Multiply(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the left of the mul sign.</param>
            <param name="scaleFactor">Scalar value on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Multiply(System.Double,CFX.Structures.Geometry.Vector3)">
            <summary>
            Multiplies the components of vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value on the left of the mul sign.</param>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the right of the mul sign.</param>
            <returns>Result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Division(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector3"/> by the components of another <see cref="T:CFX.Structures.Geometry.Vector3"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the left of the div sign.</param>
            <param name="value2">Divisor <see cref="T:CFX.Structures.Geometry.Vector3"/> on the right of the div sign.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Division(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector3"/> by a scalar.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/> on the left of the div sign.</param>
            <param name="divider">Divisor scalar on the right of the div sign.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Modulus(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Vector3)">
            <summary>
              The modulo operator, element by element (componentwise), of two vectors.
            </summary>
            <param name="x_a"></param>
            <param name="x_b"></param>
            <returns></returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector3.op_Modulus(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
              The modulo operator, element by element (componentwise) of the vector x_a
              on the left, but always with the number x_b on the right.
            </summary>
            <param name="x_a"></param>
            <param name="x_b"></param>
            <returns></returns>
        </member>
        <member name="T:CFX.Structures.Geometry.Vector4">
            <summary>
            Describes a 4D-vector.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector4.Zero">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector4"/> with components 0, 0, 0, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector4.One">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector4"/> with components 1, 1, 1, 1.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector4.UnitX">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector4"/> with components 1, 0, 0, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector4.UnitY">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector4"/> with components 0, 1, 0, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector4.UnitZ">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector4"/> with components 0, 0, 1, 0.
            </summary>
        </member>
        <member name="P:CFX.Structures.Geometry.Vector4.UnitW">
            <summary>
            Returns a <see cref="T:CFX.Structures.Geometry.Vector4"/> with components 0, 0, 0, 1.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector4.X">
            <summary>
            The x coordinate of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector4.Y">
            <summary>
            The y coordinate of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector4.Z">
            <summary>
            The z coordinate of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
        </member>
        <member name="F:CFX.Structures.Geometry.Vector4.W">
            <summary>
            The w coordinate of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Constructs a 3d vector with X, Y, Z and W from four values.
            </summary>
            <param name="x">The x coordinate in 4d-space.</param>
            <param name="y">The y coordinate in 4d-space.</param>
            <param name="z">The z coordinate in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.#ctor(CFX.Structures.Geometry.Vector2,System.Double,System.Double)">
            <summary>
            Constructs a 3d vector with X and Z from <see cref="T:CFX.Structures.Geometry.Vector2"/> and Z and W from the scalars.
            </summary>
            <param name="value">The x and y coordinates in 4d-space.</param>
            <param name="z">The z coordinate in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.#ctor(CFX.Structures.Geometry.Vector3,System.Double)">
            <summary>
            Constructs a 3d vector with X, Y, Z from <see cref="T:CFX.Structures.Geometry.Vector3"/> and W from a scalar.
            </summary>
            <param name="value">The x, y and z coordinates in 4d-space.</param>
            <param name="w">The w coordinate in 4d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.#ctor(System.Double)">
            <summary>
            Constructs a 4d vector with X, Y, Z and W set to the same value.
            </summary>
            <param name="value">The x, y, z and w coordinates in 4d-space.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Equals(System.Object)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Equals(CFX.Structures.Geometry.Vector4)">
            <summary>
            Compares whether current instance is equal to specified <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
            <param name="other">The <see cref="T:CFX.Structures.Geometry.Vector4"/> to compare.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.GetHashCode">
            <summary>
            Gets the hash code of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
            <returns>Hash code of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Length">
            <summary>
            Returns the length of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
            <returns>The length of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.LengthSquared">
            <summary>
            Returns the squared length of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
            <returns>The squared length of this <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Normalize">
            <summary>
            Turns this <see cref="T:CFX.Structures.Geometry.Vector4"/> to a unit vector with the same direction.
            </summary>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.ToString">
            <summary>
            Represents the vector in string format
            </summary>
            <returns>A string representation of the matrix</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Add(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and <paramref name="value2"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <returns>The result of the vector addition.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Add(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Performs vector addition on <paramref name="value1"/> and
            <paramref name="value2"/>, storing the result of the
            addition in <paramref name="result"/>.
            </summary>
            <param name="value1">The first vector to add.</param>
            <param name="value2">The second vector to add.</param>
            <param name="result">The result of the vector addition.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Barycentric(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,System.Double,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.
            </summary>
            <param name="value1">The first vector of 4d-triangle.</param>
            <param name="value2">The second vector of 4d-triangle.</param>
            <param name="value3">The third vector of 4d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 4d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 4d-triangle.</param>
            <returns>The cartesian translation of barycentric coordinates.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Barycentric(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,System.Double,System.Double,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains the cartesian coordinates of a vector specified in barycentric coordinates and relative to 4d-triangle.
            </summary>
            <param name="value1">The first vector of 4d-triangle.</param>
            <param name="value2">The second vector of 4d-triangle.</param>
            <param name="value3">The third vector of 4d-triangle.</param>
            <param name="amount1">Barycentric scalar <c>b2</c> which represents a weighting factor towards second vector of 4d-triangle.</param>
            <param name="amount2">Barycentric scalar <c>b3</c> which represents a weighting factor towards third vector of 4d-triangle.</param>
            <param name="result">The cartesian translation of barycentric coordinates as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.CatmullRom(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of CatmullRom interpolation.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.CatmullRom(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,System.Double,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains CatmullRom interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector in interpolation.</param>
            <param name="value2">The second vector in interpolation.</param>
            <param name="value3">The third vector in interpolation.</param>
            <param name="value4">The fourth vector in interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The result of CatmullRom interpolation as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Clamp(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Clamp(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Clamps the specified value within a range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The min value.</param>
            <param name="max">The max value.</param>
            <param name="result">The clamped value as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Distance(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The distance between two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Distance(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,System.Double@)">
            <summary>
            Returns the distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.DistanceSquared(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The squared distance between two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.DistanceSquared(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,System.Double@)">
            <summary>
            Returns the squared distance between two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The squared distance between two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Divide(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector4"/> by the components of another <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="value2">Divisor <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <returns>The result of dividing the vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Divide(CFX.Structures.Geometry.Vector4,System.Double)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <returns>The result of dividing a vector by a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Divide(CFX.Structures.Geometry.Vector4@,System.Double,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector4"/> by a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="divider">Divisor scalar.</param>
            <param name="result">The result of dividing a vector by a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Divide(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Divides the components of a <see cref="T:CFX.Structures.Geometry.Vector4"/> by the components of another <see cref="T:CFX.Structures.Geometry.Vector4"/>.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="value2">Divisor <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="result">The result of dividing the vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Dot(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The dot product of two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Dot(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,System.Double@)">
            <summary>
            Returns a dot product of two vectors.
            </summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <param name="result">The dot product of two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Hermite(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The hermite spline interpolation vector.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Hermite(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,System.Double,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains hermite spline interpolation.
            </summary>
            <param name="value1">The first position vector.</param>
            <param name="tangent1">The first tangent vector.</param>
            <param name="value2">The second position vector.</param>
            <param name="tangent2">The second tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">The hermite spline interpolation vector as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Lerp(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <returns>The result of linear interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Lerp(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,System.Double,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains linear interpolation of the specified vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">Weighting value(between 0.0 and 1.0).</param>
            <param name="result">The result of linear interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Max(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CFX.Structures.Geometry.Vector4"/> with maximal values from the two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Max(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a maximal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CFX.Structures.Geometry.Vector4"/> with maximal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Min(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The <see cref="T:CFX.Structures.Geometry.Vector4"/> with minimal values from the two vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Min(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a minimal values from the two vectors.
            </summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="result">The <see cref="T:CFX.Structures.Geometry.Vector4"/> with minimal values from the two vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Multiply(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <returns>The result of the vector multiplication.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Multiply(CFX.Structures.Geometry.Vector4,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Vector4"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <returns>The result of the vector multiplication with a scalar.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Multiply(CFX.Structures.Geometry.Vector4@,System.Double,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a multiplication of <see cref="T:CFX.Structures.Geometry.Vector4"/> and a scalar.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">The result of the multiplication with a scalar as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Multiply(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a multiplication of two vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="result">The result of the vector multiplication as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Negate(CFX.Structures.Geometry.Vector4)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <returns>The result of the vector inversion.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Negate(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains the specified vector inversion.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="result">The result of the vector inversion as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Normalize(CFX.Structures.Geometry.Vector4)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a normalized values from another vector.
            </summary>
            <param name="vector">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <returns>Unit vector.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Normalize(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a normalized values from another vector.
            </summary>
            <param name="vector">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="result">Unit vector as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.SmoothStep(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4,System.Double)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="amount">Weighting value.</param>
            <returns>Cubic interpolation of the specified vectors.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.SmoothStep(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,System.Double,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains cubic interpolation of the specified vectors.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">Cubic interpolation of the specified vectors as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Subtract(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains subtraction of on <see cref="T:CFX.Structures.Geometry.Vector4"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <returns>The result of the vector subtraction.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Subtract(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains subtraction of on <see cref="T:CFX.Structures.Geometry.Vector4"/> from a another.
            </summary>
            <param name="value1">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="value2">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="result">The result of the vector subtraction as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Matrix44)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="vector">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="position">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/>.
            </summary>
            <param name="vector">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector4[],CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector4[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CFX.Structures.Geometry.Vector4"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector4[],System.Int32,CFX.Structures.Geometry.Matrix44@,CFX.Structures.Geometry.Vector4[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CFX.Structures.Geometry.Vector4"/> by the specified <see cref="T:CFX.Structures.Geometry.Matrix44"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="matrix">The transformation <see cref="T:CFX.Structures.Geometry.Matrix44"/>.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CFX.Structures.Geometry.Vector4"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector2,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector3,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Quaternion)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <returns>Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/>.</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector2@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 2d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector2"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector3@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 3d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector3"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector4@,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector4@)">
            <summary>
            Creates a new <see cref="T:CFX.Structures.Geometry.Vector4"/> that contains a transformation of 4d-vector by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/>.
            </summary>
            <param name="value">Source <see cref="T:CFX.Structures.Geometry.Vector4"/>.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="result">Transformed <see cref="T:CFX.Structures.Geometry.Vector4"/> as an output parameter.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector4[],CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector4[])">
            <summary>
            Apply transformation on all vectors within array of <see cref="T:CFX.Structures.Geometry.Vector4"/> by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.Transform(CFX.Structures.Geometry.Vector4[],System.Int32,CFX.Structures.Geometry.Quaternion@,CFX.Structures.Geometry.Vector4[],System.Int32,System.Int32)">
            <summary>
            Apply transformation on vectors within array of <see cref="T:CFX.Structures.Geometry.Vector4"/> by the specified <see cref="T:CFX.Structures.Geometry.Quaternion"/> and places the results in an another array.
            </summary>
            <param name="sourceArray">Source array.</param>
            <param name="sourceIndex">The starting index of transformation in the source array.</param>
            <param name="rotation">The <see cref="T:CFX.Structures.Geometry.Quaternion"/> which contains rotation transformation.</param>
            <param name="destinationArray">Destination array.</param>
            <param name="destinationIndex">The starting index in the destination array, where the first <see cref="T:CFX.Structures.Geometry.Vector4"/> should be written.</param>
            <param name="length">The number of vectors to be transformed.</param>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_UnaryNegation(CFX.Structures.Geometry.Vector4)">
            <summary>
            Subtracts one vector from another
            </summary>
            <param name="value">Source vector</param>
            <returns>Resultant vector</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Equality(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Determines equality between two vecrors
            </summary>
            <param name="value1">Vector 1</param>
            <param name="value2">Vector 2</param>
            <returns>Equality boolean</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Inequality(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Determines if two vectors are not equal
            </summary>
            <param name="value1">Vector 1</param>
            <param name="value2">Vector 2</param>
            <returns>Inequality boolean</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Addition(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Adds two vectors
            </summary>
            <param name="value1">Vector 1</param>
            <param name="value2">Vectory2</param>
            <returns>Resultant vector</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Subtraction(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Subtracts two vectors
            </summary>
            <param name="value1">Vector 1</param>
            <param name="value2">Vectory2</param>
            <returns>Resultant vector</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Multiply(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Multiples two vectors
            </summary>
            <param name="value1">Vector 1</param>
            <param name="value2">Vectory2</param>
            <returns>Resultant vector</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Multiply(CFX.Structures.Geometry.Vector4,System.Double)">
            <summary>
            Scales a vactor
            </summary>
            <param name="value1">Source vector</param>
            <param name="scaleFactor">Amount to scale</param>
            <returns>Resultant vector</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Multiply(System.Double,CFX.Structures.Geometry.Vector4)">
            <summary>
            Scales a vector
            </summary>
            <param name="scaleFactor">Amount to scale</param>
            <param name="value1">Source vector</param>
            <returns>Resultant vector</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Division(CFX.Structures.Geometry.Vector4,CFX.Structures.Geometry.Vector4)">
            <summary>
            Divides one vector by another
            </summary>
            <param name="value1">Numerator vector</param>
            <param name="value2">Denominator vector</param>
            <returns>Resultant vector</returns>
        </member>
        <member name="M:CFX.Structures.Geometry.Vector4.op_Division(CFX.Structures.Geometry.Vector4,System.Double)">
            <summary>
            Divides a vector by a floating point value
            </summary>
            <param name="value1">Source vector</param>
            <param name="divider">Devisor</param>
            <returns>Resultant vector</returns>
        </member>
        <member name="T:CFX.Structures.HazardousMaterialType">
            <summary>
            Specifies whether or not a material is hazardous, and if so, the regulatory directive that controls
            the use of this substance in production.
            </summary>
        </member>
        <member name="F:CFX.Structures.HazardousMaterialType.NotHazardous">
            <summary>
            The material is not hazardous
            </summary>
        </member>
        <member name="F:CFX.Structures.HazardousMaterialType.Hazardous">
            <summary>
            The material is not hazardous, but not subject to any particular directives.
            </summary>
        </member>
        <member name="F:CFX.Structures.HazardousMaterialType.RoHS">
            <summary>
            The material is hazardoes, and is subject to the Restriction of Hazardous Substances Directive
            (RoHS)
            </summary>
        </member>
        <member name="T:CFX.Structures.Head">
            <summary>
            Represents a generic head on an automated endpoint.  This is the base class of a dynamic structure, permitting
            for specialized heads derived from this class.  Examples of heads are SMT placement heads used in the placement
            of electronic components on PCB's, or a dispensing head, used in the dispensing of fluids or glues.
            </summary>
        </member>
        <member name="M:CFX.Structures.Head.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Head.HeadId">
            <summary>
            A unique identifier describing this particular head instance.  Typically,
            this identifier is barcoded or otherwise labeled on the head.
            </summary>
        </member>
        <member name="P:CFX.Structures.Head.HeadSequence">
            <summary>
            Sequence of this head in the machine
            </summary>
        </member>
        <member name="P:CFX.Structures.Head.HeadName">
            <summary>
            A friendly name for this head
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.HeadInformation">
            <summary>
            Describes a particular head of an automated endpoint that uses one or more heads in the course of its work.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.HeadInformation.Head">
            <summary>
            A structure describing basic information about the head.
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.NamespaceDoc">
            <summary>
            Data structures related to SMT placement equipment
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDBulkCaseFeeder">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Describes an Bulk Case feeder.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDBulkCaseFeeder.CellDimensionX">
            <summary>
            The x dimension of each cell in this Bulk Case feeder
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDBulkCaseFeeder.CellDimensionY">
            <summary>
            The y dimension of each cell in this Bulk Case feeder
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDBulkCaseFeeder.CellCountX">
            <summary>
            The number of cells in the x axis in this Bulk Case feeder
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDBulkCaseFeeder.CellCountY">
            <summary>
            The number of cells in the y axis in this Bulk Case feeder
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDBulkCaseFeeder.CellPitchX">
            <summary>
            The x offset between adjacent cells in this Bulk Case feeder
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDBulkCaseFeeder.CellPitchY">
            <summary>
            The y offset between adjacent cells in this Bulk Case feeder
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDTapeFeeder">
            <summary>
            Describes an SMT Tape feeder.
            </summary>
        </member>
        <member name="M:CFX.Structures.SMTPlacement.SMDTapeFeeder.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapeFeeder.BaseUniqueIdentifier">
            <summary>
            For multi-lane feeders, the unique identifier of the base.  The UniqueIdentifier
            property should be populated with the unique identifer of the specific lane 
            within the feeder (if so labeled).  If lanes are not specifically labeled, both
            the UniqueIdentifer and BaseUniqueIdentifier prooperties should be populated
            with the same value.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapeFeeder.BaseName">
            <summary>
            The friendly name of the tape feeder base.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapeFeeder.LaneNumber">
            <summary>
            For multi-lane tape feeders, this is the number of the position
            of the lane within the feeder.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapeFeeder.TapeWidth">
            <summary>
            The width of the tape currently loaded on this feeder (in millimeters)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapeFeeder.TapePitch">
            <summary>
            The pitch (spacing between parts) of the tape currently loaded on this feeder (in millimeters)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDTapePackagingInfo">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Describes the packaging infos of an SMD tape
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapePackagingInfo.TapeWidth">
            <summary>
            The width of the tape (in millimeters)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapePackagingInfo.TapePitch">
            <summary>
            The pitch (spacing between parts) of the tape (in millimeters)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapePackagingInfo.TapeDiameter">
            <summary>
            The diameter of the tape (in millimeters)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapePackagingInfo.TapeThickness">
            <summary>
            The thickness of the tape (in millimeters)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDTapePitch">
            <summary>
            Pitch of Tape Feeder
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Adjustable">
            <summary>
            Adjustable Pitch Feeder
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Pitch2mm">
            <summary>
            2mm Pitch
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Pitch4mm">
            <summary>
            4mm Pitch
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Pitch8mm">
            <summary>
            8mm Pitch
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Pitch12mm">
            <summary>
            12mm Pitch
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Pitch16mm">
            <summary>
            16mm Pitch
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Pitch24mm">
            <summary>
            24mm Pitch
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Pitch32mm">
            <summary>
            32mm Pitch
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Pitch36mm">
            <summary>
            36mm Pitch
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapePitch.Other">
            <summary>
            Pitch other than those specified in this enumeration
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDTapeType">
            <summary>
            Tape type for Package of Taped SMD's
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeType.Embossed">
            <summary>
            Embossed Tape
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeType.PunchedPaper">
            <summary>
            Punched Paper Tape
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDTapeWidth">
            <summary>
            Width of Taped SMD's
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeWidth.Tape8mm">
            <summary>
            8mm Width
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeWidth.Tape12mm">
            <summary>
            12mm Width
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeWidth.Tape16mm">
            <summary>
            16mm Width
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeWidth.Tape24mm">
            <summary>
            24mm Width
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeWidth.Tape32mm">
            <summary>
            32mm Width
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeWidth.Tape44mm">
            <summary>
            44mm Width
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeWidth.Tape79mm">
            <summary>
            79mm Width
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMDTapeWidth.Other">
            <summary>
            Some width other than those specified in this enumeration
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDTrayFeeder">
            <summary>
            Describes an SMT Tray carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTrayFeeder.CellDimensionX">
            <summary>
            The x dimension of each cell in the tray carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTrayFeeder.CellDimensionY">
            <summary>
            The y dimension of each cell in the tray carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTrayFeeder.CellCountX">
            <summary>
            The number of cells in the x axis in this tray carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTrayFeeder.CellCountY">
            <summary>
            The number of cells in the y axis in this tray carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTrayFeeder.CellPitchX">
            <summary>
            The x offset between adjacent cells in the tray carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTrayFeeder.CellPitchY">
            <summary>
            The y offset between adjacent cells in the tray carrier
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDTubeFeeder">
            <summary>
            Describes and SMT Tube Feeder
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubeFeeder.BaseUniqueIdentifier">
            <summary>
            The unique identifier of the vibratoryb tube feeder base of which this
            tube feeder position is a member.  If lanes are not specifically labeled, 
            both the UniqueIdentifer field and this property should be populated
            with the same value.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubeFeeder.BaseName">
            <summary>
            The friendly name of the tube feeder base.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubeFeeder.LaneNumber">
            <summary>
            The position number of this tube feeder position within its base.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubeFeeder.Width">
            <summary>
            The width of this lane within the tube feeder (in mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubeFeeder.Pitch">
            <summary>
            The offset between this lane and the next adjacent lane in this tube feeder
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMDTubePackagingInfo">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Describes the packaging infos of an SMD tape
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubePackagingInfo.TubeWidth">
            <summary>
            The width of the tube (in millimeters)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubePackagingInfo.TubePitch">
            <summary>
            The pitch (spacing between parts) of the tube (in millimeters)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubePackagingInfo.TubeLength">
            <summary>
            The length of the tube (in millimeters)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubePackagingInfo.TubeThickness">
            <summary>
            The thickness of the tube (in millimeters)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTHeadAndNozzle">
            <summary>
            Describes a particular nozzle and head combination that was used in the course of production.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTHeadAndNozzle.HeadId">
            <summary>
            The name or identifier of the SMT head associated with this SMT Nozzle.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTHeadAndNozzle.HeadNozzleNumber">
            <summary>
            The spindle number on the head to which this SMT Nozzle is attached
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTHeadAndNozzle.NozzleType">
            <summary>
            The type or model name of this SMT Nozzle
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTHeadInformation">
            <summary>
            Describes a head for an endpoint that is an SMT placement machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTHeadInformation.SMTHeadType">
            <summary>
            An enumeration indicating the purpose of this particular head
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTHeadInformation.NumberOfNozzleLocations">
            <summary>
            Indicates the number of nozzle locations
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTHeadInformation.PlacementAccuracy">
            <summary>
            The accuracy of this head, expressed in mm. For example, a head that can accurately
            place components to 1 micron would have accuracy of 0.001 mm.
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTHeadResource">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Represents the generic sub-resources of a generic head. For example, camera 
            mounted on the head in a specific position
            </summary>
        </member>
        <member name="M:CFX.Structures.SMTPlacement.SMTHeadResource.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTHeadResource.Cameras">
            <summary>
            A list of camera located on the Head
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTHeadResource.RotationAxes">
            <summary>
            If applicable, the rotation axis of the part located on the Head
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTHeadType">
            <summary>
            An enumeration indicating different types of SMT heads that might exist at an endpoint.
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTHeadType.Turret">
            <summary>
            Turret head type
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTHeadType.Pulsar">
            <summary>
            Pulsar head type
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTInstalledComponent">
            <summary>
            Describes a particular InstalledComponent for SMT Placement
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTInstalledComponent.HeadAndNozzle">
            <summary>
            The particular Head / Nozzle with which the component has been installed
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTLaneInformation">
            <summary>
            Describes a lane for an endpoint that is an SMT placement machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTLaneInformation.LaneNumber">
            <summary>
            The lane number.  Corresponds with Lane property in production messages.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTLaneInformation.LaneName">
            <summary>
            The friendly name of this lane.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTLaneInformation.SupportedPCBDimensions">
            <summary>
            The maximum and minimum dimensions that a PCB panel or fixture must conform
            to in order to be processed by this lane.
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTLogEntryAdditionalData">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            A specialized type of LogEntryRecordedData for an SMT machine
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTLogEntryAdditionalData.HeadAndNozzle">
            <summary>
            The particular Head/Nozzle related to the log entry (where applicable)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTNonInstalledComponent">
            <summary>
            Describes a particular NonInstalledComponent for SMT Placement
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTNonInstalledComponent.HeadAndNozzle">
            <summary>
            The particular Head / Nozzle with which the component has not been installed
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTNozzleChangeActivity">
            <summary>
            A specialized type of Activity that occurs when a unit is loaded into an endpoint.
            </summary>
        </member>
        <member name="M:CFX.Structures.SMTPlacement.SMTNozzleChangeActivity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTNozzleChangeActivity.OldNozzles">
            <summary>
            The nozzles that were removed (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTNozzleChangeActivity.NewNozzles">
            <summary>
            The new nozzles that were loaded (mandatory)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTNozzleChanger">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Nozzle Changer resource in an Endpoint. It may have a lifecycle independent
            from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTNozzleChangerPocket">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Nozzle change garage resource in an resource in an Endpoint's setup.
            It may have a lifecycle independent from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTPlacementActivity">
            <summary>
            A specialized type of Activity that occurs when a unit is under placement
            </summary>
        </member>
        <member name="M:CFX.Structures.SMTPlacement.SMTPlacementActivity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementActivity.PlacementType">
            <summary>
            The type of placement for this activity
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementActivity.Heads">
            <summary>
            <para>** NOTE: CHANGED in CFX 1.2 from single head to multiple heads **</para>
            The Heads used for the placement
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTPlacementConstraints">
            <summary>
            Describes the placement constraints / capabilities of an SMT Placement Machine
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MinumumComponentBodySizeX">
            <summary>
            The minimum body size in the X dimension that a component
            must be in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MaximumComponentBodySizeX">
            <summary>
            The maximum body size in the X dimension that a component
            may be in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MinumumComponentBodySizeY">
            <summary>
            The minimum body size in the Y dimension that a component
            must be in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MaximumComponentBodySizeY">
            <summary>
            The maximum body size in the Y dimension that a component
            may be in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MinumumComponentHeight">
            <summary>
            The minimum height that a component
            must be in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MaximumComponentHeight">
            <summary>
            The maximum height that a component
            may be in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MinimumLeadWidth">
            <summary>
            The minimum lead width that a component
            must have in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MinimumBGAPitch">
            <summary>
            The minimum ball pitch that a BGA type component
            must have in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MinimumSOICPitch">
            <summary>
            The minimum lead pitch that an SOIC type component
            must have in order to be placed.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MinimumMountingPressure">
            <summary>
            The minimum amount of pressure that will be exerted on components during placement, 
            expressed in kPa
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementConstraints.MaximumMountingPressure">
            <summary>
            The minimum amount of pressure that will be exerted on components during placement, 
            expressed in kPa
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTPlacementEndpoint">
            <summary>
            Describes the details of a particular Endpoint that is participating in a CFX network, 
            and more specifically, is an SMT placement machine.  This is a dynamic structure.
            </summary>
        </member>
        <member name="M:CFX.Structures.SMTPlacement.SMTPlacementEndpoint.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementEndpoint.NominalPlacementCPH">
            <summary>
            The nominal number of components that this endpoint can place per hour.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementEndpoint.NominalUnitsPerHour">
            <summary>
            The average (nominal) number of production units per hour this endpoin
            is capable of producing.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementEndpoint.Lanes">
            <summary>
            Information about the production lanes of this SMT placement machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementEndpoint.Heads">
            <summary>
            Information about the heads of this SMT placement machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementEndpoint.PlacementConstraints">
            <summary>
            The placement constraints / capabilities of this endpoint.
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTPlacementFault">
            <summary>
            A specific type of fault that is produced by endpoints responsible
            for the picking and placing of SMD components
            </summary>
        </member>
        <member name="M:CFX.Structures.SMTPlacement.SMTPlacementFault.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementFault.PlacementFaultType">
            <summary>
            The specific type of SMT placement fault 
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementFault.ProgramStep">
            <summary>
            An integer representing the step in the program/recipe that was
            being executed when the fault occurred (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementFault.Designator">
            <summary>
            Identifies the specific component the placer was trying to place
            when the fault occurred (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementFault.MaterialLocation">
            <summary>
            The material carrier location related to this fault (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTPlacementFault.HeadAndNozzle">
            <summary>
            The placement head and nozzle related to this fault (where applicable)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTPlacementFaultType">
            <summary>
            Types of SMT Placement Faults
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.VacuumError">
            <summary>
            Insufficient vacuum to manipulate part.
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.XAxisError">
            <summary>
            Problem with the x motion axis
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.YAxisError">
            <summary>
            Problem with the y motion axis
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.ZAxisError">
            <summary>
            Problem with the z motion axis
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.RecognitionError">
            <summary>
            Part not recognized by vision system
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.PickupError">
            <summary>
            Part not picked up properly
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.PlacementError">
            <summary>
            Part not place properly
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.LightingError">
            <summary>
            Insufficient or incorrect lighting.  Vision system not able to characterize part
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.HeadError">
            <summary>
            Error with placement head
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.NozzleError">
            <summary>
            Error with placement nozzle
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.ComponentDropped">
            <summary>
            Component dropped in transit
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.PartsExhaust">
            <summary>
            Material supply exhausted
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.FiducialError">
            <summary>
            Error decoding fiducial reference mark
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.PartsPartiallyExhaust">
            <summary>
            Material supply partially exhausted. Can happen if a head is supposed to pickup in several locations and one of them is exhausted
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.LowQuantity">
            <summary>
            Material supply will soon be exhausted
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementFaultType.FeederError">
            <summary>
            Error with placement feeder
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTPlacementType">
            <summary>
            An enumeration indicating different types of placement for an SMT machine
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementType.Manual">
            <summary>
            Manual placement
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementType.StepByStep">
            <summary>
            Step by step placement
            </summary>
        </member>
        <member name="F:CFX.Structures.SMTPlacement.SMTPlacementType.Automatic">
            <summary>
            Automatic placement
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTStageInformation">
            <summary>
            Describes a stage (zone) for an endpoint that is an SMT placement machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTStageInformation.NumberOfFeederStations">
            <summary>
            The number of stations where a feeder may be mounted for this stage.
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTTable">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Table (also know as change over table) resource in an Endpoint's setup.
            It may have a lifecycle independent from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTTapeCutter">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Tape cutter resource in an Endpoint. It may have a lifecycle independent
            from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTPlacement.SMTUnitAlignmentActivity">
            <summary>
            A specialized type of Activity that occurs when a unit is aligned (located / positioned) within a stage
            of an SMT machine prior to the commencement of work.
            </summary>
        </member>
        <member name="M:CFX.Structures.SMTPlacement.SMTUnitAlignmentActivity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMTUnitAlignmentActivity.Head">
            <summary>
            The Head used for the alignment
            </summary>
        </member>
        <member name="T:CFX.Structures.HermesInformation">
            <summary>
            Structure that contains information related to an Endpoint's support of the Hermes standard.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesInformation.Enabled">
            <summary>
            Whether or not the Endpoint has Hermes support enabled.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesInformation.Version">
            <summary>
            The specific version of Hermes supported by the Endpoint.
            </summary>
        </member>
        <member name="T:CFX.Structures.HermesUnit">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Structure that contains information related to a Unit (Board) according to the Hermes standard.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.SlotId">
            <summary>
            Indicates the slot in the magazine, enumerated from bottom to top, beginning with 1.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.BoardId">
            <summary>
            Indicating the ID of the available board (GUID, 36 bytes)
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.BoardIdCreatedBy">
            <summary>
            MachineId of the machine which created the BoardId 
            (the first machine in a consecutive row of machines implementing this protocol). 
            The MachineId is part of the Hermes configuration.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.FailedBoard">
            <summary>
            A value of the list below.
            0	Board of unknown quality available
            1	Good board available
            2	Failed board available
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.ProductTypeId">
            <summary>
            Identifies a collection of printed boards sharing common properties.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.FlippedBoard">
            <summary>
            A value of the list below:
            0	Side up is unknown
            1	Board top side is up
            2	Board bottom side is up
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.TopBarcode">
            <summary>
            The barcode of the top side of the printed board.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.BottomBarcode">
            <summary>
            The barcode of the bottom side of the printed board.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.Lenght">
            <summary>
            The length of the printed board in millimeter.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.Width">
            <summary>
            The width of the printed board in millimeter.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.Thickness">
            <summary>
            The thickness of the printed board in millimeter.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.ConveyorSpeed">
            <summary>
            The conveyor speed preferred by the upstream machine in millimeter per second.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.TopClearanceHeight">
            <summary>
            The clearance height for the top side of the printed board in millimeter.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.BottomClearanceHeight">
            <summary>
            The clearance height for the bottom side of the printed board in millimeter.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.Weight">
            <summary>
            The weight of the printed board in grams.
            </summary>
        </member>
        <member name="P:CFX.Structures.HermesUnit.WorkOrderIdentifier">
            <summary>
            Identifier of the Work Order (Batch and ID).
            </summary>
        </member>
        <member name="T:CFX.Structures.Humidity">
            <summary>
            A type of environmental condition indicating moisture level
            </summary>
        </member>
        <member name="T:CFX.Structures.IdentiferUniquenessType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            An enumeration indicating the type of unique identifier for the specified endpoint / resource / sub-resource
            Values: GloballyPersistent, LocallyPersistent, UnserializedLocation or Unknown
            </summary>
        </member>
        <member name="F:CFX.Structures.IdentiferUniquenessType.Unkwnown">
            <summary>
            Unknown: no fixed relationship with a physical object 
            </summary>
        </member>
        <member name="F:CFX.Structures.IdentiferUniquenessType.GloballyPersistent">
            <summary>
            Globally valid: it follows the resource in its whole lifecycle (i.e. across all machines)
            </summary>    
        </member>
        <member name="F:CFX.Structures.IdentiferUniquenessType.LocallyPersistent">
            <summary>
            Locally valid: it stays constant as long as the resource is in the current machine (i.e. it may change when in another)
            </summary>    
        </member>
        <member name="F:CFX.Structures.IdentiferUniquenessType.UnserializedLocation">
            <summary>
            No identifier for the given location
            </summary>
        </member>
        <member name="T:CFX.Structures.Image">
            <summary>
            A data structure that representing a two dimensional image, in the designated MIME format.
            </summary>
        </member>
        <member name="M:CFX.Structures.Image.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Image.MimeType">
            <summary>
            The MIME type of the binary image data contained by the ImageData property.
            </summary>
        </member>
        <member name="P:CFX.Structures.Image.TransferMode">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Specifies the mode of transfer.  Image data may be transferred within the CFX messages themselves (In-Band),
            or transferred via a separate secure protocol (Out-of-Band), such as HTTPS, SFTP, etc.
            Direct, in-band file transfer is not recommended for larger data files.  Many AMQP message broker platforms
            limit the maximum total message size of an AMQP message.  Microsoft's Azure message bus, for example, limits messages
            to 256KB for a standard subscription, and 1MB for a premium subscription.  RabbitMQ recommends limiting messages to 128MB or less.
            Use OutOfBand transfer for larger file sizes.
            </summary>
        </member>
        <member name="P:CFX.Structures.Image.ImageData">
            <summary>
            If TransferMode is FileTransferMode.InBand, this property is the
            binary representation of the image.  Otherwise, this property should be NULL.
            </summary>
        </member>
        <member name="P:CFX.Structures.Image.ImageURL">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            For image transfers using FileTransferMode.OutOfBand, this property contains a secure hyperlink
            (URL) that may be used to download the image payload data.  Otherwise, this property should be NULL.
            Only encrypted, secure protocols (eg. https:// , sftp:// , etc) should be used for out of band transfers.  
            The CFX standard does not define any specific protcol for out of band transfers, so end-users are free to use
            a secure protocol of their choosing.  URL's may contain authentication information using industry
            standard URL formatting (eg. https://[username]:[password]@server.domain.com/DataFiles/DataFile1.json ).
            Other forms of authentication, such as file access tokens and keys as URL parameters, are also acceptable.
            CFX is flexible, and supports any encryption scheme, protocol, and authentication mechanism where all
            data information necessary to access the data file securely can be contained in standard URL format.
            </summary>
        </member>
        <member name="T:CFX.Structures.InspectedPanel">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            Describes the results of a series of inspections performed on a panel.
            </summary>
        </member>
        <member name="M:CFX.Structures.InspectedPanel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedPanel.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedPanel.OverallResult">
            <summary>
            The overall result of the inspections performed on this panel
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedPanel.Inspections">
            <summary>
            A list of the inspections performed, along with the results
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedPanel.Verification">
            <summary>
            The overall result of the verification of the defect
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedPanel.TotalInspectionCount">
            <summary>
            The count of all the inspections performed.  
            If The Inspections array includes both passed and failed inspections
            then this parameter would just be the length of that array.  
            However if only failed inspections are included in the Inspections
            array then just the number of inspections performed (passing and failing) 
            can be communicated here so that receiving system can calculate defect
            rates. 
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedPanel.Stretch">
            <summary>
            Relative stretch ratio of the inspected panel (e.g., value = 1  no stretch / no shrinkage) 
            value between 0 and 1: shrinkage;
            value above 1: stretch
            value null: not possible to send this information
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedPanel.RecognizedStrokeDirection">
            <summary>
            Recognized Squeegee stroke direction
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedPanel.Fiducials">
            <summary>
            This structure represents a Fiducial element. It is used to enrich the panel
            </summary>
        </member>
        <member name="T:CFX.Structures.InspectedUnit">
            <summary>
            Describes the results of a series of inspections performed on a single production unit.
            </summary>
        </member>
        <member name="M:CFX.Structures.InspectedUnit.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedUnit.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedUnit.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard)
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedUnit.OverallResult">
            <summary>
            The overall result of the inspections performed on this unit
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedUnit.Inspections">
            <summary>
            A list of the inspections performed, along with the results
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedUnit.Verification">
            <summary>
            The overall result of the verification of the defect
            </summary>
        </member>
        <member name="P:CFX.Structures.InspectedUnit.TotalInspectionCount">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            The count of all the inspections performed.  
            If The Inspections array includes both passed and failed inspections
            then this parameter would just be the length of that array.  
            However if only failed inspections are included in the Inspections
            array then just the number of inspections performed (passing and failing) 
            can be communicated here so that receiving system can calculate defect
            rates. 
            </summary>
        </member>
        <member name="T:CFX.Structures.Inspection">
            <summary>
            Describes a single step in a series of steps that an inspector makes (both human or automation)
            in the course of inspecting a production unit.
            </summary>
        </member>
        <member name="M:CFX.Structures.Inspection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.UniqueIdentifier">
            <summary>
            A unique indentifier describing a particular instance of an inspection was made.
            Each new occurrence or recurrence of this same inspection gets a new unique identifier.
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.InspectionName">
            <summary>
            Identifies the nature of the inspection performed
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.InspectionStartTime">
            <summary>
            Indicates the time when this particular inspection began (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.InspectionEndTime">
            <summary>
            Indicates the time when this particular inspection ended (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.TestProcedure">
            <summary>
            Procedure to be followed to perform this inspection (primarily for human driven inspection)
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.Comments">
            <summary>
            Optional comments from the inspector who inspected the unit
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.Result">
            <summary>
            The overall result of the inspection
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.Verification">
            <summary>
            The overall result of the verification of the defect
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.VerificationDetail">
            <summary>
            When a verification took place, the VerificationDetail will contain a classification or more detailed description
            of the root cause of the defect or why the defect is a false fail.
            This description is typically maintained by the customer and the operator will choose from a predefined list.
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.Error">
            <summary>
            In the case that the inspection cannot be completed, the error that was the cause of this outcome.
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.DefectsFound">
            <summary>
            The defects that were discovered in the course of performing this inspection (if any)
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.Symptoms">
            <summary>
            Any symptoms that were discovered during the inspection (if any).
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.Measurements">
            <summary>
            The measurements that were taken in the course of performing this inspection (if any).
            NOTE - Only measurements not related to particular defects or symptoms should be recorded here.
            </summary>
        </member>
        <member name="P:CFX.Structures.Inspection.RefNo">
            <summary>
            Unique Number of the inspection object, The RefNo is the unique link between the Inspection class and the InspectionObject class
            </summary>
        </member>
        <member name="T:CFX.Structures.InspectionMethod">
            <summary>
            Method of testing
            </summary>
        </member>
        <member name="F:CFX.Structures.InspectionMethod.Human">
            <summary>
            The inspection was performed by a human being
            </summary>
        </member>
        <member name="F:CFX.Structures.InspectionMethod.AOI">
            <summary>
            The inspection was performed by automated optical inspection equipment / device
            </summary>
        </member>
        <member name="F:CFX.Structures.InspectionMethod.SPI">
            <summary>
            The inspection was performed by automated solder paste inspection equipment / device
            </summary>
        </member>
        <member name="F:CFX.Structures.InspectionMethod.AXI">
            <summary>
            The test was performed by an automated X-Ray inspection machine
            </summary>
        </member>
        <member name="T:CFX.Structures.InstalledComponent">
            <summary>
            Describes a particular location on a production unit where materials / parts were installed.
            </summary>
        </member>
        <member name="M:CFX.Structures.InstalledComponent.#ctor(System.Boolean)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledComponent.ReferenceDesignator">
            <summary>
            Location on production unit where material / parts were installed
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledComponent.InstallationTime">
            <summary>
            The specific time when this material / part was installed on the production unit (optional, when known)
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledComponent.Stage">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The stage name or number
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledComponent.ElectricalTest">
            <summary>
            The electrical test result of this component (optional)
            </summary>
        </member>
        <member name="T:CFX.Structures.InstalledMaterial">
            <summary>
            Describes a single lot of material that was installed on a production unit, possibly
            in specific locations on the production unit.
            </summary>
        </member>
        <member name="M:CFX.Structures.InstalledMaterial.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard).
            unit’s true unique identifier.  
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.QuantityInstalled">
            <summary>
            The total quantity of parts or material installed of this particular MaterialPackage (lot)
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.QuantityNonInstalled">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            The total quantity of parts or material non installed of this particular MaterialPackage (lot)
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.Material">
            <summary>
            The material package that was installed
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.CarrierLocation">
            <summary>
            Carrier and Location on the endpoint from which the material was dispensed (when applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.InstalledComponents">
            <summary>
            A list of where the on the production unit the materials / parts were installed.
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.NonInstalledComponents">
            <summary>
            A list of where the on the production unit the materials / parts were not installed.
            </summary>
        </member>
        <member name="P:CFX.Structures.InstalledMaterial.ReferencePartNumber">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            If the material package is used as an alternate part, this parameter indicates the original part number.
            For example, if A0805-001 was supposed to be used but A0805-002 was used instead (because A0805-001 was missing for example),
            the internal part number of the material package will be A0805-002, and the referecne part number will be A0805-001.
            </summary>
        </member>
        <member name="T:CFX.Structures.IssueStatus">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            An enumeration which describes the lifecycle of an issue, such as a Defect or Symptom
            </summary>
        </member>
        <member name="F:CFX.Structures.IssueStatus.NewlyDiscovered">
            <summary>
            The issue is newly discovered
            </summary>
        </member>
        <member name="F:CFX.Structures.IssueStatus.Confirmed">
            <summary>
            The issue has been confirmed
            </summary>
        </member>
        <member name="F:CFX.Structures.IssueStatus.False">
            <summary>
            The issue is not confirmed, and considered to be invalid (false defect, symptom, etc.)
            </summary>
        </member>
        <member name="F:CFX.Structures.IssueStatus.Repaired">
            <summary>
            The issue has been repaired
            </summary>
        </member>
        <member name="F:CFX.Structures.IssueStatus.Closed">
            <summary>
            The issue has been fully resolved, and closed
            </summary>
        </member>
        <member name="T:CFX.Structures.LaserMarking.LaserMarkingProcessData">
            <summary>
            Provides information about the conditions within a reflow oven at a given point in time.
            </summary>
        </member>
        <member name="M:CFX.Structures.LaserMarking.LaserMarkingProcessData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.LaserMarking.LaserMarkingProcessData.LaserProcessingTime">
            <summary>
            Total amount of time that the laser was used during processing.
            </summary>
        </member>
        <member name="P:CFX.Structures.LaserMarking.LaserMarkingProcessData.RecipeName">
            <summary>
            The name of the active recipe at the time when the processing occurred.
            </summary>
        </member>
        <member name="T:CFX.Structures.LockReason">
            <summary>
            Reason for a production lock condition
            </summary>
        </member>
        <member name="F:CFX.Structures.LockReason.QualityIssue">
            <summary>
            Production locked due to quality related issue
            </summary>
        </member>
        <member name="F:CFX.Structures.LockReason.PreventativeMaintenance">
            <summary>
            Production locked due to preventative maintenance
            </summary>
        </member>
        <member name="F:CFX.Structures.LockReason.UnscheduledMaintenance">
            <summary>
            Production locked due to unscheduled maintenance
            </summary>
        </member>
        <member name="F:CFX.Structures.LockReason.GeneralLock">
            <summary>
            Production locked for unspecified reason
            </summary>
        </member>
        <member name="T:CFX.Structures.LogEntryAdditionalData">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            A dynamic structure describing additional data for the LogEntryRecorded message
            </summary>
        </member>
        <member name="T:CFX.Structures.LogImportance">
            <summary>
            Importance of an event log entry
            </summary>
        </member>
        <member name="F:CFX.Structures.LogImportance.Debug">
            <summary>
            Useful for debugging purposes
            </summary>
        </member>
        <member name="F:CFX.Structures.LogImportance.Information">
            <summary>
            General information
            </summary>
        </member>
        <member name="F:CFX.Structures.LogImportance.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:CFX.Structures.LogImportance.Error">
            <summary>
            Recoverable error
            </summary>
        </member>
        <member name="F:CFX.Structures.LogImportance.Fatal">
            <summary>
            Error that caused an unrecoverable condition
            </summary>
        </member>
        <member name="T:CFX.Structures.Magazine">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Structure that contains information related to a magazine.
            </summary>
        </member>
        <member name="M:CFX.Structures.Magazine.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Magazine.MagazineId">
            <summary>
            Barcode of a magazine, required to identify the magazine.
            </summary>
        </member>
        <member name="P:CFX.Structures.Magazine.HermesUnits">
            <summary>
            List of Hermes units (i.e. Boards) contained in the magazine.
            </summary>
        </member>
        <member name="T:CFX.Structures.MaintenanceStatus">
            <summary>
            Maintenance status provides the information about the condition of a
            resource in a resource / machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaintenanceStatus.Reason">
            <summary>
            The reason why the resource should be locked in case of result state is not ok  
            </summary>
        </member>
        <member name="P:CFX.Structures.MaintenanceStatus.ResultState">
            <summary>
            The result status of the response to the request.
            </summary>
        </member>
        <member name="T:CFX.Structures.MaintenanceState">
            <summary>
            Possible Maintenance status. It is used in the response message, after 
            the endpoint / resource has sent a status info request
            </summary>
        </member>
        <member name="F:CFX.Structures.MaintenanceState.Unknown">
            <summary>
            Maintenance status is not known
            </summary>
        </member>
        <member name="F:CFX.Structures.MaintenanceState.Ok">
            <summary>
            Maintenance status is Ok
            </summary>
        </member>
        <member name="F:CFX.Structures.MaintenanceState.NotOk">
            <summary>
            Maintenance status is Not ok
            </summary>
        </member>
        <member name="T:CFX.Structures.MaintenanceTask">
            <summary>
            Represents a task that was performed during a maintenance operation.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaintenanceTask.Task">
            <summary>
            Free form description of the task.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaintenanceTask.TaskId">
            <summary>
            A string based identifier that uniquely describes this particular instance of the task.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaintenanceTask.Operator">
            <summary>
            The operator who perform the task (optional)
            </summary>
        </member>
        <member name="P:CFX.Structures.MaintenanceTask.ManHoursConsumed">
            <summary>
            The number of man-hours consumed while performing the task
            </summary>
        </member>
        <member name="T:CFX.Structures.MaintenanceType">
            <summary>
            Types of Maintenance
            </summary>
        </member>
        <member name="F:CFX.Structures.MaintenanceType.Preventive">
            <summary>
            Maintenance intended to prevent breakdowns that have not yet occurred
            </summary>
        </member>
        <member name="F:CFX.Structures.MaintenanceType.Inspection">
            <summary>
            Inspection intended to prevent breakdowns that have not yet occurred
            </summary>
        </member>
        <member name="F:CFX.Structures.MaintenanceType.Repair">
            <summary>
            Repair of a breakdown that has occurred.
            </summary>
        </member>
        <member name="F:CFX.Structures.MaintenanceType.Test">
            <summary>
            Testing of repairs made
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.CounterType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            An enumeration indicating the type of counter that is capture by the Endpoint and its resources / sensors
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.CounterType.Unkwnown">
            <summary>
            Unknown counter
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.CounterType.General">
            <summary>
            General counter
            </summary>    
        </member>
        <member name="F:CFX.Structures.Maintenance.CounterType.NonStandard">
            <summary>
             Non standard counter.
             It shall be used in combination with the CustomCounterType field
             </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.CounterType.Odometer">
            <summary>
            Rotation, mileage measured by a sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.CounterType.Timer">
            <summary>
            Time based sensor, in hour
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.CounterType.ActivityCount">
            <summary>
            Counter for the sensor specified by the name and position
            It can be, among the others: cuts, flashes, pumps, picking components, placed components, rotations
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.ErrorInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic structure that contains information related to the errors of the 
            resources / sub-resources in an Endpoint.
            It is used in maintenance context
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ErrorInformation.Name">
            <summary>
            Name of the error(text output)
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ErrorInformation.ErrorCode">
            <summary>
            When available, the error code from the machine
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ErrorInformation.OccurrenceTime">
            <summary>
            The time when the error has been raised
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.MaintenanceInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic structure that contains information related to the counters of the 
            resources / sub-resources in an Endpoint. It is the information that allows the
            receiving system to plan / execute the maintenance operations
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.Name">
            <summary>
            The user friendly name of counter data source.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.CounterType">
            <summary>
            The type of the counter for this element.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.CustomCounterType">
            <summary>
            Optional field. 
            When CounterType = NonStandard, this field allows the sender to specify a custom counter
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.MeasurementLocation">
            <summary>
            The location of the data source providing the counter information (optional, only if available).
            It may be used to distinguish, for example, the counters of multi-lane feeder
            Where applicable, a dot (".") notation should be utilized to designate specific positions.
            Examples: MODULE1.BEAM1.HEADPOS2, MODULE1.NEST3.NOZZLESLOT4, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.CurrentCounterValue">
            <summary>
            The current value of the counter.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.CurrentRatio">
            <summary>
            The current maintenance ratio at reading time. This value is close to 0 for 
            recent executed maintenance and close to 100 for parts requiring maintenance.
            NOTE: this value may be also more than 100
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.CurrentRatioValid">
             <summary>
            Provides additional information on the lifetime usage of this part. 
            It is "false" for parts which do not own an independent maintenance cycle.
            Instead, the maintenance is done as part of a higher level resource 
            (for example the maintenance of rotation-axis, star axis, and z axis are part of head maintenance) or not at all
             </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.CurrentTimeStamp">
            <summary>
            Timestamp when the maintenance counter was sampled. 
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.LastMaintenanceCounterValue">
            <summary>
            The value of the counter during the last maintenance
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.LastMaintenanceTimeStamp">
            <summary>
            Timestamp when the last maintenance was done. 
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceInformation.LastMaintenanceValid">
             <summary>
            It is true, if at least one maintenance was succesfully done.
            If false, both LastMaintenanceCounterValue and LastMaintenanceTimeStamp are invalid and cannot be used. 
             </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.MaintenanceResource">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Describes the resources / sub-resources of a particular Endpoint that is participating in a CFX network, 
            and more specifically, is an SMT placement machine.  This is a dynamic structure.
            </summary>
        </member>
        <member name="M:CFX.Structures.Maintenance.MaintenanceResource.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MaintenanceResource.Resources">
            <summary>
            Generic list for the sub-resources in this resource (machine)
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.SensorInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic structure that contains information related to the sensor of the 
            resources / sub-resources in an Endpoint.
            It may be used to model the sensor on  
            parts that may require traceable operations (i.e. maintenance)
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SensorInformation.Type">
            <summary>
            The type of the sensor in this position of the resource / machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SensorInformation.CustomSensorType">
            <summary>
            Optional field. 
            When SensorType = NonStandard, this field allows the sender to specify a custom sensor
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SensorInformation.Value">
            <summary>
            The value of the performed verification.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SensorInformation.LowLimit">
            <summary>
            The low limit value of the performed verification (optional)
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SensorInformation.HighLimit">
            <summary>
            The high limit value of the performed verification (optional)
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SensorInformation.UnitOfMeasure">
            <summary>
            The unit of measure of the performed sample (if applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SensorInformation.CustomUnitOfMeasure">
            <summary>
            Optional field. 
            When UnitOfMeasure = NonStandard, this field allows the sender to specify a custom unit of measure
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SensorInformation.SampleTime">
            <summary>
            The last time when the verification has been executed
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.SensorType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            An enumeration indicating the type of sensor that is located in a resource / sub-resource / endpoint
            The type of the sensor (distance, temperature, time etc.). It shall be used together with the SensorUnitOfMeasure
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Unkwnown">
            <summary>
            Unknown sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.General">
            <summary>
            General sensor
            </summary>    
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.NonStandard">
            <summary>
            Non standard sensor.
            It shall be used in combination with the CustomSensorType field
            </summary>    
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Temperature">
            <summary>
            Temperature sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Electric">
            <summary>
            Electric sensor (e.g. voltage)
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Distance">
            <summary>
            Distance sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Time">
            <summary>
            Time sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Humidity">
            <summary>
            Humidity sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Pressure">
            <summary>
            Pressure sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Torque">
            <summary>
            Torque sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Power">
            <summary>
            Power sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorType.Frequency">
            <summary>
            Frequency sensor
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.SensorUnitOfMeasure">
            <summary>
            The unit of measure of the sensor (meter, degree, hour etc. according to derived SI where applicable).
            It shall be used together with the SensorType
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.Unkwnown">
            <summary>
            Unknown sensor
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.NonStandard">
            <summary>
             Non standard unit of measure
             It shall be used in combination with the CustomUnitOfMeasure field
             </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.DegreeCelsius">
            <summary>
            Temperature type
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.V">
            <summary>
            Voltage
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.A">
            <summary>
            Ampere
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.Ohm">
            <summary>
            Resistance
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.m">
            <summary>
            Distance type
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.h">
            <summary>
            Time type - not SI but accepted by SI
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.HumidityPercentage">
            <summary>
            Umidity unit - in SI as grams per cubic meter
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.Pa">
            <summary>
            Pressure type
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.Nm">
            <summary>
            Torque unit
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.W">
            <summary>
            Power unit
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.SensorUnitOfMeasure.Hz">
            <summary>
             Frequency unit
             </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.ServiceAndMaintenanceData">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic structure that contains information related to the service and maintenance 
            of the resources / sub-resources in an Endpoint.
            It may be used to model as base class for other specific maintenance parts or services
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ServiceAndMaintenanceData.UniqueIdentifier">
            <summary>
            Unique identifier of the resource this data is about
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ServiceAndMaintenanceData.Name">
            <summary>
            The name of the resource this data is about
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ServiceAndMaintenanceData.CalibrationDetails">
            <summary>
            The list of calibration details.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ServiceAndMaintenanceData.ErrorDetails">
            <summary>
            The list of error details.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ServiceAndMaintenanceData.MaintenanceDetails">
            <summary>
            The list of last executed maintenance and counters details.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ServiceAndMaintenanceData.SensorDetails">
            <summary>
            The list of sensor details.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.ServiceAndMaintenanceData.VerificationDetails">
            <summary>
            The list of verification details.
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.SMTPlacementSetup">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Describes the actual setup resources / sub-resources of a particular Endpoint that is participating in a CFX network, 
            and more specifically, is an SMT placement machine.  This is a dynamic structure.
            </summary>
        </member>
        <member name="M:CFX.Structures.Maintenance.SMTPlacementSetup.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SMTPlacementSetup.NozzleChangerPockets">
            <summary>
            Information about the nozzle changer garages of this SMT placement machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SMTPlacementSetup.Tables">
            <summary>
            Information about the table of this SMT placement machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SMTPlacementSetup.Feeders">
            <summary>
            Information about the feeder of this SMT placement machine.
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.SMTTapeFeederInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Structure that contains information related to the feeder lifecycle. 
            It is used in maintenance context for maintenance scheduling and control etc.
            </summary>
        </member>
        <member name="M:CFX.Structures.Maintenance.SMTTapeFeederInformation.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.SMTTapeFeederInformation.MultiLanes">
            <summary>
            List of lanes for a tape feeder 
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.MultiLane">
            <summary>
            Division class for feeder: given a track in the table, one feeder can serve multiple division (lane number).
            The counters are based on this sub-position, therefore the need of this object in the model.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MultiLane.CycleCount">
            <summary>
            If available, information about the feeder counters of this SMT placement machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MultiLane.LaneNumber">
            <summary>
            For multi-lane tape feeders, this is the number of the position of the lane within the feeder.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.MultiLane.UniqueIdentifier">
            <summary>
            For multi-lane feeders, the unique identifier of the base. 
            The ResourceIdentifier property should be populated with the 
            unique identifer of the specific lane within the feeder (if so labeled). If lanes are not specifically labeled, 
            both the UniqueIdentifer and BaseUniqueIdentifier prooperties should be populated with the same value.
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.VerificationInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic structure that contains information related to the verification of the 
            resources / sub-resources in an Endpoint.
            It may be used to model the verification results on  
            parts that may require traceable operations (i.e. maintenance)
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.Name">
            <summary>
            Name of the verification
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.Status">
            <summary>
            The status of the performed verification.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.Value">
            <summary>
            The value of the performed verification.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.UnitOfMeasure">
            <summary>
            The unit of measure of the performed verification (if applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.VerificationLocation">
            <summary>
            The location of the data source providing the verification information (optional, only if available).
            It may be used to distinguish, for example, the type and location of the part: head, camera, nozzle
            Where applicable, a dot (".") notation should be utilized to designate specific positions.
            Examples: MODULE1.BEAM1.HEADPOS2, MODULE1.NEST3.NOZZLESLOT4, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.Type">
            <summary>
            The type of the verification that is performed on this resource / machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.IsValid">
            <summary>
            If the verification is valid or should be ignored bay the receiving system. Default (i.e. null) = true
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.LastExecution">
            <summary>
            The last time when the verification has been executed
            </summary>
        </member>
        <member name="P:CFX.Structures.Maintenance.VerificationInformation.Comment">
            <summary>
            Free text for additional comment on the performed verification, if required
            </summary>
        </member>
        <member name="T:CFX.Structures.Maintenance.VerificationType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            An enumeration indicating the type of verification that can be executed during the process (i.e. maintenance)
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.VerificationType.Unkwnown">
            <summary>
            Unknown verification type
            </summary>
        </member>
        <member name="F:CFX.Structures.Maintenance.VerificationType.General">
            <summary>
            General verification of the machine
            </summary>    
        </member>
        <member name="F:CFX.Structures.Maintenance.VerificationType.Special">
            <summary>
            Special verification, specific for a given part
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialCarrier">
            <summary>
            A dynamic structure which describes a device that is mounted at a process endpoint which contains
            source materials that are then consumed by the endpoint.  An SMD Tape Feeder would be an example of a MaterialCarrier.
            This base MaterialCarrier structure is used to describe a generic carrier, when a more specific carrier location class is
            not available, such as <see cref="T:CFX.Structures.SMTPlacement.SMDTapeFeeder"/>, <see cref="T:CFX.Structures.SMTPlacement.SMDTubeFeeder"/>, and <see cref="T:CFX.Structures.SMTPlacement.SMDTubeFeeder"/>.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialCarrier.UniqueIdentifier">
            <summary>
            The unique identifier for this carrier (barcode, RFID, etc.)
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialCarrier.Name">
            <summary>
            A human readable name for this carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialCarrier.ParentCarrier">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            An upper level carrier in which this carrier is loaded (optional)
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialCarrierLocation">
            <summary>
            Describes a specific location on an endpoint where a material carrier may be loaded.
            When applicable, also contains information about the currently loaded carrier, and
            the material package(s) loaded to that carrer.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialCarrierLocation.LocationIdentifier">
            <summary>
            The unique identifier of the carrier location (barcode or RFID value)
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialCarrierLocation.LocationName">
            <summary>
            The name of the carrier location
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialCarrierLocation.CarrierInformation">
            <summary>
            Dynamic structure that defines the carrier that is presently loaded at the carrier location
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialLocation">
            <summary>
            Describes a specific location on an endpoint where material may be loaded.
            Also includes information about the current contents of this location (if applicable).
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialLocation.LocationIdentifier">
            <summary>
            The unique identifier (barcode) of the location on the Endpoint where the MaterialPackage is to be loaded.
            If this property is left empty, the MaterialPackage will only be loaded to the carrier specified
            by the CarrierInformation property, and not to an Endpoint.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialLocation.LocationName">
            <summary>
            Name of the Location
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialLocation.MaterialPackage">
            <summary>
            The material package (reel, bin, etc) that is loaded at the position (if any).
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialLocation.CarrierInformation">
            <summary>
            The material carrier that is loaded at the position (if any)
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialModifyReason">
            <summary>
            Reason why the attributes of a material package were modified
            </summary>
        </member>
        <member name="F:CFX.Structures.MaterialModifyReason.Unspecified">
            <summary>
            No reason specified
            </summary>
        </member>
        <member name="F:CFX.Structures.MaterialModifyReason.InformationWasIncorrect">
            <summary>
            Correction of incorrect information
            </summary>
        </member>
        <member name="F:CFX.Structures.MaterialModifyReason.ManualCountAndQuantityUpdate">
            <summary>
            Quantity updated after manual count / measurement
            </summary>
        </member>
        <member name="F:CFX.Structures.MaterialModifyReason.SensorTriggeredCorrection">
            <summary>
            The sensor triggered correction, which is typically the quantity correction when a splice is been detected.
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialPackage">
            <summary>
            Describes a specific, single handling unit of a particular material, such as a reel of SMT parts,
            a bag of parts, bin of parts, etc.
            </summary>
        </member>
        <member name="M:CFX.Structures.MaterialPackage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackage.UniqueIdentifier">
            <summary>
            The Unique identifier of the material package (barcode/RFID that identifies
            this specific material package.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackage.InternalPartNumber">
            <summary>
            The internal part number of the material package
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackage.InternalPackageName">
            <summary>
            The internal package name of the material package
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackage.Quantity">
            <summary>
            The quantity of parts or material contained within this material package.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackage.LeadingMaterialPackage">
            <summary>
            Gets or sets the next spliced material package.
            <remarks>
            When the placement machine is using tape material the operator can splice a new tape onto the existing material.
            This will lead to a chain of material. Physically the existing reel with the barcode will be separated from the
            already mounted tape and a new tape with its reel will be appended to the material. This leads to the situation that
            the material chain can only be identified by the newest material added to the chain (known as the "trailing" material package)
            using the barcode on its reel.  Typically the placement machine is consuming from the "leading" package of the chain.
            So the assumption is that we may build a chain B->A by splicing B to A, where A is the "leading"
            material package (consumed first), and B is the "trailing" material package (consumed last).  In this situation, the chain
            will be identified only by the barcode of B, and the MaterialPackage structure of B will have its LeadingMaterialPackage
            property set to A.  It should be noted that it is possible and permissible to form chains of more than 2 material packages.
            In this situation, each material package in the chain will have the LeadingMaterialPackage property set to the next package
            in the chain (with the exception of the material package that is currently being consumed (the "leading" material package).
            </remarks>
            </summary>
            <value>The next material package in the chain (heading towards the consumption point).</value>
        </member>
        <member name="P:CFX.Structures.MaterialPackage.BatchId">
            <summary>
            Gets or sets the batch identifier.
            <remarks>
            There is material in the factory where not each material unit is identifiable. This is the case for
            Trays for example. Trays are delivered as a batch of trays. But each tray does not have a unique ID, only
            the batch of trays has a unique ID.
            In this case, we assume that the unique Batch ID is in the property
            BatchID and each tray which is been mounted will get a temporary UniqueIdentifier as long as it is been
            mounted on the machine. See BatchMaterialPackage for more details.
            </remarks>
            </summary>
            <value>The batch identifier.</value>
        </member>
        <member name="P:CFX.Structures.MaterialPackage.BatchMaterialPackage">
            <summary>
            Gets or sets the batch material package.
            <remarks>
            This field specify the parent batch material unit representing the complete batch.
            The BatchMaterialPackagecan be queried the quantity as well as other properties for the whole batch.
             This data is only set, when the events are send out of the line level verification system. This
             property can not be set via the interface. 
            </remarks>
            </summary>
            <value>The batch material package.</value>
        </member>
        <member name="P:CFX.Structures.MaterialPackage.GreyZone">
             <summary>
             Gets or sets the grey zone.
             <remarks>
              This specifies the grey zone between 2 material packages. A grey zone is a zone
                 where the placement system can not determine where the switch between 2 material packages
                 has been taken place. Therefore the system tracks both material packages.
                 The quality of the GreyZone is driven by the process the customer is operating and if
                 the feeder are using optional splice sensor detectors or not.
                 Background is, that some sensors can detect the splice plate and the splice plate has a length
             which covers a number of components which hide the real end of tape. Therefore the verifcation system
             will report a greyzone between the "leading package" and the "trailing" in the chain.
             The greyzone will be maintained typically by the machine, based on the feeder configuration. When the feeder has a sploice sensor the
             grey zone will be calculated when the sensor detects the splice, and will be adjusted when components are consumed.
             When the greyzone reached zero, the "leading" package will be consumed and the chain will be modified by removing the "leading" package
             from the chain, resulting in the next package in the chain becoming the new "leading" package.
             </remarks>
            <summary>
             This sample scenarion explains the data change when consuming the material with a feeder with sensor:
             <list type="table">
             <listheader>
             <term>Action</term>
             <term>Description</term>
             <term>Resulting Chain</term>
             <term>Greyzone</term>
             </listheader>
             <item>
             <term>Inital</term>
             <term>Material with a defined quantity is mounted.</term>
             <term>A (100)</term>
             <term>0</term>
             </item>
             <item>
             <term>Production</term>
             <term>Material will be consumed during production (20 components).</term>
             <term>A (80)</term>
             <term>0</term>
             </item>
             <item>
             <term>Splicing</term>
             <term>New Material will be spliced to the mounted material.</term>
             <term>B(200) -> A (80)</term>
             <term>0</term>
             </item>
             <item>
             <term>Production</term>
             <term>Material will be consumed during production (50 components).</term>
             <term>B(200) -> A (30)</term>
             <term>0</term>
             </item>
             <item>
             <term>Splice detected</term>
             <term>Feeder detects the splice and calculated the grey zone (here 10) and adjust
             the quantity because sensor overrules filling level information.
             Event will be triggered, that a quantity correction has been performed. 
             </term>
             <term>B(200) -> A (0)</term>
             <term>10</term>
             </item>
             <item>
             <term>Production</term>
             <term>
             Material will be consumed during production (5 components).
             The material in the pickup location has a quantity of zero.
             The chain will be not be modified, because the greyzone is not zero.
             The material B will be consumed. 
             </term>
             <term>B(195) -> A(0)</term>
             <term>5</term>
             </item>        /// <item>
             <term>Production</term>
             <term>
             Material will be consumed during production ( components).
             The material in the pickup location has a quantity of zero.
             The chain will be modified, because the greyzone is zero.
             The material A will be consumed. An event will be send, that the
             mateiral A is been consumed. 
             </term>
             <term>B(190)</term>
             <term>0</term>
             </item>
             <item>
             <term>Production</term>
             <term>Material will be consumed during production (50 components).</term>
             <term>B(140) </term>
             <term>0</term>
             </item>
             </list>
             </summary>
             
             </summary>
             <value>The grey zone.</value>
        </member>
        <member name="T:CFX.Structures.MaterialPackageData">
            <summary>
            An abstract base class from which dynamic material data structures derive.
            For example, <see cref="T:CFX.Structures.MaterialPackageMSDData"/>
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialPackageDetail">
            <summary>
            Describes detailed information about a particular material package (instance of
            material that is tracked, stocked, and used within the factory environment.
            </summary>
        </member>
        <member name="M:CFX.Structures.MaterialPackageDetail.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CFX.Structures.MaterialPackageDetail.ToMaterialPackage">
            <summary>
            Helper method which converts the more detailed MaterialPackageDetail structure
            to the simplified <see cref="T:CFX.Structures.MaterialPackage"/> structure.
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
            <returns></returns>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.UniqueIdentifier">
            <summary>
            The unique identifier of the material package
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.InternalPartNumber">
            <summary>
            The internal part number of the material contained within this material package
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.InternalPackageName">
            <summary>
            The internal package name of the material package
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.Manufacturer">
            <summary>
            The name of the manufacturer of this material
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.ManufacturerPartNumber">
            <summary>
            The part number of the material as it is known to the original manufacturer of the material
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.Vendor">
            <summary>
            The name of the supplier from whom the material was purchased / supplied.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.VendorPartNumber">
            <summary>
            The part number of the material as it is known to the supplier or vendor of the material
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.ManufacturerLotCode">
            <summary>
            The lot code applied to this batch of material by the original manufacturer of the material
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.Created">
            <summary>
            The date / time when this material package was introduced into the factory environment
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.ManufactureDate">
            <summary>
            The date / time when this material was originally manufactured by the manufacturer
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.ReceivedDate">
            <summary>
            The date / time when this material was received into the factory
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.ExpiryDate">
            <summary>
            Gets or sets the expiry date of this material package based on manufacture definitions.
            </summary>
            <value>The expiry date.</value>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.Units">
            <summary>
            The unit of measure for this material (items, liters, meters, grams, etc.)
            Only valid SI units of measure should be utilized
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.InitialQuantity">
            <summary>
            The initial quantity of material contained within this material package at the time
            when it was initialized / introduced into the factory environment
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.Quantity">
            <summary>
            The quantity of material presently contained within this material package
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.Status">
            <summary>
            The current status of this material package
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.HazardousMaterialType">
            <summary>
            Specifies whether or not a material is hazardous, and if so, the regulatory directive that controls
            the use of this substance in production.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.MaterialData">
            <summary>
            Optional dynamic structure containing specialized information about this material package.
            For example, if the material package contains moisture sensitive devices, this would contain
            additional information specific to MSD material handling (exposure time, etc.).
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.BatchId">
            <summary>
            Gets or sets the batch identifier.
            <remarks>
            There is material in the factory where not each material unit is identifiable. This is the case for
            Trays for example. Trays are delivered as a batch of trays. But each tray does not have a unique ID, only
            the batch of trays has a unique ID.
            In this case, we assume that the unique Batch ID is in the property
            BatchID and each tray which is been mounted will get a temporary UniqueIdentifier as long as it is been
            mounted on the machine. See BatchMaterialPackage for more details.
            </remarks>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
            <value>The batch identifier.</value>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.GreyZone">
             <summary>
             Gets or sets the grey zone.
             <remarks>
              This specifies the grey zone between 2 material packages. A grey zone is a zone
                 where the placement system can not determine where the switch between 2 material packages
                 has been taken place. Therefore the system tracks both material packages.
                 The quality of the GreyZone is driven by the process the customer is operating and if
                 the feeder are using optional splice sensor detectors or not.
                 Background is, that some sensors can detect the splice plate and the splice plate has a length
             which covers a number of components which hide the real end of tape. Therefore the verifcation system
             will report a greyzone between the "leading package" and the "trailing" in the chain.
             The greyzone will be maintained typically by the machine, based on the feeder configuration. When the feeder has a sploice sensor the
             grey zone will be calculated when the sensor detects the splice, and will be adjusted when components are consumed.
             When the greyzone reached zero, the "leading" package will be consumed and the chain will be modified by removing the "leading" package
             from the chain, resulting in the next package in the chain becoming the new "leading" package.
             </remarks>
            <summary>
             This sample scenarion explains the data change when consuming the material with a feeder with sensor:
             <list type="table">
             <listheader>
             <term>Action</term>
             <term>Description</term>
             <term>Resulting Chain</term>
             <term>Greyzone</term>
             </listheader>
             <item>
             <term>Inital</term>
             <term>Material with a defined quantity is mounted.</term>
             <term>A (100)</term>
             <term>0</term>
             </item>
             <item>
             <term>Production</term>
             <term>Material will be consumed during production (20 components).</term>
             <term>A (80)</term>
             <term>0</term>
             </item>
             <item>
             <term>Splicing</term>
             <term>New Material will be spliced to the mounted material.</term>
             <term>B(200) -> A (80)</term>
             <term>0</term>
             </item>
             <item>
             <term>Production</term>
             <term>Material will be consumed during production (50 components).</term>
             <term>B(200) -> A (30)</term>
             <term>0</term>
             </item>
             <item>
             <term>Splice detected</term>
             <term>Feeder detects the splice and calculated the grey zone (here 10) and adjust
             the quantity because sensor overrules filling level information.
             Event will be triggered, that a quantity correction has been performed. 
             </term>
             <term>B(200) -> A (0)</term>
             <term>10</term>
             </item>
             <item>
             <term>Production</term>
             <term>
             Material will be consumed during production (5 components).
             The material in the pickup location has a quantity of zero.
             The chain will be not be modified, because the greyzone is not zero.
             The material B will be consumed. 
             </term>
             <term>B(195) -> A(0)</term>
             <term>5</term>
             </item>        /// <item>
             <term>Production</term>
             <term>
             Material will be consumed during production ( components).
             The material in the pickup location has a quantity of zero.
             The chain will be modified, because the greyzone is zero.
             The material A will be consumed. An event will be send, that the
             mateiral A is been consumed. 
             </term>
             <term>B(190)</term>
             <term>0</term>
             </item>
             <item>
             <term>Production</term>
             <term>Material will be consumed during production (50 components).</term>
             <term>B(140) </term>
             <term>0</term>
             </item>
             </list>
             </summary>
             <para>** NOTE: ADDED in CFX 1.5 **</para>
             </summary>
             <value>The grey zone.</value>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.PartPrice">
            <summary>
            The price of a part in the material package
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.PartPriceUnit">
            <summary>
            The unit of the price of a part in the material package
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageDetail.PackagingInfo">
            <summary>
            The unit of the price of a part in the material package
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialPackageMSDData">
            <summary>
            Describes addition detail for material packages containing moisture 
            sensitive devices
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageMSDData.ExpirationDateTime">
            <summary>
            In the case where the MSD material is open and currently exposed to the
            environment, the date / time when the MSD material will expire rendering it
            no longer able to be used in production.  Otherwise null.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageMSDData.OriginalExposureDateTime">
            <summary>
            The date / time when this MSD material was originally opened and exposed to
            the environment
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageMSDData.LastExposureDateTime">
            <summary>
            In the case where the MSD material is open and currently exposed to the environment,
            the date / time when the material was most recently opened and/or exposed.  Otherwise null.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageMSDData.RemainingExposureTime">
            <summary>
            The total amount of time before the MSD expires, rendering it unable to be used in production
            (assuming the material is open and exposed to the environment)
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageMSDData.MSDLevel">
            <summary>
            The level of moisture sensitivity (as defined by IPC/JEDEC J-STD-033C)
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialPackageMSDData.MSDState">
            <summary>
            An enumeration describing the current state of this MSD material
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialSetupRequirement">
            <summary>
            Describes a single, specific material setup requirement at a particular process endpoint.
            Includes the material / part that must be loaded at the endpoint, along with the 
            specific location where the material must be loaded (where applicable), valid alternate
            part numbers that may be substituted for the primary part, and any applicable
            AML (Approved Manufacturer List) restrictions.
            </summary>
        </member>
        <member name="M:CFX.Structures.MaterialSetupRequirement.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialSetupRequirement.Position">
            <summary>
            The position where the required material must be installed on the Endpoint (optional).  
            Where applicable, a dot (".") notation should be utilized to designate 
            specific positions.  Examples:  MODULE1.FRONT.Pos23, STAGE2.BANK1.Pos44, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialSetupRequirement.PartNumber">
            <summary>
            The internal part number of the part that must be loaded at this position.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialSetupRequirement.ApprovedAlternateParts">
            <summary>
            An optional list of approved alternate parts (internal part numbers) that may be substituted 
            for the primary part.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialSetupRequirement.ApprovedManufacturerParts">
            <summary>
            An optional list of specific manufacturer part numbers that must be utilzed.  When specified,
            a part will only be acceptable if both its internal part number matches the PartNumber property (or Alternates), 
            AND its manufacturer part number matches one of the parts specified in the ApprovedManufacturerParts property.
            
            </summary>
        </member>
        <member name="T:CFX.Structures.MaterialStatus">
            <summary>
            Status of a material package
            </summary>
        </member>
        <member name="F:CFX.Structures.MaterialStatus.Active">
            <summary>
            Material is available for use in production
            </summary>
        </member>
        <member name="F:CFX.Structures.MaterialStatus.Blocked">
            <summary>
            Material has been blocked, and should not be used in production
            </summary>
        </member>
        <member name="F:CFX.Structures.MaterialStatus.Depleted">
            <summary>
            Material has been exhausted, and can no longer be used in production
            </summary>
        </member>
        <member name="T:CFX.Structures.Measurement">
            <summary>
            Abstract base class for dynamic data structure which describes a measurement that was made by a human
            or by automated equipment in the course of inspecting or testing a production unit
            </summary>
        </member>
        <member name="M:CFX.Structures.Measurement.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Measurement.UniqueIdentifier">
            <summary>
            A unique identifier that for this particular measurement instance
            (new and unique each time a new measurement is made or repeated).
            </summary>
        </member>
        <member name="P:CFX.Structures.Measurement.MeasurementName">
            <summary>
            A name that uniquely describes the test or measurement that was performed.
            </summary>
        </member>
        <member name="P:CFX.Structures.Measurement.TimeRecorded">
            <summary>
            The date/time when this Measurement was recorded (if known, otherwise null)
            </summary>
        </member>
        <member name="P:CFX.Structures.Measurement.Sequence">
            <summary>
            An optional positive integer describing the sequence in which the tests or measurements were performed
            that resulted in this Reading.
            /// </summary>
        </member>
        <member name="P:CFX.Structures.Measurement.Result">
            <summary>
            An enumeration indicating whether or not this measurement is considered acceptable.
            </summary>
        </member>
        <member name="P:CFX.Structures.Measurement.CRDs">
            <summary>
            An optional list of component designators (instances of a part) on a production unit(s) to be associated with this measurement.
            May include sub-components in "." notation.  Examples:  R1, R2, R3   or  R2.3 (R2, pin 3)
            
            </summary>
        </member>
        <member name="T:CFX.Structures.MSDLevel">
            <summary>
            Levels of Moisture Sensitivity (for electronic devices)
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.Unspecified">
            <summary>
            Unknown sensitivity
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.MSL1">
            <summary>
            Sensitivity Level 1
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.MSL2">
            <summary>
            Sensitivity Level 2
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.MSL2A">
            <summary>
            Sensitivity Level 2A
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.MSL3">
            <summary>
            Sensitivity Level 3
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.MSL4">
            <summary>
            Sensitivity Level 4
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.MSL5">
            <summary>
            Sensitivity Level 5
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.MSL5A">
            <summary>
            Sensitivity Level 5A
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDLevel.MSL6">
            <summary>
            Sensitivity Level 6
            </summary>
        </member>
        <member name="T:CFX.Structures.MSDState">
            <summary>
            Possible states of packages of moisture sensitive devices
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDState.Unspecified">
            <summary>
            Unspecified state
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDState.NeverOpened">
            <summary>
            Sealed and never opened.
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDState.Exposed">
            <summary>
            Open and exposed to the atmosphere
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDState.InDryStorage">
            <summary>
            Open but stored in low humidity environment
            </summary>
        </member>
        <member name="F:CFX.Structures.MSDState.Expired">
            <summary>
            Exposed to atmosphere/moisture beyond acceptable limits.
            </summary>
        </member>
        <member name="T:CFX.Structures.NamedObject">
            <summary>
            An object that can be identified by its name.
            </summary>
        </member>
        <member name="P:CFX.Structures.NamedObject.Name">
            <summary>
            The name of this object, like "C1", "R1", "Fiducial_1", "Pin1"
            </summary>
        </member>
        <member name="T:CFX.Structures.NamespaceDoc">
            <summary>
            Root namespace for all data structures referenced by CFX messages.
            </summary>
        </member>
        <member name="T:CFX.Structures.NonInstalledComponent">
            <summary>
            Describes a particular location on a production unit where materials / parts were not installed.
            </summary>
        </member>
        <member name="M:CFX.Structures.NonInstalledComponent.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.NonInstalledComponent.ReferenceDesignator">
            <summary>
            Location on production unit where material / parts were installed
            </summary>
        </member>
        <member name="P:CFX.Structures.NonInstalledComponent.NonInstallationTime">
            <summary>
            The specific time when this material / part was tried to be installed on the production unit (optional, when known)
            </summary>
        </member>
        <member name="P:CFX.Structures.NonInstalledComponent.Location">
            <summary>
            The final location of the component that has not been installed
            </summary>
        </member>
        <member name="P:CFX.Structures.NonInstalledComponent.Stage">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            The stage name or number
            </summary>
        </member>
        <member name="P:CFX.Structures.NonInstalledComponent.RejectionBoxId">
            <summary>
            Id of the rejection box where the component has been rejected (if applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.NonInstalledComponent.RejectionComment">
            <summary>
            A comment on the rejection
            </summary>
        </member>
        <member name="P:CFX.Structures.NonInstalledComponent.RejectionReason">
            <summary>
            The reason of the rejection of this component (Unknown if not known)
            </summary>
        </member>
        <member name="P:CFX.Structures.NonInstalledComponent.RejectionDetails">
            <summary>
            The rejection details, depending on the rejection reason (optional)
            </summary>
        </member>
        <member name="T:CFX.Structures.NonInstalledComponentLocation">
            <summary>
            Location of a non installed component
            </summary>
        </member>
        <member name="F:CFX.Structures.NonInstalledComponentLocation.Lost">
            <summary>
            The location is unknown, the component is lost
            </summary>
        </member>
        <member name="F:CFX.Structures.NonInstalledComponentLocation.MaterialCarrier">
            <summary>
            The component is back to the material carrier
            </summary>
        </member>
        <member name="F:CFX.Structures.NonInstalledComponentLocation.RejectionBox">
            <summary>
            The component has been thrown in the rejection box
            </summary>
        </member>
        <member name="T:CFX.Structures.NumericMeasurement">
            <summary>
            Describes a numeric (floating point) measurement that was made by a human or by automated equipment
            in the course of inspecting or testing a production unit
            </summary>
        </member>
        <member name="M:CFX.Structures.NumericMeasurement.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.NumericMeasurement.MeasuredValue">
            <summary>
            The actual numeric value measured and recorded during this test/inspection.
            </summary>
        </member>
        <member name="T:CFX.Structures.NumericValue">
            <summary>
            A data structure that represents a numeric value with defined units and thresholds
            </summary>
        </member>
        <member name="P:CFX.Structures.NumericValue.Value">
            <summary>
            The actual numeric value that was measured and recorded during a test or inspection
            </summary>
        </member>
        <member name="P:CFX.Structures.NumericValue.ValueUnits">
            <summary>
            The units of the value (must be a valid SI unit)
            </summary>
        </member>
        <member name="P:CFX.Structures.NumericValue.ExpectedValue">
            <summary>
            The expected value for thie measurement
            </summary>
        </member>
        <member name="P:CFX.Structures.NumericValue.ExpectedValueUnits">
            <summary>
            The units of the expected value (must be a valid SI unit)
            </summary>
        </member>
        <member name="P:CFX.Structures.NumericValue.MinimumAcceptableValue">
            <summary>
            The minimum acceptable value
            </summary>
        </member>
        <member name="P:CFX.Structures.NumericValue.MaximumAcceptableValue">
            <summary>
            The minimum acceptable value
            </summary>
        </member>
        <member name="T:CFX.Structures.OperatingRequirements">
            <summary>
            Structure that specifies the operating requirements (environmental, etc.) 
            of a given endpoint.
            </summary>
        </member>
        <member name="P:CFX.Structures.OperatingRequirements.MinimumHumidity">
            <summary>
            The minimum level of relative humidity (expressed as a percentage from 0 to 1) required
            for the endpoint to operate
            </summary>
        </member>
        <member name="P:CFX.Structures.OperatingRequirements.MaximumHumidity">
            <summary>
            The maximum level of relative humidity (expressed as a percentage from 0 to 1) that the
            endpoint can tolerate
            </summary>
        </member>
        <member name="P:CFX.Structures.OperatingRequirements.MinimumTemperature">
            <summary>
            The minimum templerature (expressed in degrees Celsius) required
            for the endpoint to operate
            </summary>
        </member>
        <member name="P:CFX.Structures.OperatingRequirements.MaximumTemperature">
            <summary>
            The maximum templerature (expressed in degrees Celsius) that the endpoint can tolerate.
            </summary>
        </member>
        <member name="T:CFX.Structures.OperationStatus">
            <summary>
            Status of a performed operation, for example Calibration
            </summary>
        </member>
        <member name="F:CFX.Structures.OperationStatus.Unknown">
            <summary>
            Status of the operation is not known
            </summary>
        </member>
        <member name="F:CFX.Structures.OperationStatus.Failed">
            <summary>
            The operation failed
            </summary>
        </member>
        <member name="F:CFX.Structures.OperationStatus.Ok">
            <summary>
            The operation was succesfull 
            </summary>
        </member>
        <member name="T:CFX.Structures.Operator">
            <summary>
            Represents an operator who performs a function
            </summary>
        </member>
        <member name="M:CFX.Structures.Operator.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Operator.OperatorIdentifier">
            <summary>
            An optional unique identifier for the Operator
            </summary>
        </member>
        <member name="P:CFX.Structures.Operator.ActorType">
            <summary>
            The nature of the operator
            </summary>
        </member>
        <member name="P:CFX.Structures.Operator.LastName">
            <summary>
            The Family Name of the Operator
            </summary>
        </member>
        <member name="P:CFX.Structures.Operator.FirstName">
            <summary>
            The Given Name of the Operator
            </summary>
        </member>
        <member name="P:CFX.Structures.Operator.LoginName">
            <summary>
            The Login Name for this Operator
            </summary>
        </member>
        <member name="T:CFX.Structures.PackagingInfo">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Describes the packaging information of a material package.
            Abstract base class.
            </summary>
        </member>
        <member name="T:CFX.Structures.Parameter">
            <summary>
            An abstract base class for the Parameter dynamic structure.
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Board">
            <summary>
            A board typically is part of a (multi-)panel and may contain fiducials, components
            (an even sub-boards).
            It is an inspection object itself, too (with features on its own).
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Board.Fiducials">
            <summary>
            This is a list of fiducials.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Board.Components">
            <summary>
            This is the list of components in the board definition.
            </summary>
        </member>
        <member name="F:CFX.Structures.PCBInspection.Board.Boards">
            <summary> 
            List of "sub-boards" of this board.
            Usually empty, but it allows to have panels with several boards, where each board may have some "sub-boards", even recursivly. 
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Board.IsDefect">
            <summary>
            A board is considered defect if there is a defect in (the features / checks of) the board itself
            or in one of its components, fiducials, or sub-boards.
            </summary>
        </member>
        <member name="M:CFX.Structures.PCBInspection.Board.ShouldSerializeBoards">
            <summary> Restrict serialization to avoid confusion. </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Board.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard)
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Component">
            <summary>
            A component as a resistor, capacitor, IC, ...
            Typically has (two or more) pins (as its "children").
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Component.Type">
            <summary>
            Component type, e.g. "C1206", "R1206", "TO252AA".
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Component.Group">
            <summary>
            Group of component classification like "Capacitor", "Resistor", "DPAK".
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Component.Pins">
            <summary>
            List of Pins of this component.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Component.IsDefect">
            <summary>
            Checks if this component (or one of its pins) is defect.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Component.PartNumber">
            <summary>
            The internal part number of the designated component.
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Feature">
            <summary>
            A feature/charcteristic/property/attribute (of a panel, board, componemnt, etc.) to check.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.IsDefect">
            <summary>
            The feature is out of its allowed limits, so it is assumed to be a defect.
            But a defect detected during inspection may have been identified as a "false call" in verification
            or may have been repaired.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.IsInspected">
            <summary>
            This feature was checked.
            (The inspection may have been skipped due to a defect detected earlier, so further
            time consuming inspections are pointless.)
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.IsDetectedDefect">
            <summary>
            The inspection has detected/classified this feature as defect.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.IsVerified">
            <summary>
            This (usually defective) feature was verified (AKA "classified") by a human.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.IsVerifiedDefect">
            <summary>
            The verification (AKA "classification") by a human has confirmed a defect.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.IsRepaired">
            <summary>
            The (eventual) defect was repaired successfully.
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Feature.Value">
            <summary>
            It is cleaner to have several subclasses with specific value type (float and int in
            addition to string).
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.Value.Unit">
            <summary>
            The name of the unit for this value.
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Feature.Value.Converter">
            <summary>
            A custom Feature.Value-converter to correctly deserialize all its different subclasses 
            (i.e. StringValue, FloatValue, and IntValue).
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Feature.StringValue">
            <summary>
            Representation of a string value.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.StringValue.Value">
            <summary>
            A string value.
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Feature.FloatValue">
            <summary>
            Representation of a float value.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.FloatValue.Value">
            <summary>
            A float value.
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Feature.IntValue">
            <summary>
            Representation of an integer value.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.IntValue.Value">
            <summary>
            An integer value.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Feature.Values">
            <summary>
            List of values (of varying types).
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Fiducial">
            <summary>
            Fiducial mark for justification (position and orientation) of panels/boards.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Fiducial.Type">
            <summary>
            Type of the fiducial, like "Circle" or "Rect".
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.GeometricObject">
            <summary>
            The geometry of a component (board, resistor, capacitor, pin, ...).
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.GeometricObject.Size">
            <summary>
            X=Width, Y=Height, Z=Depth, in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.GeometricObject.Position">
            <summary>
            The position in global coordinates, i.e. all position shifts and rotations of the
            parent objects (recursively) are factored in.
            Given in mm, as right handed coordinates.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.GeometricObject.Rotation">
            <summary>
            The global rotation, i.e. all rotations of the parent objects (recursively) factored in.
            X=RotationAroundXAxis, Y=RotationAroundYAxis, Z=RotationAroundZAxis, in degrees [0..360]
            around the center of this object, right hand rule.
            Optional value. If missing in the recipe, then it is assumed to be (0.0, 0.0, 0.0).
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.InspectionObject">
            <summary>
            Representing a physical object (panel, board, component, fiducial, pin) with features to check
            during inspection.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.InspectionObject.Features">
            <summary>
            Features to check during inspection, like "Presence", "Displacement", "Height".
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.InspectionObject.IsDefect">
            <summary>
            The inspection object is defective, i.e.
            - it was detected as defect,
            - not verified as "false call",  and
            - not repaired.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.InspectionObject.IsRepaired">
            <summary>
            The inspection object as a whole was repaired. (E.g. by replacing the whole component.)
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.NamespaceDoc">
            <summary>
            Data structures related to Inspection of Printed Circuit Boards (PCB's)
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.OffsetMeasurement">
            <summary>
            Describes the results of measurements that were made on the position of a specific PCB component.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.OffsetMeasurement.DX">
            <summary>
            The x offset of the component from center (in mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.OffsetMeasurement.DY">
            <summary>
            The y offset of the component from center (in mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.OffsetMeasurement.DZ">
            <summary>
            The z offset of the component from level (in mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.OffsetMeasurement.RXY">
            <summary>
            The counter-clockwise rotational offset on the X-Y plane (in degrees)
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.OffsetMeasurement.RZX">
            <summary>
            The counter-clockwise rotational offset on the Z-X plane (in degrees)
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.OffsetMeasurement.RZY">
            <summary>
            The counter-clockwise rotational offset on the Z-Y plane (in degrees)
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Panel">
            <summary>
            The root element for the CFX recipe export.
            </summary>
        </member>
        <member name="F:CFX.Structures.PCBInspection.Panel.Variant">
            <summary>
            Name of the assembly variant. May be empty.
            </summary>
        </member>
        <member name="F:CFX.Structures.PCBInspection.Panel.Size">
            <summary> Size of the panel (in µm). </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Panel.Fiducials">
            <summary>
            The list of fiducials of this panel.
            (Only the top-level fiducials, not the fiducials of a board.)
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Panel.Boards">
            <summary>
            The list of boards, that are part of this panel.
            (Only the top-level boards, not the sub-boards of a top-level board.)
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Panel.Components">
            <summary>
            List of components directly assigned to this panel, not those assigned to one of its boards.
            Usually empty (as a panel consist of n boards), but allows to omit boards and assign the components directly to the panel.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.Panel.IsDefect">
            <summary>
            A panel is considered defect if there is a defect in (the features / checks of) the panel itself
            or in one of its fiducials, boards, or components.
            Even if a panel is defective, one of its boards can still be (and typically will be) Ok. 
            </summary>
        </member>
        <member name="M:CFX.Structures.PCBInspection.Panel.ShouldSerializeComponents">
            Restrict serialization to avoid confusion.
        </member>
        <member name="T:CFX.Structures.PCBInspection.PCBInspectionRecipe">
            <summary>
            Represents a specialized type of recipe that is used to drive the inspection of
            a Printed Circuit Board (PCB) by a piece of inspection equipment (such as an AOI or SPI machine),
            or by a human inspector.
            </summary>
        </member>
        <member name="M:CFX.Structures.PCBInspection.PCBInspectionRecipe.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="P:CFX.Structures.PCBInspection.PCBInspectionRecipe.Panel">
            <summary>
            A data structure representing the PCB panel that is to be inspected.  
            This could be a single PCB, an panel with multiple PCBs, or even a structure
            of PCBs containing sub-PCBs.
            </summary>
        </member>
        <member name="T:CFX.Structures.PCBInspection.Pin">
            <summary>
            The pins of a component (typically two on resistors, many more on ICs).
            </summary>
        </member>
        <member name="T:CFX.Structures.PerformanceImpact">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            Performance impacts of a machine (i.e., in case of lower-than-expected performance)
            It shall be "null" or not sent at all if the machine doesn't support the PerformanceImpact attribute.
            An empty list indicates that the machine is running at "best-performance"
            </summary>
        </member>
        <member name="M:CFX.Structures.PerformanceImpact.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PerformanceImpact.Cause">
            <summary>
            The cause of this performance impact.
            </summary>
        </member>
        <member name="T:CFX.Structures.PerformanceImpactCause">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            Possible causes of lower-than-expected performance, which a machine may be able to report as performance impacts
            </summary>
        </member>
        <member name="F:CFX.Structures.PerformanceImpactCause.AlternativeTrackUsed">
            <summary>
            An alternative track was used for component pick-up
            </summary>
        </member>
        <member name="F:CFX.Structures.PerformanceImpactCause.DeactivatedSegmentOnHead">
            <summary>
            A segment on a head was deactivated
            </summary>
        </member>
        <member name="F:CFX.Structures.PerformanceImpactCause.VisionSystemDumpAlwaysActivated">
            <summary>
            Option “Dump Always” activated for vision system
            </summary>
        </member>
        <member name="F:CFX.Structures.PerformanceImpactCause.AdditionalImageAcquisition">
            <summary>
            Vision system had to acquire additional images
            </summary>
        </member>
        <member name="F:CFX.Structures.PerformanceImpactCause.LowFeederSpeed">
            <summary>
            Feeder speed is lower than expected
            </summary>
        </member>
        <member name="F:CFX.Structures.PerformanceImpactCause.GangPickNoParallelPick">
            <summary>
            Gang pick head cannot pick in parallel
            </summary>
        </member>
        <member name="T:CFX.Structures.PersonalizedUnit">
            <summary>
            Describes how a particular production unit has been personalized
            </summary>
        </member>
        <member name="M:CFX.Structures.PersonalizedUnit.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PersonalizedUnit.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.PersonalizedUnit.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (refer to CFX standard).
            </summary>
        </member>
        <member name="P:CFX.Structures.PersonalizedUnit.Characteristics">
            <summary>
            A list of personalized characteristics that have been applied to the production unit
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.BoardData">
            <summary>
            Describes a PCB that is being pressed.
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.BoardData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.BoardData.BoardName">
            <summary>
            The name of the board.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.BoardData.SerialNumber">
            <summary>
            The board serial number
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.BoardData.BarcodeLabel">
            <summary>
            The board barcode label
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.BoardData.StartDateTime">
            <summary>
            The board start date
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.BoardData.EndDateTime">
            <summary>
            The board start time
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.Condition">
            <summary>
            Describes a Condition Sequence.  Conditions consist of one or more steps that control non-pressing actions for a press recipe.
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.Condition.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Condition.ConditionName">
            <summary>
            The  name of the condition.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Condition.Steps">
            <summary>
            An array of the steps of the Condition.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Condition.JavaScriptCode">
            <summary>
            String containing the aggregated JavaScript code of all condition steps.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Condition.MultiStep">
            <summary>
            Indicates whether condition is a single step or consists of multiple sub-steps
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.ConditionResult">
            <summary>
            Describes result of a condition step.
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.ConditionResult.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionResult.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionResult.HermesIdentifier">
            <summary>
            The Hermes BoardId of the carrier, a PCB panel or single production unit. If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            HermesIdentifier will be transfered between all machines which support Hermes. The PrimaryIdentifier is containing a barcode information.
            Both can be transferred.
            <remarks>
            Espcially when the line does not support the Hermes standard in the hole line, the Hermes Identifier can be unique only in the a part
            of the line. The Primary Identifier can be used to correlate the parts of hermes sublines to correlate this data as well. 
            </remarks>
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionResult.TransactionID">
            <summary>
            Transaction ID used to attach events and data during subsequent processing, until WorkCompleted
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionResult.Units">
            <summary>
            Data that identifies each specific instance of production unit with a carrier or panel. 
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionResult.ConditionSequence">
            <summary>
             Describes Condition sequence that was executed
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionResult.ConditionStatus">
            <summary>
             Describes result of the condition sequence
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionResult.ConditionOperator">
            ConditionStatus
            <summary>
             Describes the Operator who ran the condition step (optional)
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.ConditionStep">
            <summary>
            Describes a individual step of a Condition sequence
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionStep.SequencePosition">
            <summary>
            The sequence position of this step in relation to the other steps in the condition.  Steps are peformed in increasing sequence integer order 1...n
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionStep.Name">
            <summary>
            The name of this step
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConditionStep.JavaScriptCode">
            <summary>
            String containing the JavaScript code that controls the step action.
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.Connector">
            <summary>
            Describes a Pressed Connector
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.Connector.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.ConnectorTool">
            <summary>
            Tool used to press this connector
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.ProfileApplied">
            <summary>
            Profile used to press this connector
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.PinCount">
            <summary>
            The number of pins on this connector
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.ConnectorImage">
            <summary>
            The image of this connector
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.UnseatedTop">
            <summary>
            The dimesion of the top of the connector from the top of the board when the connector is not seated
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.SeatedHeight">
            <summary>
            The dimesion of the top of the connector from the top of the board when the connector is seated
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.BaseThickness">
            <summary>
            The thickness of the connector 
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.FlatrockTooling">
            <summary>
             Value to signfiy if the connector requires flatrock tooling (tooling that does not have openings for the pins)
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.Forces">
            <summary>
             Value to signfiy if the connector requires flatrock tooling (tooling that does not have openings for the pins)
            </summary>
            <summary>
             Connector force definitions
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.ManufacturerData">
            <summary>
             Manufactuer of the connector
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.Group">
            <summary>
             Group identifier of the connector
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.ParsSetting">
            <summary>
            Gets or sets the pars setting.
            </summary>
            <value>The pars setting.</value>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Connector.SPCSetting">
            <summary>
            Gets or sets the SPC setting.
            </summary>
            <value>The SPC setting.</value>
        </member>
        <member name="T:CFX.Structures.PressInsertion.ConnectorCoordinates">
            <summary>
            Describes the coordinates of a connector's location on a PCB
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.ConnectorCoordinates.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConnectorCoordinates.XPosition">
            <summary>
             The X position of the connector
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConnectorCoordinates.YPosition">
            <summary>
             The Y position of the connector
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.ConnectorForces">
            <summary>
            Force parameters specific to a press fit connector
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConnectorForces.MaximumForce">
            <summary>
            The maximum force
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConnectorForces.MinimumForce">
            <summary>
            The minimum force
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConnectorForces.OtherForce">
            <summary>
            Other (external) force
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ConnectorForces.UserDefinedForce">
            <summary>
            User Defined Force
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.FPTDataPoint">
            <summary>
            Describes a force vs position vs time data point for a press.
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.FPTDataPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.FPTDataPoint.TotalForce">
            <summary>
            The total force reading of the data point
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.FPTDataPoint.ForceA">
            <summary>
            The force reading of load cell A of the data point
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.FPTDataPoint.ForceB">
            <summary>
            The force reading of load cell B the data point
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.FPTDataPoint.Position">
            <summary>
            The position reading of the data point
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.FPTDataPoint.Time">
            <summary>
            The time reading of the data point
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.Manufacturer">
            <summary>
            Describes a Manufacturer
            <code language="none">
            {
                "UniqueIdentifier": "UID23890423",
                "Name": "ACME"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Manufacturer.UniqueIdentifier">
            <summary>
            The unique identifier of the Manufacturer
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Manufacturer.Name">
            <summary>
            The name of the Manufacturer
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.NamespaceDoc">
            <summary>
            Data structures related to Press Insertion (Connector and Pin) equipment
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.Pars">
            <summary>
            A connector can be pressed with force that iproportional to the 
            actual resisting force detected during the pressing cycle.We call 
            this Percent Above Range Sample, or PARS.In this technique, 
            the connector’s resisting force while pressing is
            sampled and averaged over a distance range above final seating to 
            the board surface. The final force percent added assures complete 
            seating of the connector.This is the most widely used technique
            because it limits the stress to the assembly, but does not require 
            great accuracy for board thickness measurement.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Pars.PercentAbove">
            <summary>
            Gets or sets the percent above the sample range.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Pars.StartHeight">
            <summary>
            Gets or sets the start height in mm.
            </summary>
            <value>The start height.</value>
        </member>
        <member name="P:CFX.Structures.PressInsertion.Pars.Distance">
            <summary>
            Gets or sets the distance in mm
            </summary>
            <value>The distance.</value>
        </member>
        <member name="T:CFX.Structures.PressInsertion.PlotData">
            <summary>
            Describes a force vs position vs time data points for a press.
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.PlotData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PlotData.Points">
            <summary>
            An array containing the force position time data points
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.PressData">
            <summary>
            Describes various data pertaining the result of a press.
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.PressData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressData.Status">
            <summary>
             Status indicating how the press terminated
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressData.TerminationMeasurement">
            <summary>
             Describes the force or height measurement which caused the press to terminate
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressData.SPCAverageForce">
            <summary>
             The average force measured over the SPC position range
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressData.HeightAtMaxForce">
            <summary>
             The height at which max pressing force was achieved
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressData.MaxForce">
            <summary>
             The max force achieved during the press
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressData.TerminationHeight">
            <summary>
             The height at which the press terminated
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressData.TerminationForce">
            <summary>
             The force at which the press terminated
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.PressProfile">
            <summary>
            Describes a Press Profile.  Press Profile consist of a sequence of steps which describe the motion of the pressing operation.
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.PressProfile.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressProfile.ProfileName">
            <summary>
            The  name of the profile.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressProfile.Steps">
            <summary>
            An array of the steps of the Press Profile.
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.PressResult">
            <summary>
            Describes result of a connector press.
            </summary>
        </member>
        <member name="M:CFX.Structures.PressInsertion.PressResult.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressResult.PressBoardData">
            <summary>
             Data for board currently being processed
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressResult.PressConnector">
            <summary>
             Connector that was pressed
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressResult.Data">
            <summary>
             Data and status information about the results pressing cycle
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressResult.ConnectorLocation">
            <summary>
             Location on PCB of connector that was pressed
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressResult.SequenceNumber">
            <summary>
             Integer indicating where in the recipe sequence the press occurs
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressResult.MachineID">
            <summary>
             The ID of the Machine used to complete the press
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressResult.PressOperator">
            <summary>
             Describes the Operator who ran the press cycle (optional)
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.PressTool">
            <summary>
            Represents a type of tool used in press insertion operations
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressTool.ToolDimensionX">
            <summary>
            The x dimension of the tool used for the pressing operation
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressTool.ToolDimensionY">
            <summary>
            The y dimension of the tool used for the pressing operation
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressTool.ToolDimensionZ">
            <summary>
            The z dimension of the tool used for the pressing operation
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.PressTool.ToolClearanceDimension">
            <summary>
            The clearance dimension of the tool used for the pressing operation
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.ProfileStep">
            <summary>
            Describes a individual step of a Press Profile
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ProfileStep.SequencePosition">
            <summary>
            The sequence position of this step in relation to the other steps in the profile.  Steps are peformed in increasing sequence integer order 1...n
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ProfileStep.Name">
            <summary>
            The name of this step
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ProfileStep.Speed">
            <summary>
            The speed of this step in mm/s.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.ProfileStep.TypeOfStep">
            <summary>
            An enumeration indicating the type of this step
            </summary>
        </member>
        <member name="T:CFX.Structures.PressInsertion.SPC">
            <summary>
            Statistial Process Control parameters for the pressing operation.
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.SPC.StartDistance">
            <summary>
            Gets or sets the distance from the board when SPC will be initiated
            </summary>
        </member>
        <member name="P:CFX.Structures.PressInsertion.SPC.StartHeight">
            <summary>
            Gets or sets the start height.
            </summary>
            <value>The start height.</value>
        </member>
        <member name="P:CFX.Structures.PressInsertion.SPC.MinimumForceLimit">
            <summary>
            Gets or sets the minimum force limit per pin (N/pin).
            </summary>
            <value>The minimum force.</value>
        </member>
        <member name="P:CFX.Structures.PressInsertion.SPC.MaximumForceLimit">
            <summary>
            Gets or sets the maximum force limit per pin (N/pin)
            </summary>
            <value>The maximum force limit.</value>
        </member>
        <member name="T:CFX.Structures.PressInsertion.StepType">
            <summary>
            Type of the Press Profile Step
            </summary>
        </member>
        <member name="F:CFX.Structures.PressInsertion.StepType.MoveToHeightOrForce">
            <summary>
            Move to the specified Height or Force, whichever is reached first
            </summary>
        </member>
        <member name="F:CFX.Structures.PressInsertion.StepType.Delay">
            <summary>
            Delay action
            </summary>
        </member>
        <member name="F:CFX.Structures.PressInsertion.StepType.Retract">
            <summary>
            Retract action
            </summary>
        </member>
        <member name="T:CFX.Structures.ProcessData">
            <summary>
            Dynamic data structure representing data that was collected during the processing of a production unit or collection of units.
            </summary>
        </member>
        <member name="T:CFX.Structures.ProcessedUnit">
            <summary>
            Structure representing a production units that has been processed at
            an endpoint involved in the processing of production units.
            </summary>
        </member>
        <member name="M:CFX.Structures.ProcessedUnit.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ProcessedUnit.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.ProcessedUnit.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard)
            </summary>
        </member>
        <member name="P:CFX.Structures.ProcessedUnit.UnitResult">
            <summary>
            Indicates the overall result of the processing that was performed on the unit.
            </summary>
        </member>
        <member name="P:CFX.Structures.ProcessedUnit.UnitProcessData">
            <summary>
            Process data specific to this particular production unit.  This may be null if there is 
            no process data specfific to this individual unit.  For example, if all units processed
            during the transaction experienced the same conditions, the UnitsProcessed message will
            contain this information, and the UnitProcessData property will be null.
            </summary>
        </member>
        <member name="T:CFX.Structures.ProcessingResult">
            <summary>
            The overall result of processing performed on a production unit in the course of production.
            </summary>
        </member>
        <member name="F:CFX.Structures.ProcessingResult.Succeeded">
            <summary>
            The processing succeeded
            </summary>
        </member>
        <member name="F:CFX.Structures.ProcessingResult.Failed">
            <summary>
            The processing failed
            </summary>
        </member>
        <member name="F:CFX.Structures.ProcessingResult.Error">
            <summary>
            The processing could not be completed because an error occurred.
            </summary>
        </member>
        <member name="F:CFX.Structures.ProcessingResult.Aborted">
            <summary>
            The processing was aborted by the operator / user.
            </summary>
        </member>
        <member name="F:CFX.Structures.ProcessingResult.Skipped">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            The test was skipped because of (virtual) bad mark
            </summary>
        </member>
        <member name="T:CFX.Structures.Reading">
            <summary>
            A data structure that represents a reading that was taken against a production unit or piece of equipment
            </summary>
        </member>
        <member name="M:CFX.Structures.Reading.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ReadingIdentifier">
            <summary>
            A name that uniquely describes the test or measurement that was performed.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.TimeRecorded">
            <summary>
            The date/time when this Reading was recorded.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ReadingSequence">
            <summary>
            An optional positive integer describing the sequence in which the tests or measurements were performed
            that resulted in this Reading.
            /// </summary>
        </member>
        <member name="P:CFX.Structures.Reading.Result">
            <summary>
            An enumeration indicating whether or not this reading is considered acceptable.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.UnitIdentifier">
            <summary>
            In the case that this Reading is associated to a particular production unit, and the Reading is not associated
            with a work transaction, this property contains the unique identifier of the production unit.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.UnitPositionNumber">
            <summary>
            In the case that this Reading is associated with a particular production unit, and the Reading is associated
            with a work transaction, this property contains the position number of the unit as it relates to the transaction.  
            If a position number is not specified, it is assumed that the Reading applies to all units associated with the
            transaction.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.Components">
            <summary>
            An optional list of components (instance of a part) on a production unit(s) to be associated with this reading.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ValueDataType">
            <summary>
            An enumeration describing the type of value contained in the Value or BinaryValue properties.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ValueUnits">
            <summary>
            The units of the value (must be a valid SI unit)
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ValueMimeType">
            <summary>
            If the Reading is of type DataType.Binary, this property contains the MIME type
            of the binary data contained in the BinaryValue property.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.Value">
            <summary>
            The value of the reading
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.BinaryValue">
            <summary>
            If the Reading is of type DataType.Binary, this property contains the binary
            representation of the value.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ExpectedValue">
            <summary>
            The expected value
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ExpectedValueUnits">
            <summary>
            The units of the expected value (must be a valid SI unit)
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.MinimumAcceptableValue">
            <summary>
            The minimum acceptable value
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.MaximumAcceptableValue">
            <summary>
            The maximum acceptable value
            </summary>
        </member>
        <member name="T:CFX.Structures.Recipe">
            <summary>
            Represents a collection of instructions used by a piece of automated equipment to perform
            a function (typically upon a production unit) during production.
            </summary>
        </member>
        <member name="M:CFX.Structures.Recipe.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.Name">
            <summary>
            The name of the recipe (may include full path, if applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.Revision">
            <summary>
            An optional version number, e.g. “2.0”
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.ExpectedCycleTime">
            <summary>
            The total amount of time that is expected to process one unit or group of units (as in the case of a carrier or panelized PCB), 
            assuming no blocked or starved conditions at the station.  This includes both productive and non-productive time, such as transfer, 
            positioning, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.ExpectedWorkTime">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            The total amount of productive time (in ms) that is expected to process one unit or group of units (as in the case of a carrier or panelized PCB),
            assuming no blocked or starved conditions at the station. This does not include any non-productive time, such as transfer, positioning, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.ExpectedUnitsPerWorkTransaction">
            <summary>
            The number of units that are to be processed simulataneously by this recipe.  For example, in the case of a 2 x 2 panelized PCB, this
            property would be 4 because 4 units (PCB's) are procesed at one time per work transaction.  In the case that a station processes a
            variable number of units per transaction, this should represent the average number of units expected to be processed per transaction.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.UnitLength">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Length (X-Axis) of the Units processed within this Recipe, in centimeters.  Parallel to direction of production flow.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.UnitWidth">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Width (Y-Axis) of the Units processed within this Recipe, in centimeters.  Perpendicular to direction of production flow when viewed from above.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.UnitHeight">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Heigth (Z-Axis) of the Units processed within this Recipe, in centimeters.  Perpendicular to direction of production flow when viewed from the side.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.MimeType">
            <summary>
            The MIME type of the binary data contained by the RecipeData property.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.RecipeData">
            <summary>
            A binary representation of the recipe data.
            </summary>
        </member>
        <member name="T:CFX.Structures.RecipeIdentifier">
            <summary>
            <para> ** NOTE: ADDED in CFX 1.4 **</para>
            Represents a collection of instructions used by a piece of automated equipment to perform
            a function (typically upon a production unit) during production. The RecipeLean does not deliver the Recipe data
            but RecipeName and Revision only. For the full Recipe data, please see <see cref="T:CFX.Structures.Recipe"/>.
            </summary>
        </member>
        <member name="M:CFX.Structures.RecipeIdentifier.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.RecipeIdentifier.RecipeName">
            <summary>
            The name of the recipe (may include full path, if applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.RecipeIdentifier.Revision">
            <summary>
            An optional version number, e.g. “2.0”
            </summary>
        </member>
        <member name="T:CFX.Structures.RecipeModificationReason">
            <summary>
            Reasons why a recipe was modified at an endpoint
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.Unspecified">
            <summary>
            Unspecified reason
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.NewRecipe">
            <summary>
            Newly created recipe
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.NewRevision">
            <summary>
            New revision of an existing recipe
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.UpdatedGeometry">
            <summary>
            Geometric information was updated
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.UpdatedBOM">
            <summary>
            Bill of Materials information was updated
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.PositionalCorrection">
            <summary>
            Correction to positional information
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.RotationalCorrection">
            <summary>
            Correction to rotational information
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.VisionSystemCorrection">
            <summary>
            Correction to information needed by vision system.
            </summary>
        </member>
        <member name="F:CFX.Structures.RecipeModificationReason.RecipeDeleted">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            The recipe has been deleted
            </summary>
        </member>
        <member name="T:CFX.Structures.RecipeStageInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Describes some information about a recipe for a specific  stage
            </summary>
        </member>
        <member name="P:CFX.Structures.RecipeStageInformation.Stage">
            <summary>
            A structure describing basic information about the stage.
            </summary>
        </member>
        <member name="P:CFX.Structures.RecipeStageInformation.ExpectedCycleTime">
            <summary>
            The total amount of time (in ms) that is expected to process one unit or group of units (as in the case of a carrier or panelized PCB) for a stage of the machine, 
            assuming no blocked or starved conditions at the station. This includes both productive and non-productive time, such as transfer, 
            positioning, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.RecipeStageInformation.ExpectedWorkTime">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            The total amount of productive time (in ms) that is expected to process one unit or group of units (as in the case of a carrier or panelized PCB),
            assuming no blocked or starved conditions at the station. This does not include any non-productive time, such as transfer, positioning, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.RecipeStageInformation.NumberOfComponentsPerUnit">
            <summary>
            The number of components to install for each unit of a work for a stage of the machine.
            </summary>
        </member>
        <member name="T:CFX.Structures.ReflowProfiling.NamespaceDoc">
            <summary>
            Data structures related to the thermal profiling of Printed Circuit Boards (PCB's) through a solder reflow oven.
            </summary>
        </member>
        <member name="T:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData">
            <summary>
            Provides production unit reflow statistics
            </summary>
        </member>
        <member name="M:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.TimeDateUnitIn">
            <summary>
            Time and date Production Unit entered oven in ISO 8061 Datetime format. 
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.TimeDateUnitOut">
            <summary>
            Time and date Production Unit exited oven in short date pattern.
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.ProductName">
            <summary>
            Name of product
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.Barcode">
            <summary>
            Barcode of Production Unit
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.RecipeName">
            <summary>
            Name of recipe
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.ProcessWindowName">
            <summary>
            Name of process window
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.LotID">
            <summary>
            Lot identification value
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.OvenName">
            <summary>
            Name of oven
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.Lane">
            <summary>
            Lane within oven. 1 is “front” and 2 is “back”
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.ConveyorSpeedSetpoint">
            <summary>
            The converyor speed setpoint (in cm / minute)
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.MeasuredConveyorSpeed">
            <summary>
            The actual conveyor speed (in cm / minute)
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.Result">
            <summary>
            "PASS" or "FAIL". FAIL if absolute value of ProductionUnitPWI exceeds 100.0
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.ProductionUnitPWI">
            <summary>
            The Process Window Index of the production unit
            </summary>
        </member>
        <member name="P:CFX.Structures.ReflowProfiling.ReflowProfilingProcessData.ZoneData">
            <summary>
            Process data (temperatures, etc.) for each zone of the reflow oven at the 
            time when this transaction tool place.
            </summary>
        </member>
        <member name="T:CFX.Structures.Region">
            <summary>
            Describes a planar, 2 dimensional region as defined by a series of X, Y coordinates
            that when plotted, form the region.
            </summary>
        </member>
        <member name="M:CFX.Structures.Region.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Region.StartPointX">
            <summary>
            X coordinate of first point in region outline
            </summary>
        </member>
        <member name="P:CFX.Structures.Region.StartPointY">
            <summary>
            Y coordinate of first point in region outline
            </summary>
        </member>
        <member name="P:CFX.Structures.Region.RegionSegments">
            <summary>
            Collection of (X, Y) coordinates that when plotted form a planar region.
            </summary>
        </member>
        <member name="T:CFX.Structures.RejectionDetails">
            <summary>
            Describes details on a rejection of a component
            </summary>
        </member>
        <member name="T:CFX.Structures.RejectionReason">
            <summary>
            Rejection reason
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.Unknown">
            <summary>
            Rejection reason is unknown 
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.MechanicalError">
            <summary>
            The component was not placed because of a mechanical error
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.ElectricalError">
            <summary>
            The component was not placed because of an electrical error
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.SoftwareError">
            <summary>
            The component was not placed because of a software error
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.ExternalDeviceError">
            <summary>
            The component was not placed because of an error from an external device
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.BadElectricalTest">
            <summary>
            The component was rejected because of a bad electrical test
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.ErrorAfterPickUp">
            <summary>
            The component was rejected because of a generic error detected after pickup
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.BadVisionTestAfterPickup">
            <summary>
            The component was rejected because of a bad vision test after pickup
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.BadPressureTestAfterPickup">
            <summary>
            The component was rejected because of a bad pressure test after pickup
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.BadOpticalTestAfterPickup">
            <summary>
            The component was rejected because of a bad optical test after pickup
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.ErrorAfterPlacement">
            <summary>
            The component was rejected because of a wrong placement
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.BadVisionTestAfterPlacement">
            <summary>
            The component was rejected because of a bad vision test after placement
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.BadPressureTestAfterPlacement">
            <summary>
            The component was rejected because of a bad pressure test after placement
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.BadOpticalTestAfterPlacement">
            <summary>
            The component was rejected because of a bad optical test after placement
            </summary>
        </member>
        <member name="F:CFX.Structures.RejectionReason.BadVisionTestBeforePickup">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            The component was rejected because of a bad vision test before pickup
            </summary>
        </member>
        <member name="T:CFX.Structures.Repair">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Describes a single repair that was performed on a production unit in the course of rework and/or repair.
            </summary>
        </member>
        <member name="M:CFX.Structures.Repair.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.UniqueIdentifier">
            <summary>
            A unique indentifier describing a particular repair.
            Each new occurrence or recurrence of this same repair a new unique identifier.
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.RepairName">
            <summary>
            Identifies the nature of the repair performed.
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.RepairStartTime">
            <summary>
            Indicates the time when this particular repair began (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.RepairEndTime">
            <summary>
            Indicates the time when this particular repair ended (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.Comments">
            <summary>
            Optional comments from the person who performed this repair
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.ComponentOfInterest">
            <summary>
            An optional component or specific component pins related to this repair.
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.RegionOfInterest">
            <summary>
            An optional location or area on the production unit where the repair is located 
            (for cases where there is no specific component related, such as a scratch or 
            cosmetic defect).
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.RelatedDefectIdentifiers">
            <summary>
            A list of the unique identifiers of the previously reported defects to which
            this repair relates.  It is assumed that if the repair is successful, these defects
            may be considered repaired.
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.ReclassifiedDefects">
            <summary>
            If previously reported defects are re-classified during the repair process, the updated details of those
            defects may be reported using this property.
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.RelatedSymptomIdentifiers">
            <summary>
            A list of the unique identifiers of the previously reported symptoms (faulty test results) to which
            this repair relates.  It is assumed that if the repair is successful, these symptoms
            may be considered resolved.
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.ReclassifiedSymptoms">
            <summary>
            If previously reported symptoms (faulty test results) are re-classified during the repair process, the updated details of those
            symptoms may be reported using this property.
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.Result">
            <summary>
            The overall result of the repair
            </summary>
        </member>
        <member name="P:CFX.Structures.Repair.Error">
            <summary>
            In the case that the repair cannot be completed, the error that was the cause of this outcome.
            </summary>
        </member>
        <member name="T:CFX.Structures.RepairedUnit">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            Describes the results of repairs performed on a single production unit.
            </summary>
        </member>
        <member name="M:CFX.Structures.RepairedUnit.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.RepairedUnit.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.RepairedUnit.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard)
            </summary>
        </member>
        <member name="P:CFX.Structures.RepairedUnit.OverallResult">
            <summary>
            The overall result of the repairs performed on this unit
            </summary>
        </member>
        <member name="P:CFX.Structures.RepairedUnit.Repairs">
            <summary>
            A list of the Repairs performed, along with the results
            </summary>
        </member>
        <member name="T:CFX.Structures.RepairResult">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            The result of a repair
            </summary>
        </member>
        <member name="F:CFX.Structures.RepairResult.RepairSuccessful">
            <summary>
            The repair was performed successfully
            </summary>
        </member>
        <member name="F:CFX.Structures.RepairResult.UnableToRepair">
            <summary>
            The repair was not able to be completed
            </summary>
        </member>
        <member name="F:CFX.Structures.RepairResult.Scrap">
            <summary>
            It is not possible to repair the unit, and the unit must be scrapped
            </summary>
        </member>
        <member name="F:CFX.Structures.RepairResult.Error">
            <summary>
            The repair could not be completed because an error occurred
            </summary>
        </member>
        <member name="F:CFX.Structures.RepairResult.Aborted">
            <summary>
            The repair was aborted by the operator / user
            </summary>
        </member>
        <member name="T:CFX.Structures.RequestResult">
            <summary>
            A structure which indicates whether or not a CFX request to an endpoint was successful.
            If not successful, information about the nature of the failure is provided.
            </summary>
        </member>
        <member name="M:CFX.Structures.RequestResult.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.RequestResult.Result">
            <summary>
            An enumeration indication whether or not the request was successfully executed
            </summary>
        </member>
        <member name="P:CFX.Structures.RequestResult.ResultCode">
            <summary>
            In the case of a failure, an integer-based, endpoint-specific error code
            indicating the nature of the failure
            </summary>
        </member>
        <member name="P:CFX.Structures.RequestResult.Message">
            <summary>
            In the case of a failure, a human readable message indicating the nature of the failure
            </summary>
        </member>
        <member name="T:CFX.Structures.Resource">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Describes the details of a particular Resource.
            This is a dynamic structure.
            </summary>
        </member>
        <member name="M:CFX.Structures.Resource.#ctor">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Resource.UniqueIdentifier">
            <summary>
            The barcode, RFID, or other unique identifier that is used to identify this machine / resource.
            </summary>
        </member>
        <member name="P:CFX.Structures.Resource.Name">
            <summary>
            The name of the resource to be used in GUIs or reporting (optional)
            </summary>
        </member>
        <member name="P:CFX.Structures.Resource.ResourceType">
            <summary>
            The type of resource (e.g. SMT, AOI, Oven). 
            </summary>
        </member>
        <member name="P:CFX.Structures.Resource.Vendor">
            <summary>
            The name of the vendor of the machine / resource (optional)
            </summary>
        </member>
        <member name="P:CFX.Structures.Resource.ModelNumber">
            <summary>
            The model number of the machine / resource
            </summary>
        </member>
        <member name="P:CFX.Structures.Resource.SerialNumber">
            <summary>
            The serial number of the machine / resource
            </summary>
        </member>
        <member name="P:CFX.Structures.Resource.SoftwareVersion">
            <summary>
            The software version of the machine / resource
            </summary>
        </member>
        <member name="P:CFX.Structures.Resource.FirmwareVersion">
            <summary>
            The firmware version of the  machine / resource (optional)
            </summary>
        </member>
        <member name="T:CFX.Structures.ResourceInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Dynamic structure that contains information related to the resources / sub-resources in an Endpoint.
            It may be used to model, among the others: camera, conveyor, gantries and other 
            parts that may require traceable operations (i.e. maintenance)
            </summary>
        </member>
        <member name="P:CFX.Structures.ResourceInformation.ResourceName">
            <summary>
            Name of the resource / sub-resource in the endpoint
            </summary>
        </member>
        <member name="P:CFX.Structures.ResourceInformation.ResourceIdentifier">
            <summary>
            The internal identifier (if applicable) of the part that is installed at this position.
            </summary>
        </member>
        <member name="P:CFX.Structures.ResourceInformation.IdentiferUniqueness">
            <summary>
            An enumeration indicating the type of unique identifier for the specified resource
            Values: GloballyPersistent, LocallyPersistent, UnserializedLocation or Unknown
            </summary>
        </member>
        <member name="P:CFX.Structures.ResourceInformation.ResourceType">
            <summary>
            The type of the part that is installed at this position.
            </summary>
        </member>
        <member name="P:CFX.Structures.ResourceInformation.ResourcePosition">
            <summary>
            The position where the required part is installed on the Endpoint (optional). 
            Where applicable, a dot (".") notation should be utilized to designate specific positions.
            Examples: MODULE1.BEAM1.HEADPOS2, MODULE1.NEST3.NOZZLESLOT4, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.ResourceInformation.MaintenanceStatus">
            <summary>
            The maintenance status for this resource
            </summary>
        </member>
        <member name="P:CFX.Structures.ResourceInformation.AdditionalSubResources">
            <summary>
            Optional:In case a nonstandard additional resource shall be modelled.
            This list gives the flexibility of modelling objects which are not explicitly specified in the model.
            The recommendation is to use this field only in case of unknown resource types 
            </summary>
        </member>
        <member name="T:CFX.Structures.ResourceState">
            <summary>
            Endpoint state model.  Based on SEMI E10 and E58.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.PRD">
            <summary>
            Productive Time.  A period of time when the resource is performing its intended function.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.PRD_RegularWork">
            <summary>
            Productive Time.  Regular Work.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.PRD_WorkForThirdParties">
            <summary>
            Productive Time.  Work for Third Parties.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.PRD_Rework">
            <summary>
            Productive Time.  Rework.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.PRD_Engineering">
            <summary>
            Productive Time.  Engineering.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SBY">
            <summary>
            Standby.  A period of time, other than non-scheduled time, when the resource is in a condition to perform
            its intended function, but it is not operating.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SBY_NoOperator">
            <summary>
            Standby.  No Operator.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SBY_NoProduct">
            <summary>
            Standby.  No Product 
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SBY_NoProductBlocked">
            <summary>
            Standby.  No Product (Resource is Blocked)
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SBY_NoProductStarved">
            <summary>
            Standby.  No Product (Resource is Starved)
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SBY_NoSupportTool">
            <summary>
            Standby.  No Support Tool (A required Tool is missing.  For example, a stencil on a stencil printer.).
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SBY_AssociatedClusterModuleDown">
            <summary>
            Standby.  Associated Cluster Module Down.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SBY_NoHost">
            <summary>
            Standby.  No Host.  (Communication with a critical upper level controller or system has been lost, and 
            resource cannot operate).
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.ENG">
            <summary>
            Engineering.  A period of time when the resource is in a condition to perform its intended function (no equipment or
            process problems exist), but it is operating to conduct engineering experiments.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.ENG_ProcessExperiments">
            <summary>
            Engineering.  Process experiments.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.ENG_EquipmentExperiments">
            <summary>
            Engineering.  Equipment experiments.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SDT">
            <summary>
            Scheduled Downtime.  A period of time when the resource is not available to perform its intended function due to 
            planned downtime events.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SDT_UserMaintenanceDelay">
            <summary>
            Scheduled Downtime.  User Maintenance Delay.  Waiting for required maintenance personnel.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SDT_SuppliedMaintenanceDelay">
            <summary>
            Scheduled Downtime.  Supply Maintenance Delay.  Waiting for parts required to perform maintenance.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SDT_PreventiveMaintenance">
            <summary>
            Scheduled Downtime.  Actively working on Preventive Maintenance procedures.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SDT_ChangeOfConsumables">
            <summary>
            Scheduled Downtime.  Scheduled changed of supply materials.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SDT_Setup">
            <summary>
            Scheduled Downtime.  Scheduled setup time.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SDT_ProductionTest">
            <summary>
            Scheduled Downtime.  Scheduled production testing.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.SDT_FacilitiesRelated">
            <summary>
            Scheduled Downtime.  Facilities related.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.USD">
            <summary>
            Unscheduled Downtime.  A period of time when the resource is not available to perform its intended
            function due to unplanned downtime events.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.USD_UserMaintentanceDelay">
            <summary>
            Unscheduled Downtime.  User Maintenance Delay.  Waiting for required maintenance personnel.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.USD_SuppliedMaintenanceDelay">
            <summary>
            Unscheduled Downtime.  User Supply Delay.  Waiting for parts required to perform maintenance.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.USD_Repair">
            <summary>
            Unscheduled Downtime.  Repair underway.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.USD_OutOfSpecInputMaterial">
            <summary>
            Unscheduled Downtime.  A condition necessary for proper production is not in order.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.USD_ChangeOfConsumables">
            <summary>
            Unscheduled Downtime.  Supply material is empty, and needs to be changed.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.USD_FacilitiesRelated">
            <summary>
            Unscheduled Downtime.  Facilities related.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.NST">
            <summary>
            Non-Scheduled Time.  A period of time when the resource is not scheduled to be utilized in production, such as unworked
            shifts, weekends, and holidays (including startup and shutdown).
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.NST_UnworkedShifts">
            <summary>
            Non-Scheduled Time.  Unworked shifts.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.NST_EquipmentInstallation">
            <summary>
            Non-Scheduled Time.  Equipment installation.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.NST_EquipmentModifications">
            <summary>
            Non-Scheduled Time.  Equipment modifications.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.NST_OfflineTraining">
            <summary>
            Non-Scheduled Time.  Offline training.
            </summary>
        </member>
        <member name="F:CFX.Structures.ResourceState.NST_ShutdownAndStartup">
            <summary>
            Non-Scheduled Time.  Shutdown and Startup.
            </summary>
        </member>
        <member name="T:CFX.Structures.RotationAxis">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Rotation axis of the resource, typically the head in an Endpoint.
            It may have a meaning for the lifecycle of the resource, which may be independent
            from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.SamplingInformation">
            <summary>
            Describes the sampling strategy to be employed on a particular lot of material / units during test or inspection
            </summary>
        </member>
        <member name="M:CFX.Structures.SamplingInformation.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SamplingInformation.SamplingMethod">
            <summary>
            An enumeration describing the sampling method that was employed (if any)
            </summary>
        </member>
        <member name="P:CFX.Structures.SamplingInformation.LotSize">
            <summary>
            The total number of units in the lot
            </summary>
        </member>
        <member name="P:CFX.Structures.SamplingInformation.SampleSize">
            <summary>
            The number of units from the total lot to be inspected / tested.  
            This is a subset of the total lot.
            </summary>
        </member>
        <member name="T:CFX.Structures.SamplingMethod">
            <summary>
            Describes a particular sampling methodology.
            </summary>
        </member>
        <member name="F:CFX.Structures.SamplingMethod.NoSampling">
            <summary>
            No sampling.  All units are inspected (100% Inspection).
            </summary>
        </member>
        <member name="F:CFX.Structures.SamplingMethod.ANSI_Z14">
            <summary>
            Units sampled according to ANSI/ASQ Z1.4 AQL methods.
            </summary>
        </member>
        <member name="F:CFX.Structures.SamplingMethod.MIL_STD_105">
            <summary>
            Units sampled according to MIL-STD-105 mil standard.
            </summary>
        </member>
        <member name="F:CFX.Structures.SamplingMethod.MIL_STD_1916">
            <summary>
            Units sampled according to MIL-STD-1916 mil standard.
            </summary>
        </member>
        <member name="F:CFX.Structures.SamplingMethod.Squeglia">
            <summary>
            Units sampled according to the Squeglia AQL method.
            </summary>
        </member>
        <member name="F:CFX.Structures.SamplingMethod.FixedSample">
            <summary>
            A fixed number of units were sampled (lot size disregarded).
            </summary>
        </member>
        <member name="T:CFX.Structures.ScheduledWorkOrder">
            <summary>
            A data structure representing a Work Order that has been scheduled to be executed
            at a particular work area within the factory at a particular time.  Includes all of the physical 
            resources, tools, personnel, and materials that are required to execute the Work Order.
            </summary>
        </member>
        <member name="M:CFX.Structures.ScheduledWorkOrder.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.WorkOrderIdentifier">
            <summary>
            Identifies the Work Order (or Work Order sub-batch) that is scheduled.
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.Scheduler">
            <summary>
            Identifies the person who was responsible for scheduling the Work Order (optional).
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.WorkArea">
            <summary>
            Identifies the physical location where the Work Order will be executed.  A single Work Order
            may be scheduled to run in different physical locations at different times.
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.StartTime">
            <summary>
            The time when production will begin for this Work Order in the designated work area.
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.EndTime">
            <summary>
            THe time when production is expected to be completed for this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.ReservedResources">
            <summary>
            An optional list of the physical resources / assets that are required to 
            execute the Work Order (Lines, Machines, etc.).
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.ReservedTools">
            <summary>
            An optional list of the tools that are required to execute the Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.ReservedOperators">
            <summary>
            An optional list of the operators that have been allocated to execute this scheduled
            Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrder.ReservedMaterials">
            <summary>
            An optional list of the specific materials that are necessary to execute this scheduled Work Order.
            </summary>
        </member>
        <member name="T:CFX.Structures.ScheduledWorkOrderIdentifier">
            <summary>
            Data structure which identifies a Work Order that has already been scheduled for production.
            </summary>
        </member>
        <member name="M:CFX.Structures.ScheduledWorkOrderIdentifier.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrderIdentifier.WorkOrderIdentifier">
            <summary>
            Identifies the Work Order (or Work Order sub-batch) that is scheduled.
            </summary>
        </member>
        <member name="P:CFX.Structures.ScheduledWorkOrderIdentifier.WorkArea">
            <summary>
            Identifies the physical location where the Work Order will be executed.  A single Work Order
            may be scheduled to run in different physical locations at different times.
            </summary>
        </member>
        <member name="T:CFX.Structures.Segment">
            <summary>
            An X/Y coordinate that is used to define a planar region.
            </summary>
        </member>
        <member name="P:CFX.Structures.Segment.X">
            <summary>
            The X Coordinate
            </summary>
        </member>
        <member name="P:CFX.Structures.Segment.Y">
            <summary>
            The Y Coordinate
            </summary>
        </member>
        <member name="T:CFX.Structures.SideLocation">
            <summary>
            The Side location is giving an indication for the operator from which side in transport direction of the PCB unit
            the fault or error can be accessed and fixed. 
            </summary>
        </member>
        <member name="F:CFX.Structures.SideLocation.Unknown">
            <summary>
            c
            </summary>
        </member>
        <member name="F:CFX.Structures.SideLocation.Right">
            <summary>
            Location of the occurrence of the fault is the rigfht side in transport direction of the PCB unit. 
            </summary>
        </member>
        <member name="F:CFX.Structures.SideLocation.Left">
            <summary>
            Location of the occurrence of the fault is the left side in transport direction of the PCB unit. 
            </summary>
        </member>
        <member name="F:CFX.Structures.SideLocation.Both">
            <summary>
            Location of the occurrence of the fault are both sides in transport direction of the PCB unit. 
            </summary>
        </member>
        <member name="T:CFX.Structures.SleepState">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Definition of Sleep State
            </summary>
        </member>
        <member name="M:CFX.Structures.SleepState.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SleepState.SleepName">
            <summary>
            A descriptive name for this sleep state
            </summary>
        </member>
        <member name="P:CFX.Structures.SleepState.PowerSaving">
            <summary>
            Power consumption saving achieved through this sleep state.
            PowerSaving units are percentages
            </summary>
        </member>
        <member name="P:CFX.Structures.SleepState.WakeupTime">
            <summary>
            Time interval required to go from the current sleep state to the "Awake" state.
            WakeupTime units are seconds
            </summary>
        </member>
        <member name="T:CFX.Structures.SMTRecipeStageInformation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            Describes some information about a recipe for a specific stage, with more information for an SMT machine
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTRecipeStageInformation.Heads">
            <summary>
            List of heads that are associated with this stage for the given recipe, if applicable.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderDispensing.NamespaceDoc">
            <summary>
            Data structures related to Solder Dispensing equipment
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderApplication.SelectiveActivity">
            <summary>
            A specialized type of Activity that occurs within a Selective Soldering System.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderApplication.SelectiveActivity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveActivity.Action">
            <summary>
            The action that occured,
            examples: Solder Pump, Fluxer, Preheater
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderApplication.SelectiveSolderData">
            <summary>
            General data values that apply across the selective process cycle 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.Process_Status">
            <summary>
            Result of the Selective Process
            "Completed" or "Aborted"
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.RecipeName">
            <summary>
            The name of the active recipe at the time when the processing occurred.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.Nitrogen_Pressure">
            <summary>
            Pressure od the incoming Nitrogen
            in kPa (kilopascal)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.Air_Pressure">
            <summary>
            Pressure od the incoming Air
            in kPa (kilopascal)
            </summary>        
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.Cycle_Count">
            <summary>
            The total number of parts processed
            since the last reset of the Cycle Counter
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.Cycle_Time">
            <summary>
            The total time the item was within the Selective Soldering System
            </summary>        
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.Nitrogen_Purity">
            <summary>
            The Purity of the incoming Nitrogen supply
            in ppm (parts per million)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.Nitrogen_Flow">
            <summary>
            The consumption of Nitrogen by the selective soldering system
            in LPM (litres per minute)
            </summary>        
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderData.Fiducial_Enabled">
            <summary>
            Fiducial correct enabled for the selective soldering system
            "True" or "False"
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderApplication.SelectiveSolderedPCB">
            <summary>
             Message sent upon completion of the selective soldering process
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderApplication.SelectiveSolderedPCB.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderedPCB.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderedPCB.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard).
            unit’s true unique identifier.  
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderedPCB.ZoneData">
            <summary>
            Data sepcific to a single zone with the
            Selective Soldering System
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderApplication.SelectiveSolderPCBProcessData">
            <summary>
            Process Data specific to a single PCB within a group of PCB's that are selectively
            soldered.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderApplication.SelectiveSolderPCBProcessData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderPCBProcessData.ZoneData">
            <summary>
            Data sepcific to a single zone with the
            Selective Soldering System
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderApplication.SelectiveSolderProcessData">
            <summary>
            General data values that apply across the selective process cycle 
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderApplication.SelectiveSolderProcessData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.Process_Status">
            <summary>
            Result of the Selective Process
            "Completed" or "Aborted"
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.RecipeName">
            <summary>
            The name of the active recipe at the time when the processing occurred.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.Nitrogen_Pressure">
            <summary>
            Pressure od the incoming Nitrogen
            in kPa (kilopascal)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.Air_Pressure">
            <summary>
            Pressure od the incoming Air
            in kPa (kilopascal)
            </summary>        
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.Cycle_Count">
            <summary>
            The total number of parts processed
            since the last reset of the Cycle Counter
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.Cycle_Time">
            <summary>
            The total time the item was within the Selective Soldering System
            </summary>        
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.Nitrogen_Purity">
            <summary>
            The Purity of the incoming Nitrogen supply
            in ppm (parts per million)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.Nitrogen_Flow">
            <summary>
            The consumption of Nitrogen by the selective soldering system
            in LPM (litres per minute)
            </summary>        
        </member>
        <member name="P:CFX.Structures.SolderApplication.SelectiveSolderProcessData.Fiducial_Enabled">
            <summary>
            Fiducial correct enabled for the selective soldering system
            "True" or "False"
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderApplication.ZoneData">
            <summary>
            Data specific to a single zone with the
            Selective Soldering System
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.StageSequence">
            <summary>
            The identity of the zone for this set of process data.  
            Corresponds to the StageSequence number of the related Stage
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.ProcessTime">
            <summary>
            The time the item was within this zone
            of the Selective Soldering System
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bottle1_Pressure">
            <summary>
            Pressure of the Nitrogen for flux applicator 1
            in kPa (kilopascal)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bottle2_Pressure">
            <summary>
            Pressure of the Nitrogen for flux applicator 2
            in kPa (kilopascal)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Flux_Volume">
            <summary>
            The total volume of flux applied to the item
            in mg (milligrams)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Top_Preheater_Power">
            <summary>
            The power setting for the top side preheater
            during the heating phase
            as a percentage (0-100%)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Top_Preheater_Soak">
            <summary>
            The power setting for the top side preheater
            during the soak phase
            as a percentage (0-100%)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Top_Preheater_Temp">
            <summary>
            The maximum temperature of the item
            during the preheating cycle
            in Celsius
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Top_Preheater_Time">
            <summary>
            The total time for the prehearting
            phase within this zone
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bot_Preheater_Power">
            <summary>
            The power setting for the bottom side preheater
            as a percentage (0-100%)        
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bot_Preheater_Soak">
            <summary>
            The power setting for the bottom side preheater
            during the soak phase
            as a percentage (0-100%)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bot_Preheater_Temp">
            <summary>
            The maximum temperature of the item
            during the preheating cycle
            in Celsius
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bot_Preheater_Time">
            <summary>
            The total time for the prehearting
            phase within this zone
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bath_Temp">
            <summary>
            Temperature of the solder bath
            in Celsius
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bath_Wave_Enabled">
            <summary>
            Solder Wave Height correction enabled 
            for the selective soldering system
            "True" or "False"
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Bath_Wave_Hgt">
            <summary>
            The value the wave height was corrected by
            in mm (millimetres)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Solder_Quantity_Used">
            <summary>
            The quantity of solder consumed by the soldering process
            in grams
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Fid_XCorrection">
            <summary>
            The X-axis fiducial correction value
            in mm (millimetres)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderApplication.ZoneData.Fid_YCorrection">
            <summary>
            The Y-axis fiducial correction value
            in mm (millimetres)
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPasteInspection.InspectionItem">
             <summary>
             <para>** NOTE: ADDED in CFX 1.3 **</para>
            Provide information of the object to be inspected
             </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionItem.Group">
            <summary>
            An optional field to specify the classification, like "Capacitor", "Resistor", "DPAK"
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionItem.Type">
            <summary>
            Inspection object type enumeration 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionItem.RefNo">
            <summary>
            Unique Number of the inspection object, The No will be used in the Unit inspection messages to uniquely identify the Inspection step
            Its unique within this recipe
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionItem.CRD">
            <summary>
            An optional designators (instances of a part) on a production unit(s)
            May include sub-components in "." notation.  Examples:  R1, R2, R3   or  R2.3 (R2, pin 3)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionItem.PartNumber">
            <summary>
            Optional: The part number (internal) of the assembly to be produced by this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionItem.PackageType">
            <summary>
            When available, it describes the shape of the inspected object.
            For example, if the object is a component (0201, 0402 etc.)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionItem.Steps">
            <summary>
            Each Inspection is to be inspected applying one or more inspection steps
            Each inspection step is associated with a measurement
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPasteInspection.InspectionItemType">
             <para>** NOTE: ADDED in CFX 1.3 **</para>
            Provide information of the inspection object type
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.Unknown">
            <summary>
            Unknown object
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.General">
            <summary>
            General object not specifically modelled in this enumeration
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.PCB">
            <summary>
            Printed Circuit Board with 1:n Unit(s)
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.Unit">
            <summary>
            CFX Unit 
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.Fiducial">
            <summary>
            Fiducial of the unit inspected
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.Barcode">
            <summary>
            Barcode, 1D, 2D
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.Component">
            <summary>
            Component on a unit
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.Pin">
            <summary>
            Pin of a given component
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.Pad">
            <summary>
            2D PCB location
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPasteInspection.InspectionItemType.SolderDeposit">
            <summary>
            Solder deposit
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            A class to represent the expected measurement results of an inspection process. 
            This information is tranferred within the Recipe.
            Typical example: solder paste inspection (SPI) expected values for the different dimensions
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.EX">
            <summary>
            The expected or nominal dimension (length) of the inspection object, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.EY">
            <summary>
            The expected or nominal dimension (length) of the inspection object, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.EZ">
            <summary>
            The expected or nominal height of the inspection object, expressed in millimeters (mm).
            This value conforms to the stencil thickness on the position where the aperture is located
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.PX">
            <summary>
            The expected or nominal X position of the inspection object, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.PY">
            <summary>
            The expected or nominal Y position of the inspection object, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.EA">
            <summary>
            The expected area of the inspection object, expressed in square millimeters 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.EVol">
            <summary>
            The expected or nominal volume of the inspection object, expressed in milliliters (ml)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.AR">
            <summary>
            Area Ratio of the related Aperture (Area/WallArea)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.RXY">
            <summary>
            Rotation related information
            The counter-clockwise rotational offset on the X-Y plane (in degrees)
            This information is optional, if not available the angles are supposed to be zero
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementExpected.Vertices">
            <summary>
            Optional: List of vertices in case of a polygon shape (segments in CFX terms)
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            A class to represent the dynamic measurement results of an inspection process without the 
            overhead of the static properties which are already tranferred within the Recipe.
            The static properties are provide in the CFX.Structures.InspectionMeasurementTarget
            Typical example: solder paste inspection (SPI)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean.X">
            <summary>
            The x dimension (length) of the inspection object, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean.Y">
            <summary>
            The x dimension (length) of the inspection object, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean.Z">
            <summary>
            The height of the inspection object, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean.DX">
            <summary>
            The x location of the center of the inspection object relative to the center of the pad.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean.DY">
            <summary>
            The y location of the center of the inspection object relative to the center of the pad.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean.Vol">
            <summary>
            The volume of the inspection object, expressed in milliliters (ml)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean.A">
            <summary>
            The area of the inspection object, expressed in square millimeters 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionMeasurementLean.Image">
            <summary>
            An optional image of the deposit formatted in an acceptable MIME image format (JPG, PNG, etc.)
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPasteInspection.InspectionStep">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            An inspection step is one step of an inspection. Each inspection step is associated with a measurements result.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionStep.Name">
            <summary>
            Optional: name of the inspection step
            E.g.: This could be the name of the algorithm to be  applied to perform the inspection step
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionStep.Sequence">
            <summary>
            Uniquely identifies the Inspection step for this Inspection Object
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.InspectionStep.TargetValue">
            <summary>
            the target values for the related measurement
            In case of a SPI the InspectionMeasurementTarget would be used to provide the expected values
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPasteInspection.SolderPasteInspectionRecipe">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Provides recipe information for Solder Paste Inspection devices. It was designed to provide context information for the
            existing UnitsInspected message
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteInspectionRecipe.UnitsToInspect">
            <summary>
            Provides the static recipe information for each Unit that is to be inspected
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteInspectionRecipe.RecipeGenerationDate">
            <summary>
            Generation data of the recipe
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteInspectionRecipe.InspectionMethod">
            <summary>
                Describes how the inspections were performed
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteInspectionRecipe.Fiducials">
            <summary>
            This structure represents a Fiducial element. It is used to enrich the panel
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement">
            <summary>
            Describes the results of a measurement that was made on a solder paste deposition.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.X">
            <summary>
            The x dimension (length) of the paste deposition, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.EX">
            <summary>
            The expected or nominal x dimension (length) required for this paste deposition, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.Y">
            <summary>
            The x dimension (length) of the paste deposition, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.EY">
            <summary>
            The expected or nominal x dimension (length) required for this paste deposition, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.Z">
            <summary>
            The height of the paste deposition, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.EZ">
            <summary>
            The expected or nominal height required for this paste deposition, expressed in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.DX">
            <summary>
            The x location of the center of the paste deposition relative to the center of the pad.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.DY">
            <summary>
            The y location of the center of the paste deposition relative to the center of the pad.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.Vol">
            <summary>
            The volume of the paste deposition, expressed in milliliters (ml)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.EVol">
            <summary>
            The expected or nominal volume of the paste deposition, expressed in milliliters (ml)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.Image">
            <summary>
            An optional image of the deposit formatted in an acceptable MIME image format (JPG, PNG, etc.)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.A">
            <summary>
            The area of the paste deposition, expressed in square millimeters 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.EA">
            <summary>
            The expected area of the paste deposition, expressed in square millimeters 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.PX">
            <summary>
            The position X value in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.PY">
            <summary>
            The position X value in millimeters (mm).
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.RXY">
            <summary>
            The counter-clockwise rotational offset on the X-Y plane (in degrees)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.SolderPasteMeasurement.AR">
            <summary>
            Area Ratio of the related Aperture (Area/WallArea)
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPasteInspection.UnitToInspect">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Provides recipe information of a given Unit. The units is uniquely identified by the UnitPositionNumber
            Rules to generate the UnitPositionNumber are described in the CFX documentation
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.UnitToInspect.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.UnitToInspect.Name">
            <summary>
            Optional name of the Unit
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPasteInspection.UnitToInspect.ChildObjects">
            <summary>
            A list of child object which are to be inspected
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.NamespaceDoc">
            <summary>
            Data structures related to SMT stencil printing equipment
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.PeriodicCleaning">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Describes the periodic cleaning structure as modelled in the SolderPastePrintingRecipe
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderPastePrinting.PeriodicCleaning.#ctor">
            <summary>
            Periodic cleaning constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.PeriodicCleaning.CleanFrequency">
            <summary>
            After how many Panels the Printer executes the cleaning process - nominal clean rate
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.PeriodicCleaning.CleanMode">
            <summary>
            Clean mode - string to enable combination of values
            In a second stage, an enum could be defined
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.Separation">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Describes the separation structure as modelled in the SolderPastePrintingRecipe
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.Separation.Name">
            <summary>
            Separation object name for Solder Paste Printing. For future use.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.Separation.SeparationSpeed">
            <summary>
            Separation speed value for Solder Paste Printing - UpdateRecipeRequest
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.Separation.SeparationDistance">
            <summary>
            Separation distance for Solder Paste Printing - UpdateRecipeRequest
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.Separation.SeparationDelay">
            <summary>
            Separation delay for Solder Paste Printing. For future use.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SMTSolderPastePrintingFault">
            <summary>
            A specific type of fault that is produced by endpoints responsible
            for the printing of solder paste on PCBs.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderPastePrinting.SMTSolderPastePrintingFault.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SMTSolderPastePrintingFault.PrintingFaultType">
            <summary>
            The specific type of printing fault
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SMTSolderPastePrintingFaultType">
            <summary>
            Types of SMT printing faults
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SMTSolderPastePrintingFaultType.SqueegeeError">
            <summary>
            A squeegee related error
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SMTSolderPastePrintingFaultType.PasteError">
            <summary>
            A paste related error
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SMTSqueegee">
            <summary>
            Describes a squeegee that is used in the course of printing solder paste on to a PCB
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SMTSqueegee.CleaningState">
            <summary>
            SMT Squeegee cleaning states
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SMTSqueegeeCleanType">
            <summary>
            Types of SMT stencil cleans
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SMTSqueegeeCleanType.Normal">
            <summary>
            A typical clean
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SMTSqueegeeCleanType.Deep">
            <summary>
            A more involved, deeper clean
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SMTSqueegeeCleanType.Quick">
            <summary>
            A fast, light clean
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SMTStencil">
            <summary>
            Describes a stencil that is used in the course of printing solder paste on to a PCB
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SMTStencil.CleaningState">
            <summary>
            SMT stencil cleaning states
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SMTStencilCleanMode">
            <summary>
            Modes of stencil cleaning
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SMTStencilCleanMode.W">
            <summary>
            Clean mode W
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SMTStencilCleanMode.V">
            <summary>
            Clean mode V
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SMTStencilCleanMode.D">
            <summary>
            Clean mode D
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            The new Process Data for the PCB processed.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.#ctor">
            <summary>
            Constructor class for the new object.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.Strokes">
            <summary>
            List of Stroke objects for Solder Paste Printing PCB Process Data
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.Separation">
            <summary>
            Separation object 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.PeriodicCleanings">
            <summary>
            Periodic cleaning object List. Normally it shall be one, but in this way it may be extended more easily 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.RecipeName">
            <summary>
            Recipe name for the process data
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.OffsetX">
            <summary>
            Printing offset on the X-Axis
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.OffsetY">
            <summary>
            Printing offset on the Y-Axis
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.OffsetTheta">
            <summary>
            Printing offset on the Theta-Axis
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.FirstPrintDirection">
            <summary>
            First direction of the Printing process
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingPCBProcessData.CycleTime">
            <summary>
            Cycle time for the Printing process, in the format hh:mm:ss.fffffff
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SolderPastePrintingRecipe">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Describes the Solder paste printing structure 
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderPastePrinting.SolderPastePrintingRecipe.#ctor">
            <summary>
            Class constructor for the derived Class SolderPastePrintingRecipe
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingRecipe.Strokes">
            <summary>
            List of Stroke objects for Solder Paste Printing
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingRecipe.PrintGap">
            <summary>
            Print gap value 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingRecipe.Separation">
            <summary>
            Separation object 
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.SolderPastePrintingRecipe.PeriodicCleanings">
            <summary>
            Periodic cleaning object List. Normally it shall be one, but in this way it may be extended more easily 
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.Stroke">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Describes the stroke structure as modelled in the SolderPastePrintingRecipe
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderPastePrinting.Stroke.#ctor">
            <summary>
            Default constructur
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.Stroke.PrintPressure">
            <summary>
            Stroke property Print pressure
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderPastePrinting.Stroke.PrintSpeed">
            <summary>
            Stroke property Print speed
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderPastePrinting.SolderPasteSqueegeeDirection">
            <summary>
            Squeegee direction enumeration
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SolderPasteSqueegeeDirection.forward">
            <summary>
            Forward
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderPastePrinting.SolderPasteSqueegeeDirection.backward">
            <summary>
            Backward
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.NamespaceDoc">
            <summary>
            Data structures related to the reflow of Printed Circuit Boards (PCB's) through a solder reflow oven.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowOvenFault">
            <summary>
            A specialized type of fault that is produced by an endpoint that is a reflow oven.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowOvenFault.ReflowOvenFaultType">
            <summary>
            The type of this reflow oven fault.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowOvenFaultType">
            <summary>
            An enumeration that defines the different types of faults that might occur on a solder reflow oven.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowOvenFaultType.LowBeltSpeed">
            <summary>
            The conveyor is moving too slowly. 
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowOvenFaultType.HighBeltSpeed">
            <summary>
            The conveyor is moving too quickly.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowOvenParameter">
            <summary>
            Dynamic Parameter structure containing the configurable parameters of a solder reflow oven.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderReflow.ReflowOvenParameter.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowOvenParameter.ConveyorSpeedSetpoint">
            <summary>
            The desired conveyor speed, expressed in centimeters per minute (cm / min)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowOvenParameter.ConveyorWidth">
            <summary>
            The width of the conveyor, expressed in centimeters (cm)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowOvenParameter.ZoneParameters">
            <summary>
            A list of the structures defining the parameters for each zone.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowProcessData">
            <summary>
            Provides information about the conditions within a reflow oven at a given point in time.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderReflow.ReflowProcessData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowProcessData.ConveyorSpeed">
            <summary>
            The speed (in cm / minute) of the conveyor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowProcessData.ConveyorSpeedSetpoint">
            <summary>
            The converyor speed setpoint (in cm / minute)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowProcessData.ZoneData">
            <summary>
            Process data (temperatures, etc.) for each zone of the reflow oven at the 
            time when this transaction tool place.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowReading">
            <summary>
            Structure that describes the setpoints and key actuals of a particular area
            within a particular zone of a reflow oven.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowReading.SubZone">
            <summary>
            An enumeration that describes a particular area within a particular zone of a reflow oven.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowReading.ReadingType">
            <summary>
            An enumeration describing the type of reading.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowReading.ReadingValue">
            <summary>
            The value of the reading (expressed in the appropriate units for the ReadingType).
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowReadingType">
            <summary>
            An enumeration indicating the type of a setpoint within a particular area of a reflow zone.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowReadingType.Temperature">
            <summary>
            The reading a temperature reading, expressed in degrees celcius (C).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowReadingType.O2">
            <summary>
            The reading is an oxygen reading, expressed in parts per million (PPM).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowReadingType.Power">
            <summary>
            The reading is an power reading, expressed in watts (w).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowReadingType.PowerLevel">
            <summary>
            The reading is an power level reading, expressed as a percentage from 0.0 to 100.0 (%).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowReadingType.Vacuum">
            <summary>
            The reading is a vacuum reading, expressed in Pascals (Pa).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowReadingType.VacuumHoldTime">
            <summary>
            The reading is a vacuum reading, expressed in seconds (s).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowReadingType.ConvectionRate">
            <summary>
            A measure of the amount of relative convection, expressed in Pascals (Pa).
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowSetPoint">
            <summary>
            A data structure describing the set point for a particular area within a zone of a solder reflow oven.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowSetPoint.SubZone">
            <summary>
            The area within the zone to which the setpoint applies.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowSetPoint.SetpointType">
            <summary>
            An enumeration describing the type of setpoint.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowSetPoint.Setpoint">
            <summary>
            The nominal, target value of this setpoint.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowSetpointType">
            <summary>
            An enumeration indicating the type of a setpoint within a particular area of a reflow zone.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowSetpointType.Temperature">
            <summary>
            The setpoint is a temperature setpoint, expressed in degrees celcius (C).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowSetpointType.O2">
            <summary>
            The setpoint is an oxygen setpoint, expressed in parts per million (PPM).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowSetpointType.Vacuum">
            <summary>
            The setpoint is a vacuum setpoint, expressed in Pascals (Pa).
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowSetpointType.VacuumHoldTime">
            <summary>
            The setpoint is a vacuum setpoint, expressed in seconds (s).
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowSubZoneType">
            <summary>
            An enumeration indicating an area within a reflow zone that is under thermal control.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowSubZoneType.WholeZone">
            <summary>
            Applies to the entire zone.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowSubZoneType.Top">
            <summary>
            Applies to the region of the zone above the printed circuit card.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowSubZoneType.Bottom">
            <summary>
            Applies to the region of the zone below the printed circuit card.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowZone">
            <summary>
            A specialized type of Stage that represents a thermal zone within a solder reflow oven.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderReflow.ReflowZone.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowZone.ReflowZoneType">
            <summary>
            The type/purpose of this zone.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowZoneData">
            <summary>
            Provides information about the conditions of a particular zone of a reflow oven at a given point in time.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderReflow.ReflowZoneData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowZoneData.Zone">
            <summary>
            Zone / Stage to which this reflow data is related.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowZoneData.Setpoints">
            <summary>
            A list of current setpoints associated with this zone.
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowZoneData.Readings">
            <summary>
            A list of readings / measurements that have been taken for this zone.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowZoneParameter">
            <summary>
            Structure defining the parameters for a particular zone within a solder reflow oven.
            </summary>
        </member>
        <member name="M:CFX.Structures.SolderReflow.ReflowZoneParameter.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowZoneParameter.Zone">
            <summary>
            The related Zone (Stage)
            </summary>
        </member>
        <member name="P:CFX.Structures.SolderReflow.ReflowZoneParameter.Setpoints">
            <summary>
            A list of setpoints of varying types for each sub-area within this zone.
            </summary>
        </member>
        <member name="T:CFX.Structures.SolderReflow.ReflowZoneType">
            <summary>
            An enumeration indicating the nature of a zone within a reflow oven
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowZoneType.PreHeat">
            <summary>
            This is a pre-heat zone.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowZoneType.Soak">
            <summary>
            The zone is a thermal soak zone.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowZoneType.Reflow">
            <summary>
            This zone is intended to induce solder reflow.
            </summary>
        </member>
        <member name="F:CFX.Structures.SolderReflow.ReflowZoneType.Cool">
            <summary>
            This is a cooling zone.
            </summary>
        </member>
        <member name="T:CFX.Structures.Stage">
            <summary>
            A data structure that represents a work area or step within a production related endpoint through 
            which production units flow
            </summary>
        </member>
        <member name="M:CFX.Structures.Stage.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Stage.StageSequence">
            <summary>
            Sequence of this stage in the machine
            </summary>
        </member>
        <member name="P:CFX.Structures.Stage.StageName">
            <summary>
            A friendlly name for this stage
            </summary>
        </member>
        <member name="P:CFX.Structures.Stage.StageType">
            <summary>
            An enumeration indicating the purpose of this particular stage
            </summary>
        </member>
        <member name="T:CFX.Structures.StageInformation">
            <summary>
            Describes a stage (zone) for an endpoint that is in a machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.StageInformation.Stage">
            <summary>
            A structure describing basic information about the stage.
            </summary>
        </member>
        <member name="T:CFX.Structures.StageType">
            <summary>
            An enumeration indicating different types of stages that might exist at an endpoint.
            </summary>
        </member>
        <member name="F:CFX.Structures.StageType.Work">
            <summary>
            Work on production units is performed at this stage.  This may be any sort of work, including assembly, inspection, processing, etc.
            </summary>
        </member>
        <member name="F:CFX.Structures.StageType.Buffer">
            <summary>
            This stage is intended to serve as a buffer for production units.  No work is performed at this stage.
            </summary>
        </member>
        <member name="T:CFX.Structures.StationSetupRequirements">
            <summary>
            Describes the material setup requirements for a particular process endpoint to perform a 
            particular operation on one or more partiuclar products.  Also includes information on
            where specifically the materials should be loaded (when applicable), AML (where applicable),
            and alternate part information (where applicable).
            </summary>
        </member>
        <member name="M:CFX.Structures.StationSetupRequirements.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.StationSetupRequirements.Lane">
            <summary>
            The production lane to which this setup applies (when applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.StationSetupRequirements.Stage">
            <summary>
            The stage to which this setup applies (when applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.StationSetupRequirements.SetupName">
            <summary>
            An optional name for this particular setup
            </summary>
        </member>
        <member name="P:CFX.Structures.StationSetupRequirements.MaterialSetupRequirements">
            <summary>
            A list of the materials that need to be installed / loaded at the process endpoint
            to perform a particular process.
            </summary>
        </member>
        <member name="P:CFX.Structures.StationSetupRequirements.ToolSetupRequirements">
            <summary>
            A list of the tools (heads, nozzels, hammers, wrenches, etc.) that need to be installed / loaded at the 
            process endpoint to perform a particular process.
            </summary>
        </member>
        <member name="T:CFX.Structures.StatusResult">
            <summary>
            Result of an operation
            </summary>
        </member>
        <member name="F:CFX.Structures.StatusResult.Success">
            <summary>
            Successful completion of operation
            </summary>
        </member>
        <member name="F:CFX.Structures.StatusResult.PartialSuccess">
            <summary>
            A portion of the request completed successfully (another portion did not).
            Where applicable, the response message will contain details on the portion that did 
            not succeed.
            </summary>
        </member>
        <member name="F:CFX.Structures.StatusResult.Failed">
            <summary>
            Operation was not completed successfully
            </summary>
        </member>
        <member name="F:CFX.Structures.StatusResult.Warning">
            <summary>
            Operation successful but with warning(s)
            </summary>
        </member>
        <member name="T:CFX.Structures.SupportedTopic">
            <summary>
            A data structure that represents a CFX message topic that is supported by a particular CFX endpoint
            </summary>
        </member>
        <member name="M:CFX.Structures.SupportedTopic.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.SupportedTopic.TopicName">
            <summary>
            TheIf not supporting all messages, then a list of supported messages
            </summary>
        </member>
        <member name="P:CFX.Structures.SupportedTopic.TopicSupportType">
            <summary>
            Indicates the type of support the endpoint has for this topic.
            </summary>
        </member>
        <member name="P:CFX.Structures.SupportedTopic.SupportedMessages">
            <summary>
            If an endpoint does not support ALL CFX messages that have been defined for a given CFX topic,
            then it must explicitly list which messages is does support.  An empty list implies that the 
            endpoint supports ALL messages of this topic.
            </summary>
        </member>
        <member name="T:CFX.Structures.SupportedTopicQueryType">
            <summary>
            Enumeration used for matching an endpoint's capabilities to a list of CFX topics.
            </summary>
        </member>
        <member name="F:CFX.Structures.SupportedTopicQueryType.All">
            <summary>
            The endpoint must support ALL topics specified in the supported topics list.
            </summary>
        </member>
        <member name="F:CFX.Structures.SupportedTopicQueryType.Any">
            <summary>
            The endpoint must support one or more of the topics specified in the supported topics list.
            </summary>
        </member>
        <member name="F:CFX.Structures.SupportedTopicQueryType.Ignore">
            <summary>
            The supported topics list will be ignored.
            </summary>
        </member>
        <member name="T:CFX.Structures.Surface">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            For use two-dimensional production (as in the case of PCBA production).  Identifies the surface of the unit
            under production (product) that is relevant for a given process or situation.
            </summary>
        </member>
        <member name="F:CFX.Structures.Surface.Unspecified">
            <summary>
            The relevant surface has not been specified
            </summary>
        </member>
        <member name="F:CFX.Structures.Surface.PrimarySurface">
            <summary>
            The primary surface of the product is relevant
            </summary>
        </member>
        <member name="F:CFX.Structures.Surface.SecondarySurface">
            <summary>
            The secondary surface is relevant
            </summary>
        </member>
        <member name="T:CFX.Structures.Symptom">
            <summary>
            Describes a situation where a problem is identified via one or more failed tests.
            A symptom does not identify the actual cause of the failure(s), only that 
            there is a problem that needs to be investigated. 
            </summary>
        </member>
        <member name="M:CFX.Structures.Symptom.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.UniqueIdentifier">
            <summary>
            A unique identifier for this particular symptom instance
            (new and unique each time a new symptom is discovered).
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.SymptomCode">
            <summary>
            A code identifying the type of symptom
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.SymptomCategory">
            <summary>
            An optional symptom category for this particular type of symptom
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.Description">
            <summary>
            A human friendly description of the symptom
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.Comments">
            <summary>
            Optional comments from the tester who discovered this symptom
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.Status">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            An enumeration describing the current status of the symptom as it progresses through it's lifecycle.
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.ComponentsOfInterest">
            <summary>
            A list of the components or specific component pins related to this symptom (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.RegionOfInterest">
            <summary>
            An optional location or area on the production unit where the symptom is located 
            (for cases where there is no specific components that can be definitively related).
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.Priority">
            <summary>
            The priority of this symptom as compared to other symptom discovered for this unit.
            A priority of 1 indicates the highest priority.
            </summary>
        </member>
        <member name="P:CFX.Structures.Symptom.RelatedMeasurements">
            <summary>
            A list of measurements that were taken which caused this symptom to be created
            </summary>
        </member>
        <member name="T:CFX.Structures.Temperature">
            <summary>
            A type of environmental condition that represents thermal level
            </summary>
        </member>
        <member name="T:CFX.Structures.Test">
            <summary>
            Describes a single test in a series of test that an tester makes (both human or automation)
            in the course of testing a production unit.
            </summary>
        </member>
        <member name="M:CFX.Structures.Test.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.UniqueIdentifier">
            <summary>
            A unique indentifier describing a particular instance of a test that was undertaken.
            Each new occurrence or recurrence of this same inspection gets a new unique identifier.
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.TestName">
            <summary>
            Identifies the nature of the test performed
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.TestStartTime">
            <summary>
            Indicates the time when this particular test began (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.TestEndTime">
            <summary>
            Indicates the time when this particular test ended (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.TestConditions">
            <summary>
            A list of environmental conditions (temperature, humidity, etc.) which
            were in place when the test was performed.
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.TestProcedure">
            <summary>
            Procedure to be followed to perform this test (primarily for human driven test).
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.Comments">
            <summary>
            Optional comments from the tester who tested the unit
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.Result">
            <summary>
            The overall result of the test
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.Error">
            <summary>
            In the case that the test cannot be completed, the error that was the cause of this outcome.
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.SymptomsFound">
            <summary>
            The symptoms that were discovered in the course of this test
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.DefectsFound">
            <summary>
            The defects that were discovered in the course of this test
            </summary>
        </member>
        <member name="P:CFX.Structures.Test.Measurements">
            <summary>
            The measurements that were taken in the course of performing this test.
            NOTE - Only measurements not related to particular defects or symptoms should be recorded here.
            </summary>
        </member>
        <member name="T:CFX.Structures.TestedUnit">
            <summary>
            A data structure that represents a unit under test
            </summary>
        </member>
        <member name="M:CFX.Structures.TestedUnit.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.TestedUnit.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.TestedUnit.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard section 5.6). 
            </summary>
        </member>
        <member name="P:CFX.Structures.TestedUnit.OverallResult">
            <summary>
            An enumeration indicating the overall result of the testing that was done to this unit
            </summary>
        </member>
        <member name="P:CFX.Structures.TestedUnit.Tests">
            <summary>
            A list of tests that were performed on this unit
            </summary>
        </member>
        <member name="T:CFX.Structures.TestMethod">
            <summary>
            Method of testing
            </summary>
        </member>
        <member name="F:CFX.Structures.TestMethod.Human">
            <summary>
            The test was performed by a human being
            </summary>
        </member>
        <member name="F:CFX.Structures.TestMethod.Automated">
            <summary>
            The test was performed by automated equipment / device
            </summary>
        </member>
        <member name="F:CFX.Structures.TestMethod.ICT">
            <summary>
            The test was performed by an in-circuit test equipment / device
            </summary>
        </member>
        <member name="F:CFX.Structures.TestMethod.FPT">
            <summary>
            The test was performed by a flying probe test machine / equipment / device
            </summary>
        </member>
        <member name="F:CFX.Structures.TestMethod.FCT">
            <summary>
            The test was performed by a functional test machine / equipment / device
            </summary>
        </member>
        <member name="F:CFX.Structures.TestMethod.BST">
            <summary>
            The test was performed by a boundary scan test machine / equipment / deivce
            </summary>
        </member>
        <member name="T:CFX.Structures.TestResult">
            <summary>
            The result of a test
            </summary>
        </member>
        <member name="F:CFX.Structures.TestResult.Passed">
            <summary>
            The test passed
            </summary>
        </member>
        <member name="F:CFX.Structures.TestResult.Failed">
            <summary>
            The test failed
            </summary>
        </member>
        <member name="F:CFX.Structures.TestResult.Error">
            <summary>
            The test could not be completed because an error occurred.
            </summary>
        </member>
        <member name="F:CFX.Structures.TestResult.Aborted">
            <summary>
            The test was aborted by the operator / user.
            </summary>
        </member>
        <member name="F:CFX.Structures.TestResult.Skipped">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            The test was skipped because of (virtual) bad mark
            </summary>
        </member>
        <member name="T:CFX.Structures.TextMeasurement">
            <summary>
            Describes a measurement that was made by a human or by automated equipment
            in the course of inspecting or testing a production unit in which the result
            of the measurement is a text based value.
            </summary>
        </member>
        <member name="P:CFX.Structures.TextMeasurement.Value">
            <summary>
            The actual resulting value of this text based measurement
            </summary>
        </member>
        <member name="P:CFX.Structures.TextMeasurement.ExpectedValue">
            <summary>
            The expected value of this text based measurement
            </summary>
        </member>
        <member name="T:CFX.Structures.THTInsertion.NamespaceDoc">
            <summary>
            Data structures related to PCB through-hole insertion equipment
            </summary>
        </member>
        <member name="T:CFX.Structures.THTInsertion.THTInsertionFault">
            <summary>
            A specific type of fault that is produced by endpoints responsible
            for the insertion of through-hole electronic components (THT insertion)
            </summary>
        </member>
        <member name="M:CFX.Structures.THTInsertion.THTInsertionFault.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.THTInsertion.THTInsertionFault.InsertionFaultType">
            <summary>
            The specific type of THT fault
            </summary>
        </member>
        <member name="P:CFX.Structures.THTInsertion.THTInsertionFault.ProgramStep">
            <summary>
            An integer representing the step in the program/recipe that was
            being executed when the fault occurred  (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.THTInsertion.THTInsertionFault.Designator">
            <summary>
            Identifies the specific component the inserter was trying to insert
            when the fault occurred  (where applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.THTInsertion.THTInsertionFault.MaterialLocation">
            <summary>
            The material carrier location related to this fault (where applicable)
            </summary>
        </member>
        <member name="T:CFX.Structures.THTInsertion.THTInsertionFaultType">
            <summary>
            Types of Through Hole Device Insertion Faults
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.XAxisError">
            <summary>
            Error in x motion axis
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.YAxisError">
            <summary>
            Error in y motion axis
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.ZAxisError">
            <summary>
            Error in z motion axis
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.InsertionError">
            <summary>
            Part not inserted properly
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.AlignmentError">
            <summary>
            Part cannot be properly aligned with PCB hole
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.PickupError">
            <summary>
            Part could not be picked
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.PartsExhaustedError">
            <summary>
            Material supply exhausted
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.AnvilError">
            <summary>
            Anvil related problem
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.ClinchError">
            <summary>
            Clinch related problem
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.PanelLocationError">
            <summary>
            PCB not properly aligned in fixture / transport
            </summary>
        </member>
        <member name="F:CFX.Structures.THTInsertion.THTInsertionFaultType.AirSupplyDown">
            <summary>
            Insufficient pressurized air supply
            </summary>
        </member>
        <member name="T:CFX.Structures.Tool">
            <summary>
            Describes a tool that is used in production
            <code language="none">
            {
                "UniqueIdentifier": "UID23890430",
                "Name": "SQUEEGEE234324"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Structures.Tool.UniqueIdentifier">
            <summary>
            The unique identifier of the Tool (barcode, RFID, etc.)
            </summary>
        </member>
        <member name="P:CFX.Structures.Tool.Name">
            <summary>
            The name of the tool
            </summary>
        </member>
        <member name="T:CFX.Structures.ToolHolder">
            <summary>
            Describes a location on a process endpoint where a tool may be stored.
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolHolder.LocationUniqueIdentifier">
            <summary>
            Unique identifier of the tool holder (barcode, RFID, etc.)
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolHolder.LocationName">
            <summary>
            The name of the tool holder location
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolHolder.BaseName">
            <summary>
            If this tool holder is part of a nest or group of nozzle holders, 
            this is the nest or group name.
            </summary>
        </member>
        <member name="T:CFX.Structures.ToolSetupRequirement">
            <summary>
            Describes a single, specific tool that must be setup a particular process endpoint to execute
            a particular process.  Includes the part number of the tool, along with the 
            specific location where the tool loaded (when applicable).
            </summary>
        </member>
        <member name="M:CFX.Structures.ToolSetupRequirement.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolSetupRequirement.Position">
            <summary>
            The position where the required tool must be installed on the Endpoint (optional).  
            Where applicable, a dot (".") notation should be utilized to designate 
            specific positions.  Examples:  MODULE1.BEAM1.HEADPOS2, MODULE1.NEST3.NOZZLESLOT4, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolSetupRequirement.PartNumber">
            <summary>
            The internal part number of the tool that must be loaded at this position.
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolSetupRequirement.ToolIdentifier">
            <summary>
            Optional.  If a very specific tool is required (specific serial number), the unique identifier
            of that specific tool will be provided by this property.  If any tool of a certain part number
            may be user, this property will be null.
            </summary>
        </member>
        <member name="T:CFX.Structures.ToolUsed">
            <summary>
            A data structure representing an occurrence where a Tool is utilized when processing a specific production unit
            </summary>
        </member>
        <member name="M:CFX.Structures.ToolUsed.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolUsed.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolUsed.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard section 5.6). 
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolUsed.Tool">
            <summary>
            A structure representing the Tool that was utilized
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolUsed.UsageCycles">
            <summary>
            Indicates the number of cycles or times that the Tool was used on the production unit
            </summary>
        </member>
        <member name="P:CFX.Structures.ToolUsed.InstalledComponents">
            <summary>
            If components were installed during the operation, this property provides
            a detailed listing of the components that were installed.
            </summary>
        </member>
        <member name="T:CFX.Structures.TopicSupportType">
            <summary>
            Indicates the type of support an endpoint has for a particular topic.
            </summary>
        </member>
        <member name="F:CFX.Structures.TopicSupportType.Publisher">
            <summary>
            The endpoint publishes outbound messages for this topic, and responds to inbound requests
            </summary>
        </member>
        <member name="F:CFX.Structures.TopicSupportType.Consumer">
            <summary>
            The endpoint consumes the messages of this topic that are produced by other endpoints
            </summary>
        </member>
        <member name="F:CFX.Structures.TopicSupportType.PublisherConsumer">
            <summary>
            The endpoint publishes outbound messages for this topic, responds to inbound request, and
            consumes the messages of this topic that are produced by other endpoints
            </summary>
        </member>
        <member name="T:CFX.Structures.TransportOrderHistory">
            <summary>
            Describes a single event in the history of a transport order.  
            A transport order is a directive to move materials / WIP / production
            units from one location to another.
            </summary>
        </member>
        <member name="P:CFX.Structures.TransportOrderHistory.EventDateTime">
            <summary>
            The date and time when the event took place.  If null, this implies
            that the date and time provided by the parent message should be applied
            to this event.
            </summary>
        </member>
        <member name="P:CFX.Structures.TransportOrderHistory.Status">
            <summary>
            The status of this transport order at the time of the event
            </summary>
        </member>
        <member name="P:CFX.Structures.TransportOrderHistory.Operator">
            <summary>
            The operator involved in this event (optional, where applicable)
            </summary>
        </member>
        <member name="P:CFX.Structures.TransportOrderHistory.Location">
            <summary>
            The location where this event took place
            </summary>
        </member>
        <member name="P:CFX.Structures.TransportOrderHistory.Comments">
            <summary>
            Human readable comments related to this event (where applicable)
            </summary>
        </member>
        <member name="T:CFX.Structures.TransportOrderStatus">
            <summary>
            The status of an order to transport goods
            </summary>
        </member>
        <member name="F:CFX.Structures.TransportOrderStatus.Unspecified">
            <summary>
            The status is unknown
            </summary>
        </member>
        <member name="F:CFX.Structures.TransportOrderStatus.Pending">
            <summary>
            The order is awaiting fulfillment
            </summary>
        </member>
        <member name="F:CFX.Structures.TransportOrderStatus.Kitting">
            <summary>
            The ordered items are being gathered and readied for transport
            </summary>
        </member>
        <member name="F:CFX.Structures.TransportOrderStatus.Kitted">
            <summary>
            The ordered items are ready to be transported, but have not yet departed the point of origination
            </summary>
        </member>
        <member name="F:CFX.Structures.TransportOrderStatus.InTransit">
            <summary>
            The ordered items are in transit
            </summary>
        </member>
        <member name="F:CFX.Structures.TransportOrderStatus.Delivered">
            <summary>
            The ordered items have been delivered to their final destination
            </summary>
        </member>
        <member name="T:CFX.Structures.UninstalledMaterial">
            <summary>
            Describes when single lot of material that is uninstalled from a production unit, 
            possibly from specific locations on the production unit.
            </summary>
        </member>
        <member name="M:CFX.Structures.UninstalledMaterial.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.UninstalledMaterial.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.UninstalledMaterial.UnitPositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard section 5.6). 
            </summary>
        </member>
        <member name="P:CFX.Structures.UninstalledMaterial.QuantityUninstalled">
            <summary>
            The total quantity of parts or material uninstalled of this particular MaterialPackage (lot)
            </summary>
        </member>
        <member name="P:CFX.Structures.UninstalledMaterial.Reason">
            <summary>
            The reason why the material was uninstalled.
            </summary>
        </member>
        <member name="P:CFX.Structures.UninstalledMaterial.Material">
            <summary>
            The material package that was uninstalled (if known)
            </summary>
        </member>
        <member name="P:CFX.Structures.UninstalledMaterial.UninstalledComponents">
            <summary>
            A list of the components that were uninstalled
            </summary>
        </member>
        <member name="T:CFX.Structures.UninstalledReason">
            <summary>
            Reason why a component or material was uninstalled from a production unit
            </summary>
        </member>
        <member name="F:CFX.Structures.UninstalledReason.DefectiveMaterial">
            <summary>
            The component or material was defective, and had to be replaced.
            </summary>
        </member>
        <member name="F:CFX.Structures.UninstalledReason.DefectiveInstallation">
            <summary>
            The component or material was not installed correctly, and had to be replaced or re-installed
            </summary>
        </member>
        <member name="F:CFX.Structures.UninstalledReason.IncorrectMaterial">
            <summary>
            The wrong component or material was installed, and had to be replaced.
            </summary>
        </member>
        <member name="F:CFX.Structures.UninstalledReason.Other">
            <summary>
            The component or material was uninstalled for a reason not covered by this enumeration.
            </summary>
        </member>
        <member name="T:CFX.Structures.UnitAlignmentActivity">
            <summary>
            A specialized type of Activity that occurs when a unit is aligned (located / positioned) within a stage
            of an endpoint prior to the commencement of work.
            </summary>
        </member>
        <member name="M:CFX.Structures.UnitAlignmentActivity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitAlignmentActivity.DX">
            <summary>
            The amount of correction applied in the X axis, express in millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitAlignmentActivity.DY">
            <summary>
            The amount of correction applied in the Y axis, express in millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitAlignmentActivity.DZ">
            <summary>
            The amount of correction applied in the Z axis, express in millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitAlignmentActivity.DXY">
            <summary>
            The counter-clockwise rotational correction applied in the X-Y plane (in degrees)
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitAlignmentActivity.DZX">
            <summary>
            The counter-clockwise rotational correction applied in the Z-X plane (in degrees)
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitAlignmentActivity.DZY">
            <summary>
            The counter-clockwise rotational correction applied in the Z-Y plane (in degrees)
            </summary>
        </member>
        <member name="T:CFX.Structures.UnitConveyingActivity">
            <summary>
            A specialized type of Activity that occurs when a unit is conveyed in an endpoint.
            </summary>
        </member>
        <member name="M:CFX.Structures.UnitConveyingActivity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitConveyingActivity.ConveyingDistance">
            <summary>
            The total distance of conveying (in mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitConveyingActivity.DepartureStage">
            <summary>
            The Stage from where the unit is conveyed
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitConveyingActivity.ArrivalStage">
            <summary>
            The Stage to where the unit is conveyed
            </summary>
        </member>
        <member name="T:CFX.Structures.UnitInfo">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            This structure contains detailed information (e.g., BadMarks, Fiducials) about a one of a set of production units that are processed simultaneously under a single transaction by an endpoint.
            Units may be identified in one of two ways:
                1.  The UnitIdentifier property represents the actual unique identifier of the production unit.
                2.  The UnitIdentifier property represents the unique identifier of the "carrier" or "PCB panel"
                    AND the PositionNumber property represents the position of the unit within the carrier/panel.
                    PositionNumber's are established as defined in the CFX Standard.
            <code language="none">
            {
                "UnitIdentifier": "CARRIER5566",
                "PositionNumber": 1,
                "PositionName": "CIRCUIT1",
                "X": 0.254,
                "Y": 0.556,
                "Rotation": 0.0,
                "FlipX": false,
                "FlipY": false,
                "BadMark": 0,
                "FiducialCount": 2,
                "Fiducials": [
                {
                  "FiducialX": "10.2",
                  "FiducialY": 1.3,
                  "FiducialRXY": "0.5",
                },
                {
                  "FiducialX": "20.8",
                  "FiducialY": 7.3,
                  "FiducialRXY": "0.0",
                }
              ]
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitInfo.BadMark">
            <summary>
            Is Unit good or not good for production or unknown:
            0: unknown whether unit is good or not good for production
            1: unit is good for production
            2: unit is not good for production
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitInfo.FiducialCount">
            <summary>
            The number of Fiducials
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitInfo.Fiducials">
            <summary>
            An optional list of structures with Fiducial coordinates and rotational offset
            </summary>
        </member>
        <member name="T:CFX.Structures.UnitLoadActivity">
            <summary>
            A specialized type of Activity that occurs when a unit is loaded into an endpoint.
            </summary>
        </member>
        <member name="M:CFX.Structures.UnitLoadActivity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitLoadActivity.LoadTime">
            <summary>
            The total amount of time consumed by the load event.
            </summary>
        </member>
        <member name="T:CFX.Structures.UnitPosition">
            <summary>
            This structure contains information about a one of a set of production units that are processed simultaneously under a single transaction by an endpoint.
            Units may be identified in one of two ways:
                1.  The UnitIdentifier property represents the actual unique identifier of the production unit.
                2.  The UnitIdentifier property represents the unique identifier of the "carrier" or "PCB panel"
                    AND the PositionNumber property represents the position of the unit within the carrier/panel.
                    PositionNumber's are established as defined in the CFX Standard.
            <code language="none">
            {
                "UnitIdentifier": "CARRIER5566",
                "PositionNumber": 1,
                "PositionName": "CIRCUIT1",
                "X": 0.254,
                "Y": 0.556,
                "Rotation": 0.0,
                "FlipX": false,
                "FlipY": false,
                "Status": "Pass"
            }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.UnitIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.PositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard section 5.6). 
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.PositionName">
            <summary>
            Optional name of position
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.X">
            <summary>
            X coordinate of Production unit origin, as it is known to the endpoint, expressed in millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.Y">
            <summary>
            Y coordinate of Production unit origin, as it is known to the endpoint, expressed in millimeters (mm)
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.Rotation">
            <summary>
            Original rotation of Production unit, as it is known to the endpoint, expressed in degrees
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.FlipX">
            <summary>
            Is production unit flipped in X-direction
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.FlipY">
            <summary>
            Is production unit flipped in Y-direction
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitPosition.Status">
            <summary>
            The result of the work for this Unit
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            </summary>
        </member>
        <member name="T:CFX.Structures.UnitStatus">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            The status condition of a Unit.
            </summary>
        </member>
        <member name="F:CFX.Structures.UnitStatus.Pass">
            <summary>
            The production unit has completed all prior operations without defects, or with all defects resolved
            </summary>
        </member>
        <member name="F:CFX.Structures.UnitStatus.Fail">
            <summary>
            The production unit has not passed the preceding operation, though may be recoverable
            </summary>
        </member>
        <member name="F:CFX.Structures.UnitStatus.Scrap">
            <summary>
            The production unit has not passed the preceding operation, and has been deemed unrepairable
            </summary>
        </member>
        <member name="F:CFX.Structures.UnitStatus.Skip">
            <summary>
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            The production unit does not require processing
            </summary>
        </member>
        <member name="T:CFX.Structures.UnitUnloadActivity">
            <summary>
            A specialized type of Activity that occurs when a unit is unloaded from an endpoint.
            </summary>
        </member>
        <member name="M:CFX.Structures.UnitUnloadActivity.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.UnitUnloadActivity.UnloadTime">
            <summary>
            The total amount of time consumed by the load event.
            </summary>
        </member>
        <member name="T:CFX.Structures.UVCuring.UVCuringGlassPlate">
            <summary>
            Properties of glass plate.
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringGlassPlate.Row">
            <summary>
            Row of the glas plate
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringGlassPlate.IsPresent">
            <summary>
            Is the glas plate present
            </summary>
        </member>
        <member name="T:CFX.Structures.UVCuring.UVCuringLampData">
            <summary>
            Properties of an UV lamp. 
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringLampData.Row">
            <summary>
            Row of the lamp
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringLampData.Column">
            <summary>
            Column of the lamp
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringLampData.UVCuringLampState">
            <summary>
            State of the lamp
            </summary>
        </member>
        <member name="T:CFX.Structures.UVCuring.UVCuringLampState">
            <summary>
            An enumeration indicating the state of lamp.
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            </summary>
        </member>
        <member name="F:CFX.Structures.UVCuring.UVCuringLampState.On">
            <summary>
            Lamp is on 
            </summary>
        </member>
        <member name="F:CFX.Structures.UVCuring.UVCuringLampState.Off">
            <summary>
            Lamp is off 
            </summary>
        </member>
        <member name="F:CFX.Structures.UVCuring.UVCuringLampState.Error">
            <summary>
            Lamp has an error 
            </summary>
        </member>
        <member name="T:CFX.Structures.UVCuring.UVCuringProcessData">
            <summary>
            UV Curing Process Data
            <para>** NOTE: ADDED in CFX 1.6 **</para>
            </summary>
        </member>
        <member name="M:CFX.Structures.UVCuring.UVCuringProcessData.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringProcessData.ProcessTime">
            <summary>
            Time of the part in process in seconds.
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringProcessData.ConveyorSpeed">
            <summary>
            Speed of the conveyor in mm/s.
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringProcessData.ConveyorWidth">
            <summary>
            Width of the conveyor in mm.
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringProcessData.Intensity">
            <summary>
            UV itensity in mW/cm^2
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringProcessData.UVLamps">
            <summary>
            List of all lamps in the UV machine.
            </summary>
        </member>
        <member name="P:CFX.Structures.UVCuring.UVCuringProcessData.GlassPlates">
            <summary>
            List of all glass plates in the UV machine.
            </summary>
        </member>
        <member name="T:CFX.Structures.VacuumDeposition.CoatingProcessReading">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Structure base class representing process data.
            Chamber pressure units in mbar.
            Vaporizer temperature in degrees Celsius.
            <code language="none">
            {
              "Chamber Pressure": "100",
              "Vaporizer Temperature" : "150"
              }
            </code>
            </summary>
        </member>
        <member name="P:CFX.Structures.VacuumDeposition.CoatingProcessReading.ChamberPressure">
            <summary>
            Current chamber pressure in mbar.
            </summary>
        </member>
        <member name="P:CFX.Structures.VacuumDeposition.CoatingProcessReading.VaporizerTemperature">
            <summary>
            Current vaporizer temperature in degrees Celsius.
            </summary>
        </member>
        <member name="T:CFX.Structures.VacuumDeposition.CoatingThicknessMeasurement">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Structure base class representing slide position.
            Average coating thickness measured in micrometers.
            </summary>
        </member>
        <member name="P:CFX.Structures.VacuumDeposition.CoatingThicknessMeasurement.Position">
            <summary>
            Position of measured slide.
            </summary>
        </member>
        <member name="P:CFX.Structures.VacuumDeposition.CoatingThicknessMeasurement.Thickness">
            <summary>
            Average coating thickness in micrometers.
            </summary>
        </member>
        <member name="T:CFX.Structures.VacuumPump">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            Vacuum pump resource in an Endpoint. It may have a lifecycle independent
            from the Endpoint where it is located (e.g. maintenance operations)
            </summary>
        </member>
        <member name="T:CFX.Structures.ValidationResult">
            <summary>
            Indicates the result of a validation that was performed on a given production unit (typically by a line or factory level control system)
            </summary>
        </member>
        <member name="M:CFX.Structures.ValidationResult.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.ValidationResult.UniqueIdentifier">
            <summary>
            Unique ID of Production Unit, Panel, or Carrier
            </summary>
        </member>
        <member name="P:CFX.Structures.ValidationResult.PositionNumber">
            <summary>
            Logical reference of production unit as defined by CFX position rule (see CFX standard section 5.6). 
            </summary>
        </member>
        <member name="P:CFX.Structures.ValidationResult.Result">
            <summary>
            An enumeration indicating the overall result of the validation
            </summary>
        </member>
        <member name="P:CFX.Structures.ValidationResult.FailureCode">
            <summary>
            Indicates an endpoint-specific failure code
            </summary>
        </member>
        <member name="P:CFX.Structures.ValidationResult.Message">
            <summary>
            A human readable message describing the result of the validation
            </summary>
        </member>
        <member name="T:CFX.Structures.ValidationStatus">
            <summary>
            The result of a validation operation
            </summary>
        </member>
        <member name="F:CFX.Structures.ValidationStatus.Passed">
            <summary>
            The validation has succeeded
            </summary>
        </member>
        <member name="F:CFX.Structures.ValidationStatus.Failed">
            <summary>
            The validation has failed (not succeeded)
            </summary>
        </member>
        <member name="F:CFX.Structures.ValidationStatus.Skipped">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            The validation has skipped because of (virtual) bad mark
            </summary>
        </member>
        <member name="T:CFX.Structures.ValidationType">
            <summary>
            Types of validations
            </summary>
        </member>
        <member name="F:CFX.Structures.ValidationType.UnitRouteValidation">
            <summary>
            A validation that ensures a unit is at the proper step in the route, and has completed all
            pre-requisite steps.
            </summary>
        </member>
        <member name="F:CFX.Structures.ValidationType.UnitStatusValidation">
            <summary>
            A validation that ensures a unit is not in a failed or error condition
            </summary>
        </member>
        <member name="F:CFX.Structures.ValidationType.UnitAndSubsStatusValidation">
            <summary>
            A validation that ensures a unit and ALL of its sub-assemblies are not in a failed or error condition
            </summary>
        </member>
        <member name="F:CFX.Structures.ValidationType.UnitTraceValidation">
            <summary>
            Validates that the trace data has been recived for this unit from the sender by a factory level software system
            </summary>
        </member>
        <member name="F:CFX.Structures.ValidationType.All">
            <summary>
            All known validations should be performed
            </summary>
        </member>
        <member name="T:CFX.Structures.ValueAddType">
            <summary>
            An enumeration describing the value-add nature of an activity or process.
            </summary>
        </member>
        <member name="F:CFX.Structures.ValueAddType.RealValueAdd">
            <summary>
            The activity or process directly contributed to the process of creating one or more production unit(s), and
            the units left the activity or process differently than when they arrived.
            </summary>
        </member>
        <member name="F:CFX.Structures.ValueAddType.BusinessValueAdd">
            <summary>
            The activity or process had business value, but did not directly effect the production units, such as
            in the case of an inspection or testing process.
            </summary>
        </member>
        <member name="F:CFX.Structures.ValueAddType.NonValueAdd">
            <summary>
            The activity or process is necessary, but does not add any value.  For example, a tool change on a pick and place
            machine.
            </summary>
        </member>
        <member name="T:CFX.Structures.VerificationResult">
            <summary>
            There is a certain workflow after the detection of a defective board. Usually a defective board has to be classified,
            i.e. an operator or process engineer has to confirm whether the inspection result is a real defect or a false fail (false call) error.
            The Verification Result is 
            </summary>
        </member>
        <member name="F:CFX.Structures.VerificationResult.NotVerifiedYet">
            <summary>
            The defect which was detected is not classified
            </summary>
        </member>
        <member name="F:CFX.Structures.VerificationResult.DefectConfirmed">
            <summary>
            The defect which was detected is confirmed 
            </summary>
        </member>
        <member name="F:CFX.Structures.VerificationResult.DefectRejected">
            <summary>
            The defect which was detected is rejected "FalseFail"
            </summary>
        </member>
        <member name="F:CFX.Structures.VerificationResult.DefectAccepted">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            The defect which was detected is rejected "FalseFail", but corrective
            action for SMT process shall be initiated
            </summary>
        </member>
        <member name="F:CFX.Structures.VerificationResult.DefectRepaired">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            The defect which was detected is repaired 
            </summary>
        </member>
        <member name="F:CFX.Structures.VerificationResult.DefectClosed">
            <summary>
            <para>** NOTE: ADDED in CFX 1.5 **</para>
            The defect which was detected is repaired and successful repair confirmed
            </summary>
        </member>
        <member name="T:CFX.Structures.WorkOrder">
            <summary>
            A structure that describes an order to produce a specifified quantity of units of a particular part number /
            part revision within the factory environment.
            </summary>
        </member>
        <member name="M:CFX.Structures.WorkOrder.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.WorkOrderIdentifier">
            <summary>
            The identifer of the Work Order or Work Order sub-batch
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.Description">
            <summary>
            A human friendly description for this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.Status">
            <summary>
            The current status of the Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.Router">
            <summary>
            The name of the router or process that will be followed to produce the units for this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.RouterRevision">
            <summary>
            The revision of the router or process that will be followed to produce units for this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.LotNumber">
            <summary>
            Ane lot number that is to be associated with units produced under this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.Customer">
            <summary>
            An optional customer name, if this Work Order is associated with particular customer.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.Department">
            <summary>
            An optional department name, if this Work Order is to be executed by a particular department.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.CreatedDate">
            <summary>
            The date on which the Work Order was created.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.StartDate">
            <summary>
            The date/time on which this Work Order should begin execution.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.DateRequired">
            <summary>
            The date/time by which this Work Order should be completed.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.PartNumber">
            <summary>
            The part number (internal) of the assembly to be produced by this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.PartRevision">
            <summary>
            The revision of the assembly to be produced by this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.Quantity">
            <summary>
            The quantity of units to be produced by this Work Order.
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.UnitOfMeasure">
            <summary>
            If the Work Order is intended to produce something other than "units", the unit of measure of the 
            quantity associated with this Word Order.  For example, a Work Order might be placed to produce 200m
            of red wire.  In this case, the Quantity property would be "200" and the UnitOfMeasure
            would be "meter".  If UnitOfMeasure is left empty (blank), it is assumed that the quantity specifies
            "pieces" and/or "units" (200 units of assembly 1234-5678, for example).
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrder.DependsOn">
            <summary>
            A list of other Work Orders (or Work Order sub-batches) upon which this Work Order (or Work Order sub-batch) is dependent.
            Dependent Work Orders feed the supply of materials into upper level Work Orders.
            </summary>
        </member>
        <member name="T:CFX.Structures.WorkOrderActionState">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Describes the state of a work order action.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionState.Started">
            <summary>
            The work order action has started, but is not yet complete.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionState.Aborted">
            <summary>
            The work order action was aborted.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionState.Completed">
            <summary>
            The work order action successfullly completed.
            </summary>
        </member>
        <member name="T:CFX.Structures.WorkOrderActionType">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            Describes the type of action of a work order action.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.Uncategorized">
            <summary>
            Activity does not fall into any of the pre-defined categories.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.RecipeCreation">
            <summary>
            The action is a recipe creation.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.RecipeModification">
            <summary>
            The action is a recipe modification.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.RecipeOptimization">
            <summary>
            The action is a recipe optimization.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.PreProductionOperations">
            <summary>
            The action is a pre production operation.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.PreProductionOperations_MaterialSetup">
            <summary>
            The action is a pre production operation, related to material setup. Includes activities like feeder setup, paste application, etc.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.PreProductionOperations_ToolingSetup">
            <summary>
            The action is a pre production operation, related to tooling setup. Includes setup type activities like stencil installation, etc.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.PreProductionOperations_OtherSetup">
            <summary>
            The action is a pre production operation, related to other types of setup.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.PreProductionOperations_QualityChecks">
            <summary>
            The action is a pre production operation, related to quality checks, like first article runs and other quality pre-production activities.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.PostProductionOperations">
            <summary>
            The action is a post production operation. Includes breakdown, and other post-production activities.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.MidProductionOperations">
            <summary>
            The action is a mid production operation.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderActionType.MidProcuctionOperations_MaterialReplenish">
            <summary>
            The action is a mid production operation, related to replenishment of materials, such as feeder resplenishment, new paste application, etc. 
            </summary>
        </member>
        <member name="T:CFX.Structures.WorkOrderIdentifier">
            <summary>
            Uniquely identifies a particular Work Order (or Work Order sub-batch)
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrderIdentifier.WorkOrderId">
            <summary>
            The order number of the Work Order
            </summary>
        </member>
        <member name="P:CFX.Structures.WorkOrderIdentifier.Batch">
            <summary>
            For Work Orders that are divided into two or more sub-batches, this property indicates
            the name of the sub-batch.
            </summary>
        </member>
        <member name="T:CFX.Structures.WorkOrderStatus">
            <summary>
            Indicates the current status of a Work Order
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderStatus.AwaitingApproval">
            <summary>
            The Work Order has not yet been approved, and may not be scheduled or executed.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderStatus.ApprovedAndPending">
            <summary>
            THe Work Order has been approved, and is available to be scheduled or executed.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderStatus.Scheduled">
            <summary>
            THe Work Order has been scheduled for production, but is not yet executing.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderStatus.InProcess">
            <summary>
            The Work Order is currently being executed, and is in process.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderStatus.Completed">
            <summary>
            The Work Order has been completed.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderStatus.Closed">
            <summary>
            The Work Order has been closed.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderStatus.OnHold">
            <summary>
            The Work Order has been placed on hold.  No work should occur on this order at this time.
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkOrderStatus.Cancelled">
            <summary>
            The Work Order has been cancelled.  
            </summary>
        </member>
        <member name="T:CFX.Structures.WorkResult">
            <summary>
            The result of an operation where work was performed on a production unit
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkResult.Completed">
            <summary>
            The work was completed successfully
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkResult.Failed">
            <summary>
            The work was completed, but with an undesireable result
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkResult.Aborted">
            <summary>
            Work was not completed
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkResult.Skipped">
            <summary>
            <para>** NOTE: ADDED in CFX 1.4 **</para>
            The test was skipped because of (virtual) bad mark
            </summary>
        </member>
        <member name="T:CFX.Structures.WorkStagePauseReason">
            <summary>
            Types of WorkStage pause reasons
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.Unknown">
            <summary>
            The reason of the pause is unknown
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.MaterialMissing">
            <summary>
            The stage is stopped because a material is missing (or too low quantity) for production
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.NozzleMissing">
            <summary>
            The stage is stopped because a nozzle is missing (or too low quantity) for production
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.WaitingForPreviousStageConveying">
            <summary>
            The stage is waiting for the previous stage ton convey a board to him
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.WaitingForNextStageConveying">
            <summary>
            The stage is waiting for the next stage to be able to receive a board
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.ManualAlignmentNeeded">
            <summary>
            The stage is waiting for the operator to execute a manual alignment
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.MaterialInstalledConfirmationNeeded">
            <summary>
            The stage is waiting for the operator to confirm the installation a material (doubt)
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.ManualBarcodeFillingNeeded">
            <summary>
            The stage is waiting for the operator to manually fill a barcode
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.InformationMessageConfirmation">
            <summary>
            The stage is waiting for the operator to confirm an information message
            </summary>
        </member>
        <member name="F:CFX.Structures.WorkStagePauseReason.ProductionStoppedByOperator">
            <summary>
            <para>** NOTE: ADDED in CFX 1.2 **</para>
            The stage is waiting because it has been stopped by the operator
            </summary>
        </member>
        <member name="T:CFX.Structure.Maintenance.NamespaceDoc">
            <summary>
            <para>** NOTE: ADDED in CFX 1.3 **</para>
            CFX Topic implemented by endpoints which manage maintenance information
            </summary>
        </member>
        <member name="T:CFX.Transport.AmqpCFXEndpoint">
            <summary>
            Primary class used by endpoint implementers to facility bi-directional, AMQP 1.0 based communications.  Using this class, endpoints
            may publish messages to one or more destinations, subscribe to receive messages from one or more sources, and process incoming
            CFX requests from other CFX endpoints.  This class also supports security features, including secure AMQP 1.0 protocol (AMQPS or AMQP over TLS),
            as well as SASL based authentication (Simple Authentication and Security Layer).  At the time of this writing, the endpoint has been tested 
            and verified for use with the RabbitMQ broker (with AMQP 1.0 plug-in enabled), as well as the Apache Qpid broker.
            </summary>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="E:CFX.Transport.AmqpCFXEndpoint.OnRequestReceived">
            <summary>
            Event that fires whenever a request type CFX message is received by this Endpoint
            from another Endpoint.  Implement this event with your own handler to process incoming
            point-to-point Request / Response type CFX messages.
            </summary>
        </member>
        <member name="E:CFX.Transport.AmqpCFXEndpoint.OnCFXMessageReceived">
            <summary>
            Event that fires whenever a CFX message is received from a subscription type channel.
            </summary>
        </member>
        <member name="E:CFX.Transport.AmqpCFXEndpoint.OnMalformedMessageReceived">
            <summary>
            Event that fires whenever a message is received that is not a valid, properly formatted CFX Message
            </summary>
        </member>
        <member name="E:CFX.Transport.AmqpCFXEndpoint.OnCFXMessageReceivedFromListener">
            <summary>
            Event that fires whenever a CFX message is received from a listener type channel.
            </summary>
        </member>
        <member name="E:CFX.Transport.AmqpCFXEndpoint.OnValidateCertificate">
            <summary>
            Implement this event with your own handler if you wish to validate the server certificate used for
            secure, encrypted, AMQPS communications.
            </summary>
        </member>
        <member name="E:CFX.Transport.AmqpCFXEndpoint.OnConnectionEvent">
            <summary>
            Event that fires whenever a publish or subscription type connection is established, interrupted, or disconnected.
            The AmqpCFXEndpoint class will continuously attempt to reconnect any connection that has been 
            interrupted.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.CFXHandle">
            <summary>
            Returns the CFXHandle of the endpoint currently associated with this AMQP endpoint.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.RequestUri">
            <summary>
            Returns the Uri currently being used to accept incoming CFX requests for this endpoint
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.Codec">
            <summary>
            Sets the codec used to transmit messages across the wire, including the newly introduced GZIP Compressed Codec, which is now the default.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.ReconnectInterval">
            <summary>
            The time interval between attempts to reconnect publish or subscriber channels after a
            network interruption.  The default setting is false.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.KeepAliveEnabled">
            <summary>
            When enabled, the endpoint will automatically refresh (disconnect/reconnect) all of its
            subscription channels.  This is to prevent brokers from timing out the connection when
            the channel has been dormant for a period of time.  The default setting is 60 seconds.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.KeepAliveInterval">
            <summary>
            If keep alive is enabled, this property specifies the time period between keep alive reconnects.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.RequestTimeout">
            <summary>
            When executing a point to point request/response call to another CFX endpoint, this time span
            specifies the maximum amount of time that this endpoint will wait for the other endpoint to respond
            before timing out.  The default is 30 seconds.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.MaxMessagesPerTransmit">
            <summary>
            When applicable, the endpoint will attempt to publish multiple messages in one AMQP transaction.
            This is done to maximize effeciency.  This property sets the maximum number of messages that may be
            grouped together in a single AMQP message.  The default value is 30 messages.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.MaxFrameSize">
            <summary>
            Used by the AMQP protocol to establish the maximum number of bytes to transmit per "frame" (aka "chunk").  
            Larger messages may be broken down into multiple frames if their size exceeds the max frame size.
            The default size is 500,000 bytes.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.SubjectFormat">
            <summary>
            Establishes the format for the subject property of the AMQP message envelope on all messages published 
            by this endpoint.  The following tags may be used in the format string:
            <list type="bullet">
            <item>${cfx-handle}      Will be replaced with the handle of your endpoint (CFXEnvelope.Source}</item>
            <item>${cfx-topic}       Will be replaced with the topic of the message ("CFX.Production" for example)</item>
            <item>${cfx-messagename} Will be replaced with the fully qualified name of the message ("CFX.Production.WorkStarted" for example)</item>
            </list>
            If this property is null or an empty string, the default subject format will be utilized:  "${cfx-handle}.${cfx-messagename}"
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.DurableMessages">
            <summary>
            The AMQP 1.0 message framing header includes a "Durable" property that notifies recipients that this message
            should be maintained in durable storage on the message broker until delivered to all recipients, surviving broker system restarts.
            When this property is set to true, all messages published by the endpoint will be tagged with the Durable framing header.
            The default value is true.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.DurableReceiverSetting">
            <summary>
            Establishes the value of the Durable framing header flag for subscription channels.  Different brokers
            will interprety this value differently.  Refer to your broker documentation to determine how to set this flag.
            The default setting is 1 (which signals to RabbitMQ that durable messages should be removed from their queue
            once successfully delivered to this endpoint).
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.ValidateCertificates">
            <summary>
            If set to false, certificate validation will be disabled.  This should only be used for testing purposes when a
            valid, commercial SSL certificate is not available for testing.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.IsOpen">
            <summary>
            Read-only property indicating whether or not the endpoint is in an open state.
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpCFXEndpoint.HeartbeatFrequency">
            <summary>
            The AmqpCFXEndpoint class automatically publishies CFX Heartbeat messages on 1 minute intervals by default.
            You can adjust this frequency using this property.  If set to zero (0), automatic publication of
            Heartbeat messages will be disabled.  The minimum frequency is 1 second and the maximum frequency is 5 minutes.
            </summary>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.Open(System.String,System.Net.IPAddress,System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Opens and inintializes the Endpoint.  This should be called only once prior to closing the endpoint.
            </summary>
            <param name="cfxHandle">The unique CFX Handle for this endpoint.</param>
            <param name="requestAddress">The IP address on which this endpoint will listen for incoming requests.</param>
            <param name="requestPort">The TCP port on which this endpoint will listen for incoming requests.  Default is 5672.</param>
            <param name="certificate">An X509 certificate that has been loaded from the certificate store.  This is optional, and only must be set when using secure, encrypted AMQPS</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.Open(System.String,System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Opens and inintializes the Endpoint.  This should be called only once prior to closing the endpoint.
            </summary>
            <param name="cfxHandle">The unique CFX Handle for this endpoint.</param>
            <param name="requestUri">The Uri / network address on which this endpoint will listen for incoming requests for this endpoint.  amqp:// prefix
            may be used for unencrypted AMQP on port 5672.  amqps:// prefix may be used for secure AMQP on port 5671.  You may also specify
            custom ports using normal hostname:port notation.  Authentication may also be specified using standard user notation:  eg.
            amqps://user1:password1@myhost/
            </param>
            <param name="certificate">An X509 certificate that has been loaded from the certificate store.  This is optional, and only must be set when using secure, encrypted AMQPS</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.TestChannel(System.Uri,System.Exception@,System.String)">
            <summary>
            Tests if the specified network address is capable of establishing an AMQP connection from this endpoint.
            </summary>
            <param name="channelUri">The network address of the target channel.</param>
            <param name="virtualHostName">The name of the virtual host at the destination endpoint.  Default is null for default virtual host.</param>
            <param name="error">In the case of an error, returns information about the nature of the error.</param>
            <returns></returns>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.TestPublishChannel(System.Uri,System.String,System.Exception@,System.String,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Tests if the specified network address and AMQP target address is capable of receiving messages published from this endpoint.
            </summary>
            <param name="networkAddress">The network address of the target channel.</param>
            <param name="address">The AMQP target address to which messages will be published.</param>
            <param name="error">In the case of an error, returns information about the nature of the error.</param>
            <param name="virtualHostName">The name of the virtual host at the destination endpoint.  Default is null for default virtual host.  For RabbitMQ broker, use format vhost:MYVHOST</param>
            <param name="certificate">If secure amqps is being used, this property may optionally include the certificate that will be matched
            against the server's certificate.  Leave null if you do not wish to perform certificate matching (secure communications will still be established
            using the server's certificate (if using amqps).</param>
            <returns>A boolean value indicated whether or not the channel is valid.</returns>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.TestSubscribeChannel(System.Uri,System.String,System.Exception@,System.String,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Tests if this endpoint is capable of subscribing to and receiving message from the specified network address and AMQP source address.
            </summary>
            <param name="networkAddress">The network address of the target channel.</param>
            <param name="address">The AMQP source address from which messages will be received.</param>
            <param name="error">In the case of an error, returns information about the nature of the error.</param>
            <param name="virtualHostName">The name of the virtual host at the destination endpoint.  Default is null for default virtual host.  For RabbitMQ broker, use format vhost:MYVHOST</param>
            <param name="certificate">If secure amqps is being used, this property may optionally include the certificate that will be matched
            against the server's certificate.  Leave null if you do not wish to perform certificate matching (secure communications will still be established
            using the server's certificate (if using amqps).</param>
            <returns>A boolean value indicated whether or not the channel is valid.</returns>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.AddPublishChannel(CFX.Transport.AmqpChannelAddress,System.String,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Adds a new publish channel for this endpoint.  All messages published by the endpoint will be transmitted to one or more publish channels that
            are established using this method.  Only call this methoud after this endpoint has been opened by the Open method.
            </summary>
            <param name="address">Represents the network address and AMQP target address of the target channel</param>
            <param name="certificate">If secure amqps is being used, this property may optionally include the certificate that will be matched
            against the server's certificate.  Leave null if you do not wish to perform certificate matching (secure communications will still be established
            using the server's certificate (if using amqps).</param>
            <param name="virtualHostName">If using a broker with multiple virtual hosts, the virtual host name to be used on the broker.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.AddPublishChannel(System.Uri,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Adds a new publish channel for this endpoint.  All messages published by the endpoint will be transmitted to one or more publish channels that
            are established using this method.  Only call this methoud after this endpoint has been opened by the Open method.
            </summary>
            <param name="networkAddress">The network address of the target channel.</param>
            <param name="address">The AMQP target address of the target channel.</param>
            <param name="certificate">If secure amqps is being used, this property may optionally include the certificate that will be matched
            against the server's certificate.  Leave null if you do not wish to perform certificate matching (secure communications will still be established
            using the server's certificate (if using amqps).</param>
            <param name="virtualHostName">If using a broker with multiple virtual hosts, the virtual host name to be used on the broker.  For RabbitMQ broker, use format vhost:MYVHOST</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.ClosePublishChannel(CFX.Transport.AmqpChannelAddress)">
            <summary>
            Closes the specified publish channel (that was opened previously via a call to AddPublishChannel.
            </summary>
            <param name="address">The channel address to be closed.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.ClosePublishChannel(System.Uri,System.String)">
            <summary>
            Closes the specified publish channel (that was opened previously via a call to AddPublishChannel.
            </summary>
            <param name="networkAddress">The network address of the channel to be closed.</param>
            <param name="address">The AMQP target address of the channel to be closed.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.AddSubscribeChannel(CFX.Transport.AmqpChannelAddress,System.String,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Adds a new subscription channel for this endpoint.
            </summary>
            <param name="address">The address (network address + AMQP source address) of the source.</param>
            <param name="certificate">If secure amqps is being used, this property may optionally include the certificate that will be matched
            against the server's certificate.  Leave null if you do not wish to perform certificate matching (secure communications will still be established
            using the server's certificate (if using amqps).</param>
            <param name="virtualHostName">If using a broker with multiple virtual hosts, the virtual host name to be used on the broker.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.AddSubscribeChannel(System.Uri,System.String,System.String,System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Adds a new subscription channel for this endpoint.
            </summary>
            <param name="networkAddress">The network address of the message source.</param>
            <param name="address">The AMQP source address of the message source.</param>
            <param name="certificate">If secure amqps is being used, this property may optionally include the certificate that will be matched
            against the server's certificate.  Leave null if you do not wish to perform certificate matching (secure communications will still be established
            using the server's certificate (if using amqps).</param>
            <param name="virtualHostHame">If using a broker with multiple virtual hosts, the virtual host name to be used on the broker.  For RabbitMQ broker, use format vhost:MYVHOST</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.CloseSubscribeChannel(CFX.Transport.AmqpChannelAddress)">
            <summary>
            Closes the specified subscription channel (that was opened previously via a call to AddSubscribeChannel.
            </summary>
            <param name="address">The channel address to be closed.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.CloseSubscribeChannel(System.Uri,System.String)">
            <summary>
            Closes the specified subscription channel (that was opened previously via a call to AddSubscribeChannel.
            </summary>
            <param name="networkAddress"></param>
            <param name="address"></param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.AddListener(System.String)">
            <summary>
            Allows this endpoint to listen for and receive unsolicited (published) messages directly from multiple CFX endpoints that have been configured to publish messages to this
            endpoint, just like a message broker.  Your endpoint must be configured to receive requests (via the Open method requestUri parameter) before adding a listener.
            </summary>
            <param name="targetAddress">The AMQP target address on which to receive messages (like a broker exchange address).</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.CloseListener(System.String)">
            <summary>
            Closes a previously added listener (added with AddListener method).
            </summary>
            <param name="targetAddress">The AMQP target address to close.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.AddMessageSource(System.String)">
            <summary>
            Set up a message source on this endpoint that other endpoints may subscribe to.  Messages published to a message source are placed in a queue, and remain there until
            a subscriber connects and removes them.  The queue is volatile, and will be deleted when the hosting process is restarted.
            </summary>
            <param name="sourceAddress"></param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.CloseMessageSource(System.String)">
            <summary>
            Closes a previously added message source.  All messages in the source's queue will be purged upon closing.
            </summary>
            <param name="sourceAddress"></param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PurgeMessageSource(System.String)">
            <summary>
            Purges all queued messages for the given message source.
            </summary>
            <param name="sourceAddress"></param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PublishToMessageSource(System.String,CFX.CFXEnvelope)">
            <summary>
            Publishes a single message to a message source.
            </summary>
            <param name="sourceAddress"></param>
            <param name="env"></param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PublishManyToMessageSource(System.String,System.Collections.Generic.IEnumerable{CFX.CFXEnvelope})">
            <summary>
            Publishes multiple messages to a message source.
            </summary>
            <param name="sourceAddress"></param>
            <param name="envelopes"></param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.Close">
            <summary>
            Closes the endpoint, including all inbound and outbound channels.
            </summary>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.Dispose">
            <summary>
            Disposes the endpoint, closing all inbound and outbound channels.
            </summary>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.GetSpoolSize(CFX.Transport.AmqpChannelAddress)">
            <summary>
            Returns the total number of messages spooled for a particular 
            </summary>
            <param name="addr"></param>
            <returns></returns>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PurgeSpool(CFX.Transport.AmqpChannelAddress)">
            <summary>
            Permanently deletes all spooled messages from the specified Publish channel.
            </summary>
            <param name="addr">The channel address of the publish channel to be purged.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PurgeAllSpools">
            <summary>
            Permanently deletes all spooled messages from all Publish channels associated with this endpoint.
            </summary>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.Publish(CFX.CFXEnvelope)">
            <summary>
            Publishes a CFX message.  The message will be transmitted to all publish channels.
            </summary>
            <param name="env">The CFX envelope containing the message to publish.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.Publish(CFX.CFXMessage)">
            <summary>
            Publishes a CFX message.  A CFX envelope will be automatically generated for
            your message.  The message will be transmitted to all publish channels.
            </summary>
            <param name="msg">The CFX message to publish.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PublishMany(System.Collections.Generic.IEnumerable{CFX.CFXEnvelope})">
            <summary>
            Publishes multiple CFX messages at one time.  The messages will be transmitted to all publish channels.
            </summary>
            <param name="envelopes"></param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PublishMany(System.Collections.Generic.IEnumerable{CFX.CFXMessage})">
            <summary>
            Publishes multiple CFX messages at one time. CFX envelopes will be automatically generated
            for your messages.  The messages will be transmitted to all publish channels.
            </summary>
            <param name="msgs"></param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PublishToChannel(CFX.CFXEnvelope,CFX.Transport.AmqpChannelAddress)">
            <summary>
            Publishes a CFX envelope to the specified channel. 
            </summary>
            <param name="env">The CFX envelope containing the message to publish.</param>
            <param name="address">The address of the channel to which you wish to publish this message.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PublishToChannel(CFX.CFXMessage,CFX.Transport.AmqpChannelAddress)">
            <summary>
            Publishes a CFX message to the specified channel.  A CFX envelope will be automatically generated for
            your message.
            </summary>
            <param name="msg">The CFX envelope to publish.</param>
            <param name="address">The address of the channel to which you wish to publish this message.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PublishManyToChannel(System.Collections.Generic.IEnumerable{CFX.CFXEnvelope},CFX.Transport.AmqpChannelAddress)">
            <summary>
            Publishes a collection of CFX envelopes to the specified channel.
            </summary>
            <param name="envs">An enumerable list of CFX envelopes to publish.</param>
            <param name="address">The address of the channel to which you wish to publish this message.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.PublishManyToChannel(System.Collections.Generic.IEnumerable{CFX.CFXMessage},CFX.Transport.AmqpChannelAddress)">
            <summary>
            Publishes a collection of CFX messages to the specified channel.
            CFX envelopes will be automatically generated for each of your messages.
            </summary>
            <param name="msgs">An enumerable list of the CFX messages to publish.</param>
            <param name="address">The address of the channel to which you wish to publish this message.</param>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.ExecuteRequest(System.String,CFX.CFXEnvelope)">
            <summary>
            Performs a direct, point-to-point request/response transaction with another CFX Endpoint.
            </summary>
            <param name="targetUri">The network address of the Endpoint to which the request will be sent.
            May use amqp:// or amqps:// topic (amqps for secure communications).
            May also include user information (for authentication), as well as a custom TCP port.
            </param>
            <param name="request">A CFX envelope containing the request.</param>
            <returns>A CFX envelope containing the response from the Endpoint.</returns>
        </member>
        <member name="M:CFX.Transport.AmqpCFXEndpoint.ExecuteRequestAsync(System.String,CFX.CFXEnvelope)">
            <summary>
            Performs a direct, point-to-point request/response transaction with another CFX Endpoint.
            </summary>
            <param name="targetUri">The network address of the Endpoint to which the request will be sent.
            May use amqp:// or amqps:// topic (amqps for secure communications).
            May also include user information (for authentication), as well as a custom TCP port.
            </param>
            <param name="request">A CFX envelope containing the request.</param>
            <returns>A CFX envelope containing the response from the Endpoint.</returns>
        </member>
        <member name="T:CFX.Transport.AmqpChannelAddress">
            <summary>
            Represetns and AMQP source or target, comprised of a network address, and an AMQP source or target address.
            (eg.  amqps://user1:password1@myamqpbroker.company1.com, amqp://broker3.company1.com, etc.)
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpChannelAddress.Uri">
            <summary>
            The network address of the AMQP source or target.  May include user and port information in
            standard Uri format. (eg.  amqps://user1:password1@myamqpbroker.company1.com, amqp://broker3.company1.com, 
            amqps://myamqpbroker.company1.com:8856, etc.).
            </summary>
        </member>
        <member name="P:CFX.Transport.AmqpChannelAddress.Address">
            <summary>
            The AMQP 1.0 source or target address (eg.  /exchange/exchange1, /queue/queue1, etc.)
            </summary>
        </member>
        <member name="T:CFX.Transport.CFXMessageReceivedHandler">
            <summary>
            Delegate for CFX Message received events from subscribed channels
            </summary>
            <param name="source">The source of the message</param>
            <param name="message">The envelope containing the message</param>
        </member>
        <member name="T:CFX.Transport.CFXMalformedMessageReceivedHandler">
            <summary>
            Delegate for malformed CFX Message received events
            </summary>
            <param name="source">The source of the message</param>
            <param name="message">The text that was received that is not a valid CFX message</param>
        </member>
        <member name="T:CFX.Transport.CFXMessageReceivedFromListenerHandler">
            <summary>
            Delegate for published messages received via self-hosted exchanges
            </summary>
            <param name="targetAddress">The AMQP target that was specified by the publisher</param>
            <param name="message">The CFX envelope containing the published message</param>
        </member>
        <member name="T:CFX.Transport.ValidateServerCertificateHandler">
            <summary>
            Delegate for certificate self-validation
            </summary>
            <param name="source">The Uri of the source</param>
            <param name="certificate">The certificate</param>
            <param name="chain">The certification chain</param>
            <param name="sslPolicyErrors">Policy Errors</param>
            <returns></returns>
        </member>
        <member name="T:CFX.Transport.ConnectionEventHandler">
            <summary>
            Delegate for connection related events
            </summary>
            <param name="eventType">The type of event</param>
            <param name="uri">The related Uri</param>
            <param name="spoolSize">The current size of the related spool (message count)</param>
            <param name="errorInformation">Human interpretable information related to the event</param>
            <param name="errorException">An optional Exception indicating error details</param>
        </member>
        <member name="T:CFX.Transport.AuthenticationMode">
            <summary>
            An enumeration indicating the authentication mode
            </summary>
        </member>
        <member name="F:CFX.Transport.AuthenticationMode.Auto">
            <summary>
            Authentication is handled automatically
            </summary>
        </member>
        <member name="F:CFX.Transport.AuthenticationMode.Anonymous">
            <summary>
            Anonymous authentication shoudl be utilized
            </summary>
        </member>
        <member name="F:CFX.Transport.AuthenticationMode.External">
            <summary>
            External authentication should be utilized
            </summary>
        </member>
        <member name="T:CFX.Transport.ValidateCertificateResult">
            <summary>
            An enumeration that indicates the result of an SSL certificate validation
            </summary>
        </member>
        <member name="F:CFX.Transport.ValidateCertificateResult.Valid">
            <summary>
            The certificate is valid
            </summary>
        </member>
        <member name="F:CFX.Transport.ValidateCertificateResult.Invalid">
            <summary>
            The certificate is not valid
            </summary>
        </member>
        <member name="F:CFX.Transport.ValidateCertificateResult.NotValidated">
            <summary>
            The certificate was not validated.  Apply default validation.
            </summary>
        </member>
        <member name="T:CFX.Transport.ConnectionEvent">
            <summary>
            An enumeration that indicates the type of a connection event
            </summary>
        </member>
        <member name="F:CFX.Transport.ConnectionEvent.ConnectionEstablished">
            <summary>
            Connection with established successfully
            </summary>
        </member>
        <member name="F:CFX.Transport.ConnectionEvent.ConnectionFailed">
            <summary>
            Connection could not be established
            </summary>
        </member>
        <member name="F:CFX.Transport.ConnectionEvent.ConnectionInterrupted">
            <summary>
            Connection was previously established, but has been interrupted
            </summary>
        </member>
        <member name="F:CFX.Transport.ConnectionEvent.ConnectionClosed">
            <summary>
            Connection has been ended
            </summary>
        </member>
        <member name="T:CFX.Transport.LinkType">
            <summary>
            An enumeration indicating the type of link
            </summary>
        </member>
        <member name="F:CFX.Transport.LinkType.Sender">
            <summary>
            Sender link
            </summary>
        </member>
        <member name="F:CFX.Transport.LinkType.Receiver">
            <summary>
            Receiver link
            </summary>
        </member>
        <member name="T:CFX.Transport.OnRequestHandler">
            <summary>
            Delegate for handling inbound requests
            </summary>
            <param name="request">An envelope containing the request message</param>
            <returns>An envelope containing the associated response message</returns>
        </member>
        <member name="T:CFX.Transport.CFXCodec">
            <summary>
            An enumeration that describes the encoding method that will be used to serialize/deserialize
            CFX messages for transmission across the wire.  Similar to Content-Encoding header in HTTP,
            </summary>
        </member>
        <member name="F:CFX.Transport.CFXCodec.raw">
            <summary>
            Messages are transmitted uncompressed in raw JSON format with UTF-8 encoding
            </summary>
        </member>
        <member name="F:CFX.Transport.CFXCodec.gzip">
            <summary>
            Messages are transmitted in compressed GZIP format
            </summary>
        </member>
        <member name="T:CFX.Transport.AmqpUtilities">
            <summary>
            A static class containing a variety of useful helper functions related to the AMQP 1.0 protocol
            </summary>
        </member>
        <member name="M:CFX.Transport.AmqpUtilities.MessageFromEnvelope(CFX.CFXEnvelope,CFX.Transport.CFXCodec,System.String)">
            <summary>
            Converts a CFXEnvelope into an AMQP message
            </summary>
            <param name="env">The CFX envelope containing a CFX message</param>
            <param name="codec">The CODEC to be used</param>
            <param name="subjectFormat">The subject format to be applied.  If null, default is used.</param>
            <returns>An AMQP message</returns>
        </member>
        <member name="M:CFX.Transport.AmqpUtilities.MessageFromEnvelopes(CFX.CFXEnvelope[],CFX.Transport.CFXCodec,System.String)">
            <summary>
            Converts multiple CFXEnvelope(s) into a single AMQP message
            </summary>
            <param name="envelopes">An array of CFX envelopes containing CFX messages</param>
            <param name="codec">The CODEC to be used</param>
            <param name="subjectFormat">The subject format to be applied.  If null, default is used.</param>
            <returns>An AMQP message</returns>
        </member>
        <member name="M:CFX.Transport.AmqpUtilities.EnvelopesFromMessage(Amqp.Message)">
            <summary>
            Decodes a list of CFX envelopes containing CFX messages given a single AMQP message
            </summary>
            <param name="msg">The AMQP message to decode</param>
            <returns>The resultant list of CFX envelopes containing CFX messages</returns>
        </member>
        <member name="M:CFX.Transport.AmqpUtilities.EnvelopeFromMessage(Amqp.Message)">
            <summary>
            Decodes and returns a single CFX envelope given a single AMQP Message
            </summary>
            <param name="msg">The AMQP message to decode</param>
            <returns>A CFXEnvelope containing a CFX message</returns>
        </member>
        <member name="M:CFX.Transport.AmqpUtilities.MessagePreview(Amqp.Message,System.Int32)">
            <summary>
            Returns the first x characters of the payload of an AMQP message, assuming UTF8 encoding
            </summary>
            <param name="message">The AMQP message to decode</param>
            <param name="count">The number of characters to return.  Defaults to 200</param>
            <returns>A string containing the first x characters of the AMQP message payload</returns>
        </member>
        <member name="M:CFX.Transport.AmqpUtilities.GetCertificate(System.String)">
            <summary>
            Looks in the both the machine and user level certificate stores for a certificate
            whose subject name OR thumbprint matches the value specified by the certFindName parameter.
            Will throw an ArumentException if not found.
            </summary>
            <param name="certFindValue">The certificate subject name OR thumbprint to search for</param>
            <returns>The resultant certificate</returns>
        </member>
        <member name="T:CFX.Transport.NamespaceDoc">
            <summary>
            Constains classes which facilitate the transport of CFX messages across a network, 
            including AMQP 1.0 transmission and receipt
            </summary>
        </member>
        <member name="T:CFX.Transport.SHA">
            <summary> 
              Static class providing Secure Hashing Algorithm (SHA-1, SHA-224, SHA-256) 
            </summary> 
        </member>
        <member name="M:CFX.Transport.SHA.computeHMAC_SHA256(System.Byte[],System.Byte[])">
            <summary> 
              Compute HMAC SHA-256 
            </summary> 
            <param name = "secret">Secret</param> 
            <param name = "value">Password</param> 
            <returns>32 byte HMAC_SHA256</returns> 
        </member>
        <member name="M:CFX.Transport.SHA.computeSHA256(System.Byte[])">
            <summary> 
              Compute SHA-256 digest 
            </summary> 
            <param name = "input">Input array</param> 
        </member>
        <member name="T:CFX.Utilities.AppLog">
            <summary>
            Allows for diagnostic logging of CFX transactions.
            </summary>
        </member>
        <member name="E:CFX.Utilities.AppLog.OnTraceMessage">
            <summary>
            Delegate for receiving trace events from CFX AppLog class
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLog.SettingsPath">
            <summary>
            Defines the full path and file name of a file containing diagnostic log settings (in JSON format).
            The running application will search for this file at runtime (every 10 seconds), and apply the logging
            settings specified.
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLog.LoggingEnabled">
            <summary>
            Global enable/disable flag for logging.  If false, all CFX diagnostic logging is disabled.
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLog.LogFilePath">
            <summary>
            The full path and filename where diagnostic log entries should be written.  If null or empty, no log is written to disk.
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLog.LoggingLevel">
            <summary>
            A flag type enumeration indicating which logging levels are to be enabled
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLog.AmqpTraceEnabled">
            <summary>
            If true, transport oritented diagnostic trace information from the underlying Microsoft Amqp.Net library will also
            be included in the CFX diagnostic logs
            </summary>
        </member>
        <member name="T:CFX.Utilities.LogMessageType">
            <summary>
            An flag type enumeration that indicates which types of messages should be recorded during CFX diagnostic logging.
            </summary>
        </member>
        <member name="F:CFX.Utilities.LogMessageType.Debug">
            <summary>
            Debug Level
            </summary>
        </member>
        <member name="F:CFX.Utilities.LogMessageType.Info">
            <summary>
            Information Level
            </summary>
        </member>
        <member name="F:CFX.Utilities.LogMessageType.Warn">
            <summary>
            Warning Level
            </summary>
        </member>
        <member name="F:CFX.Utilities.LogMessageType.Error">
            <summary>
            Error Level
            </summary>
        </member>
        <member name="F:CFX.Utilities.LogMessageType.All">
            <summary>
            All Levels Recorded
            </summary>
        </member>
        <member name="T:CFX.Utilities.TraceListenerHandler">
            <summary>
            Delegate for receiving CFX diagnostic log trace message events
            </summary>
            <param name="type">The type of trace message</param>
            <param name="traceMessage">The trace message</param>
        </member>
        <member name="T:CFX.Utilities.AppLogSettings">
            <summary>
            A class representing CFX diagnostic log settings
            </summary>
        </member>
        <member name="M:CFX.Utilities.AppLogSettings.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLogSettings.LoggingEnabled">
            <summary>
            Global enable/disable flag for logging.  If false, all CFX diagnostic logging is disabled.
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLogSettings.LogFilePath">
            <summary>
            The full path and filename where diagnostic log entries should be written.  If null or empty, no log is written to disk.
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLogSettings.LoggingLevel">
            <summary>
            A flag type enumeration indicating which logging levels are to be enabled
            </summary>
        </member>
        <member name="P:CFX.Utilities.AppLogSettings.AmqpTraceEnabled">
            <summary>
            If true, transport oritented diagnostic trace information from the underlying Microsoft Amqp.Net library will also
            be included in the CFX diagnostic logs
            </summary>
        </member>
        <member name="T:CFX.Utilities.CreatedVersionAttribute">
            <summary>
            An attribute that may be applied to classes, properties, enumerations, and events indicating the version of CFX where the item was first introduced.
            If an item has no attribute, it may be assumed that the item was introduced in the first version of CFX ("1.0")
            </summary>
        </member>
        <member name="M:CFX.Utilities.CreatedVersionAttribute.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="createdVersion"></param>
        </member>
        <member name="P:CFX.Utilities.CreatedVersionAttribute.CreatedVersion">
            <summary>
            The version of CFX where this item was first introduced.
            </summary>
        </member>
        <member name="T:CFX.Utilities.CFXJsonSerializer">
            <summary>
            A utility class that converts CFX Envelopes and Messages to and from JSON format
            </summary>
        </member>
        <member name="M:CFX.Utilities.CFXJsonSerializer.SerializeObject(System.Object,System.Boolean)">
            <summary>
            Serializes a CFX object into JSON format
            </summary>
            <param name="o">The object to be serialized</param>
            <param name="formatted">If true, the resultant JSON will be formatted for easy human interpretation (whitespace and carriage returns added)</param>
            <returns>A string representing the CFX object in JSON format</returns>
        </member>
        <member name="M:CFX.Utilities.CFXJsonSerializer.SerializeObjectWithTypes(System.Object,System.Boolean)">
            <summary>
            Serializes a CFX object into JSON format, including type information
            </summary>
            <param name="o">The object to be serialized</param>
            <param name="formatted">If true, the resultant JSON will be formatted for easy human interpretation (whitespace and carriage returns added)</param>
            <returns>A string representing the CFX object in JSON format</returns>
        </member>
        <member name="M:CFX.Utilities.CFXJsonSerializer.DeserializeObject``1(System.String)">
            <summary>
            Converts a string in JSON format into the CFX object that it represents
            </summary>
            <typeparam name="T">The Type of the object</typeparam>
            <param name="jsonData">A string in JSON format which represents the CFX object</param>
            <returns>An object of type T which is represented by the jsonData parameter</returns>
        </member>
        <member name="M:CFX.Utilities.CFXJsonSerializer.DeserializeObject(System.String,System.Type)">
            <summary>
            Converts a string in JSON format into the CFX object that it represents
            </summary>
            <param name="jsonData">A string in JSON format which represents the CFX object</param>
            <param name="type">The Type of the object</param>
            <returns>An object of type T which is represented by the jsonData parameter</returns>
        </member>
        <member name="P:CFX.Utilities.CFXJsonSerializer.JsonSettings">
            <summary>
            Settings that control how serialization and deserialization of CFX objects will be done
            </summary>
        </member>
        <member name="T:CFX.Utilities.MathHelper">
            <summary>
            Contains commonly used precalculated values and mathematical operations.
            </summary>
        </member>
        <member name="F:CFX.Utilities.MathHelper.E">
            <summary>
            Represents the mathematical constant e(2.71828175).
            </summary>
        </member>
        <member name="F:CFX.Utilities.MathHelper.Log10E">
            <summary>
            Represents the log base ten of e(0.4342945).
            </summary>
        </member>
        <member name="F:CFX.Utilities.MathHelper.Log2E">
            <summary>
            Represents the log base two of e(1.442695).
            </summary>
        </member>
        <member name="F:CFX.Utilities.MathHelper.Pi">
            <summary>
            Represents the value of pi(3.14159274).
            </summary>
        </member>
        <member name="F:CFX.Utilities.MathHelper.PiOver2">
            <summary>
            Represents the value of pi divided by two(1.57079637).
            </summary>
        </member>
        <member name="F:CFX.Utilities.MathHelper.PiOver4">
            <summary>
            Represents the value of pi divided by four(0.7853982).
            </summary>
        </member>
        <member name="F:CFX.Utilities.MathHelper.TwoPi">
            <summary>
            Represents the value of pi times two(6.28318548).
            </summary>
        </member>
        <member name="M:CFX.Utilities.MathHelper.Barycentric(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Returns the Cartesian coordinate for one axis of a point that is defined by a
            given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">
            The coordinate on one axis of vertex 1 of the defining triangle.
            </param>
            <param name="value2">
            The coordinate on the same axis of vertex 2 of the defining triangle.
            </param>
            <param name="value3">
            The coordinate on the same axis of vertex 3 of the defining triangle.
            </param>
            <param name="amount1">
            The normalized barycentric (areal) coordinate b2, equal to the weighting factor
            for vertex 2, the coordinate of which is specified in value2.
            </param>
            <param name="amount2">
            The normalized barycentric (areal) coordinate b3, equal to the weighting factor
            for vertex 3, the coordinate of which is specified in value3.
            </param>
            <returns>
            Cartesian coordinate of the specified point with respect to the axis being used.
            </returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.CatmullRom(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">
            The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c>
            will be returned.
            </param>
            <param name="max">
            The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c>
            will be returned.
            </param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.Distance(System.Double,System.Double)">
            <summary>
            Calculates the absolute value of the difference of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.Hermite(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.Lerp(System.Double,System.Double,System.Double)">
            <summary>
            Linearly interpolates between two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">
            Value between 0 and 1 indicating the weight of value2.
            </param>
            <returns>Interpolated value.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <c>value1 + (value2 - value1) * amount</c>
            Passing amount a value of 0 will cause value1 to be returned, a value of 1 will
            cause value2 to be returned.
            </remarks>
        </member>
        <member name="M:CFX.Utilities.MathHelper.Max(System.Double,System.Double)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.Min(System.Double,System.Double)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.SmoothStep(System.Double,System.Double,System.Double)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.ToDegrees(System.Double)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>
            This method uses double precision internally, though it returns single double.
            Factor = 180 / pi
            </remarks>
        </member>
        <member name="M:CFX.Utilities.MathHelper.ToRadians(System.Double)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>
            This method uses double precision internally, though it returns single double.
            Factor = pi / 180
            </remarks>
        </member>
        <member name="M:CFX.Utilities.MathHelper.WrapAngle(System.Double)">
            <summary>
            Reduces a given angle to a value between pi and -pi.
            </summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">
            The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c>
            will be returned.
            </param>
            <param name="max">
            The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c>
            will be returned.
            </param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:CFX.Utilities.MathHelper.GetMachineEpsilonFloat">
            <summary>
            Find the current machine's Epsilon for the double data type.
            (That is, the largest double, e,  where e == 0.0 is true.)
            </summary>
        </member>
        <member name="T:CFX.Utilities.NamespaceDoc">
            <summary>
            Constains various utility and helper classes, such as diagnostic logging, etc.
            </summary>
        </member>
        <member name="T:CFX.Utilities.StateConverter">
            <summary>
            Utility helper class for converting numeric state codes to and from SEMI enumerations
            </summary>
        </member>
        <member name="F:CFX.Utilities.StateConverter.DefaultResourceState">
            <summary>
            Constant indicating the default ResourceState (if not defined).
            </summary>
        </member>
        <member name="M:CFX.Utilities.StateConverter.GetSemiE10State(CFX.Structures.ResourceState)">
            <summary>
            Converts a semi state code to its E10 equivalent.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:CFX.Utilities.StateConverter.GetSemiE58State(CFX.Structures.ResourceState)">
            <summary>
            Converts a semi state code to its E10 equivalent.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="T:CFX.WhoIsThereRequest">
             <summary>
             Allows any CFX endpoint to discover all of the other endpoints participating in this CFX network, 
             and their capabilities. All other CFX endpoints matching the specified criteria
             must then respond to this broadcast.  The response includes the endpoint's identity (CFX Handle),
             as well as the information needed to contact the endpoint.
             <code language="none">
             {
               "SupportedTopicQueryType": "All",
               "SupportedTopics": [
                 {
                   "TopicName": "CFX.Production",
                   "TopicSupportType": "Publisher",
                   "SupportedMessages": []
                 },
                 {
                   "TopicName": "CFX.Production.Appplication",
                   "TopicSupportType": "Publisher",
                   "SupportedMessages": []
                 }
               ]
             }
             </code>
            </summary>
        </member>
        <member name="M:CFX.WhoIsThereRequest.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.WhoIsThereRequest.SupportedTopicQueryType">
            <summary>
            If the sender is interested only in certain types of endpoints, 
            tbis property specifies how SupportedTopics list will be interpreted.
            </summary>
        </member>
        <member name="P:CFX.WhoIsThereRequest.SupportedTopics">
            <summary>
            An optional list of CFX topics.  Only machines supporting any or all of these
            CFX topics will respond to this broadcast.
            </summary>
        </member>
        <member name="T:CFX.WhoIsThereResponse">
            <summary>
            Allows any CFX endpoint to discover all of the other endpoints participating in this CFX network, 
            and their capabilities. All other CFX endpoints must then respond to this broadcast, providing
            information about themselves.  The response provides basic information about the endpoint, 
            including its CFX Handle and network hostname / address.
            <code language="none">
            {
              "Result": {
                "Result": "Success",
                "ResultCode": 0,
                "Message": null
              },
              "CFXHandle": "SMTPlus.Model_21232.SN23123",
              "RequestNetworkUri": "amqp://host33/",
              "RequestTargetAddress": "/queue/SN23123"
            }
            </code>
            </summary>
        </member>
        <member name="M:CFX.WhoIsThereResponse.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:CFX.WhoIsThereResponse.Result">
            <summary>
            Result of the request.
            </summary>
        </member>
        <member name="P:CFX.WhoIsThereResponse.CFXHandle">
            <summary>
            The handle of the endpoint that is responding
            </summary>
        </member>
        <member name="P:CFX.WhoIsThereResponse.RequestNetworkUri">
            <summary>
            The network address / Uri to be used for requests to this endpoint
            </summary>
        </member>
        <member name="P:CFX.WhoIsThereResponse.RequestTargetAddress">
            <summary>
            The AMQP 1.0 target address to be used for requests to this endpoint
            </summary>
        </member>
    </members>
</doc>
